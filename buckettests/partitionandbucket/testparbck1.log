scala> testparbck.filter("ziw_row_id = '91c36e90096e5b5b6d5de85077018406'").take(10)
17/11/03 14:39:44 INFO SparkSqlParser: Parsing command: ziw_row_id = '91c36e90096e5b5b6d5de85077018406'
17/11/03 14:39:44 DEBUG Analyzer$ResolveReferences: Resolving 'ziw_row_id to ziw_row_id#71
17/11/03 14:39:44 DEBUG HiveSessionStateBuilder$$anon$1:
=== Result of Batch Resolution ===
!'Filter ('ziw_row_id = 91c36e90096e5b5b6d5de85077018406)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Filter (ziw_row_id#71 = 91c36e90096e5b5b6d5de85077018406)
 +- Project [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fields]   +- Project [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fields]
    +- SubqueryAlias testparbckubqueryAlias testparbck
       +- Relation[c_customer_sk#0,c_customer_id#1,c_current_cdemo_sk#2,c_current_hdemo_sk#3,c_current_addr_sk#4,c_first_shipto_date_sk#5,c_first_sales_date_sk#6,c_first_name#7,c_last_name#8,c_preferred_cust_flag#9,c_birth_day#10,c_birth_month#11,c_birth_year#12,c_birth_country#13,c_login#14,c_email_address#15,c_last_review_date#16,c_customer_sk__customer#17,c_customer_id__customer#18,c_current_cdemo_sk__customer#19,c_current_hdemo_sk__customer#20,c_current_addr_sk__customer#21,c_first_shipto_date_sk__customer#22,c_first_sales_date_sk__customer#23,... 52 more fields] orc                       +- Relation[c_customer_sk#0,c_customer_id#1,c_current_cdemo_sk#2,c_current_hdemo_sk#3,c_current_addr_sk#4,c_first_shipto_date_sk#5,c_first_sales_date_sk#6,c_first_name#7,c_last_name#8,c_preferred_cust_flag#9,c_birth_day#10,c_birth_month#11,c_birth_year#12,c_birth_country#13,c_login#14,c_email_address#15,c_last_review_date#16,c_customer_sk__customer#17,c_customer_id__customer#18,c_current_cdemo_sk__customer#19,c_current_hdemo_sk__customer#20,c_current_addr_sk__customer#21,c_first_shipto_date_sk__customer#22,c_first_sales_date_sk__customer#23,... 52 more fields] orc

17/11/03 14:39:44 DEBUG HiveSessionStateBuilder$$anon$1:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(1, StringType).toString, getcolumnbyordinal(2, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(3, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(4, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(5, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(6, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(7, StringType).toString, getcolumnbyordinal(8, StringType).toString, getcolumnbyordinal(9, StringType).toString, getcolumnbyordinal(10, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(11, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(12, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(13, StringType).toString, getcolumnbyordinal(14, StringType).toString, getcolumnbyordinal(15, StringType).toString, getcolumnbyordinal(16, StringType).toString, getcolumnbyordinal(17, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(18, StringType).toString, getcolumnbyordinal(19, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(20, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(21, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(22, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(23, DecimalType(38,0)).toJavaBigDecimal, ... 128 more fields)), obj#229: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(c_customer_sk#0.toJavaBigDecimal, c_customer_id#1.toString, c_current_cdemo_sk#2.toJavaBigDecimal, c_current_hdemo_sk#3.toJavaBigDecimal, c_current_addr_sk#4.toJavaBigDecimal, c_first_shipto_date_sk#5.toJavaBigDecimal, c_first_sales_date_sk#6.toJavaBigDecimal, c_first_name#7.toString, c_last_name#8.toString, c_preferred_cust_flag#9.toString, c_birth_day#10.toJavaBigDecimal, c_birth_month#11.toJavaBigDecimal, c_birth_year#12.toJavaBigDecimal, c_birth_country#13.toString, c_login#14.toString, c_email_address#15.toString, c_last_review_date#16.toString, c_customer_sk__customer#17.toJavaBigDecimal, c_customer_id__customer#18.toString, c_current_cdemo_sk__customer#19.toJavaBigDecimal, c_current_hdemo_sk__customer#20.toJavaBigDecimal, c_current_addr_sk__customer#21.toJavaBigDecimal, c_first_shipto_date_sk__customer#22.toJavaBigDecimal, c_first_sales_date_sk__customer#23.toJavaBigDecimal, ... 128 more fields), obj#229: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fieldsocalRelation <empty>, [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fields]

17/11/03 14:39:44 DEBUG HiveSessionStateBuilder$$anon$1:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(1, StringType).toString, getcolumnbyordinal(2, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(3, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(4, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(5, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(6, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(7, StringType).toString, getcolumnbyordinal(8, StringType).toString, getcolumnbyordinal(9, StringType).toString, getcolumnbyordinal(10, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(11, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(12, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(13, StringType).toString, getcolumnbyordinal(14, StringType).toString, getcolumnbyordinal(15, StringType).toString, getcolumnbyordinal(16, StringType).toString, getcolumnbyordinal(17, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(18, StringType).toString, getcolumnbyordinal(19, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(20, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(21, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(22, DecimalType(38,0)).toJavaBigDecimal, getcolumnbyordinal(23, DecimalType(38,0)).toJavaBigDecimal, ... 128 more fields)), obj#230: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(c_customer_sk#0.toJavaBigDecimal, c_customer_id#1.toString, c_current_cdemo_sk#2.toJavaBigDecimal, c_current_hdemo_sk#3.toJavaBigDecimal, c_current_addr_sk#4.toJavaBigDecimal, c_first_shipto_date_sk#5.toJavaBigDecimal, c_first_sales_date_sk#6.toJavaBigDecimal, c_first_name#7.toString, c_last_name#8.toString, c_preferred_cust_flag#9.toString, c_birth_day#10.toJavaBigDecimal, c_birth_month#11.toJavaBigDecimal, c_birth_year#12.toJavaBigDecimal, c_birth_country#13.toString, c_login#14.toString, c_email_address#15.toString, c_last_review_date#16.toString, c_customer_sk__customer#17.toJavaBigDecimal, c_customer_id__customer#18.toString, c_current_cdemo_sk__customer#19.toJavaBigDecimal, c_current_hdemo_sk__customer#20.toJavaBigDecimal, c_current_addr_sk__customer#21.toJavaBigDecimal, c_first_shipto_date_sk__customer#22.toJavaBigDecimal, c_first_sales_date_sk__customer#23.toJavaBigDecimal, ... 128 more fields), obj#230: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fieldsocalRelation <empty>, [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fields]

17/11/03 14:39:44 DEBUG BaseSessionStateBuilder$$anon$2:
=== Result of Batch Finish Analysis ===
 GlobalLimit 10                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GlobalLimit 10
 +- LocalLimitocalLimit 10
    +- Filter (ziw_row_id#71 = 91c36e90096e5b5b6d5deilter (ziw_row_id#71 = 91c36e90096e5b5b6d5de85077018406)
       +- Project [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fields]         +- Project [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fields]
!         +- SubqueryAlias testparbckelation[c_customer_sk#0,c_customer_id#1,c_current_cdemo_sk#2,c_current_hdemo_sk#3,c_current_addr_sk#4,c_first_shipto_date_sk#5,c_first_sales_date_sk#6,c_first_name#7,c_last_name#8,c_preferred_cust_flag#9,c_birth_day#10,c_birth_month#11,c_birth_year#12,c_birth_country#13,c_login#14,c_email_address#15,c_last_review_date#16,c_customer_sk__customer#17,c_customer_id__customer#18,c_current_cdemo_sk__customer#19,c_current_hdemo_sk__customer#20,c_current_addr_sk__customer#21,c_first_shipto_date_sk__customer#22,c_first_sales_date_sk__customer#23,... 52 more fields] orc
!            +- Relation[c_customer_sk#0,c_customer_id#1,c_current_cdemo_sk#2,c_current_hdemo_sk#3,c_current_addr_sk#4,c_first_shipto_date_sk#5,c_first_sales_date_sk#6,c_first_name#7,c_last_name#8,c_preferred_cust_flag#9,c_birth_day#10,c_birth_month#11,c_birth_year#12,c_birth_country#13,c_login#14,c_email_address#15,c_last_review_date#16,c_customer_sk__customer#17,c_customer_id__customer#18,c_current_cdemo_sk__customer#19,c_current_hdemo_sk__customer#20,c_current_addr_sk__customer#21,c_first_shipto_date_sk__customer#22,c_first_sales_date_sk__customer#23,... 52 more fields] orc

17/11/03 14:39:44 DEBUG BaseSessionStateBuilder$$anon$2:
=== Result of Batch Operator Optimizations ===
 GlobalLimitlobalLimit 10
 +- LocalLimitocalLimit 10
!   +- Filter (ziw_row_id#71 = 91c36e90096e5b5b6d5deilter (isnotnull(ziw_row_id#71) && (ziw_row_id#71 = 91c36e90096e5b5b6d5de85077018406))
!      +- Project [c_customer_sk#0, c_customer_id#1, c_current_cdemo_sk#2, c_current_hdemo_sk#3, c_current_addr_sk#4, c_first_shipto_date_sk#5, c_first_sales_date_sk#6, c_first_name#7, c_last_name#8, c_preferred_cust_flag#9, c_birth_day#10, c_birth_month#11, c_birth_year#12, c_birth_country#13, c_login#14, c_email_address#15, c_last_review_date#16, c_customer_sk__customer#17, c_customer_id__customer#18, c_current_cdemo_sk__customer#19, c_current_hdemo_sk__customer#20, c_current_addr_sk__customer#21, c_first_shipto_date_sk__customer#22, c_first_sales_date_sk__customer#23, ... 52 more fields]         +- Relation[c_customer_sk#0,c_customer_id#1,c_current_cdemo_sk#2,c_current_hdemo_sk#3,c_current_addr_sk#4,c_first_shipto_date_sk#5,c_first_sales_date_sk#6,c_first_name#7,c_last_name#8,c_preferred_cust_flag#9,c_birth_day#10,c_birth_month#11,c_birth_year#12,c_birth_country#13,c_login#14,c_email_address#15,c_last_review_date#16,c_customer_sk__customer#17,c_customer_id__customer#18,c_current_cdemo_sk__customer#19,c_current_hdemo_sk__customer#20,c_current_addr_sk__customer#21,c_first_shipto_date_sk__customer#22,c_first_sales_date_sk__customer#23,... 52 more fields] orc
!         +- Relation[c_customer_sk#0,c_customer_id#1,c_current_cdemo_sk#2,c_current_hdemo_sk#3,c_current_addr_sk#4,c_first_shipto_date_sk#5,c_first_sales_date_sk#6,c_first_name#7,c_last_name#8,c_preferred_cust_flag#9,c_birth_day#10,c_birth_month#11,c_birth_year#12,c_birth_country#13,c_login#14,c_email_address#15,c_last_review_date#16,c_customer_sk__customer#17,c_customer_id__customer#18,c_current_cdemo_sk__customer#19,c_current_hdemo_sk__customer#20,c_current_addr_sk__customer#21,c_first_shipto_date_sk__customer#22,c_first_sales_date_sk__customer#23,... 52 more fields] orc

17/11/03 14:39:44 INFO FileSourceStrategy: Pruning directories with:
17/11/03 14:39:44 INFO FileSourceStrategy: Post-Scan Filters: isnotnull(ziw_row_id#71),(ziw_row_id#71 = 91c36e90096e5b5b6d5de85077018406)
17/11/03 14:39:44 INFO FileSourceStrategy: Output Data Schema: struct<c_customer_sk: decimal(38,0), c_customer_id: string, c_current_cdemo_sk: decimal(38,0), c_current_hdemo_sk: decimal(38,0), c_current_addr_sk: decimal(38,0) ... 73 more fields>
17/11/03 14:39:44 INFO FileSourceScanExec: Pushed Filters: IsNotNull(ziw_row_id),EqualTo(ziw_row_id,91c36e90096e5b5b6d5de85077018406)
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$tableExists$1 - 544680402
17/11/03 14:39:44 DEBUG HiveClientImpl: Looking up default.testparbck
17/11/03 14:39:44 INFO CatalystSqlParser: Parsing command: string
17/11/03 14:39:44 INFO CatalystSqlParser: Parsing command: array<string>
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$getPartitionsByFilter$1 - -1011500113
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$25 - 506592839
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: scala.collection.Seq$
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: org.apache.spark.sql.types.StructType
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: org.apache.spark.sql.types.Metadata
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$26 - -1871743416
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: scala.collection.convert.Decorators$AsJava
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$1 - 745043460
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$2 - 1646132286
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$3 - 1673857467
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$4 - -279586417
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: org.apache.spark.util.Utils$
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$5 - -1908586075
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$6 - 1843915422
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.ql.exec.FileSinkOperator$RecordWriter - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-exec-1.2.1.spark2.jar!/org/apache/hadoop/hive/ql/exec/FileSinkOperator$RecordWriter.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$7 - -1394678498
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$8 - -383822522
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$9 - -1685115229
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$10 - 836717863
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$11 - 1419545947
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$toHiveTable$12 - -1372271815
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: scala.runtime.VolatileByteRef
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.Shim_v0_13$$anonfun$convertFilters$1 - 665976962
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: scala.runtime.AbstractPartialFunction
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.ql.metadata.Partition - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-exec-1.2.1.spark2.jar!/org/apache/hadoop/hive/ql/metadata/Partition.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.ql.plan.AddPartitionDesc - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-exec-1.2.1.spark2.jar!/org/apache/hadoop/hive/ql/plan/AddPartitionDesc.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.ql.plan.DDLDesc - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-exec-1.2.1.spark2.jar!/org/apache/hadoop/hive/ql/plan/DDLDesc.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_args - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_args.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_args$get_partitions_argsStandardSchemeFactory - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_args$get_partitions_argsStandardSchemeFactory.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_args$get_partitions_argsTupleSchemeFactory - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_args$get_partitions_argsTupleSchemeFactory.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_args$_Fields - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_args$_Fields.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_args$get_partitions_argsStandardScheme - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_args$get_partitions_argsStandardScheme.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_result - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_result.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_result$get_partitions_resultStandardSchemeFactory - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_result$get_partitions_resultStandardSchemeFactory.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_result$get_partitions_resultTupleSchemeFactory - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_result$get_partitions_resultTupleSchemeFactory.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_result$_Fields - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_result$_Fields.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_partitions_result$get_partitions_resultStandardScheme - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/ThriftHiveMetastore$get_partitions_result$get_partitions_resultStandardScheme.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.api.Partition$PartitionStandardScheme - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/api/Partition$PartitionStandardScheme.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.metastore.Warehouse - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-metastore-1.2.1.spark2.jar!/org/apache/hadoop/hive/metastore/Warehouse.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.common.FileUtils - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-exec-1.2.1.spark2.jar!/org/apache/hadoop/hive/common/FileUtils.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.common.FileUtils$1 - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-exec-1.2.1.spark2.jar!/org/apache/hadoop/hive/common/FileUtils$1.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: org.apache.hadoop.hive.common.FileUtils$2 - jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/hive-exec-1.2.1.spark2.jar!/org/apache/hadoop/hive/common/FileUtils$2.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: hive class: java.util.BitSet - jar:file:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.131-0.b11.el6_9.x86_64/jre/lib/rt.jar!/java/util/BitSet.class
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$getPartitionsByFilter$1$$anonfun$24 - -502771967
17/11/03 14:39:44 DEBUG IsolatedClientLoader: shared class: org.apache.spark.sql.catalyst.catalog.CatalogTablePartition
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$fromHivePartition$1 - 2048166303
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$fromHivePartition$2 - -741702223
17/11/03 14:39:44 DEBUG IsolatedClientLoader: custom defining: org.apache.spark.sql.hive.client.HiveClientImpl$$anonfun$fromHivePartition$3 - -300286925
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #31
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #31
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getListing took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #32
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #32
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #33
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #33
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 2ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #34
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #34
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #35
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #35
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #36
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #36
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #37
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #37
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #38
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #38
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #39
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #39
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #40
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #40
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #41
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #41
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #42
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #42
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #43
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #43
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #44
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #44
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #45
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #45
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #46
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #46
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #47
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #47
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #48
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #48
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #49
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #49
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #50
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #50
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #51
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #51
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #52
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #52
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #53
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #53
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #54
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #54
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #55
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #55
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #56
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #56
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #57
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #57
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #58
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #58
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #59
17/11/03 14:39:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #59
17/11/03 14:39:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:39:45 DEBUG DFSClient: DFSClient writeChunk allocating new packet seqno=3, src=/spark2-history/local-1509719784165.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=25600
17/11/03 14:39:45 DEBUG DFSClient: DFSClient flush(): bytesCurBlock=38578 lastFlushOffset=25919 createNewBlock=false
17/11/03 14:39:45 DEBUG DFSClient: Queued packet 3
17/11/03 14:39:45 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: 3 offsetInBlock: 25600 lastPacketInBlock: false lastByteOffsetInBlock: 38578
17/11/03 14:39:45 DEBUG DFSClient: Waiting for ack for: 3
17/11/03 14:39:45 DEBUG DFSClient: DFSClient seqno: 3 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 1224748 flag: 0 flag: 0 flag: 0
17/11/03 14:39:45 DEBUG WholeStageCodegenExec:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIterator(references);
/* 003 */ }
/* 004 */
/* 005 */ final class GeneratedIterator extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 006 */   private Object[] references;
/* 007 */   private scala.collection.Iterator[] inputs;
/* 008 */   private org.apache.spark.sql.execution.metric.SQLMetric scan_numOutputRows;
/* 009 */   private scala.collection.Iterator scan_input;
/* 010 */   private org.apache.spark.sql.execution.metric.SQLMetric filter_numOutputRows;
/* 011 */   private UnsafeRow filter_result;
/* 012 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder filter_holder;
/* 013 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter filter_rowWriter;
/* 014 */   private UnsafeRow project_result;
/* 015 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder project_holder;
/* 016 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter project_rowWriter;
/* 017 */
/* 018 */   public GeneratedIterator(Object[] references) {
/* 019 */     this.references = references;
/* 020 */   }
/* 021 */
/* 022 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 023 */     partitionIndex = index;
/* 024 */     this.inputs = inputs;
/* 025 */     this.scan_numOutputRows = (org.apache.spark.sql.execution.metric.SQLMetric) references[0];
/* 026 */     scan_input = inputs[0];
/* 027 */     this.filter_numOutputRows = (org.apache.spark.sql.execution.metric.SQLMetric) references[1];
/* 028 */     filter_result = new UnsafeRow(76);
/* 029 */     this.filter_holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(filter_result, 2368);
/* 030 */     this.filter_rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(filter_holder, 76);
/* 031 */     project_result = new UnsafeRow(76);
/* 032 */     this.project_holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(project_result, 2368);
/* 033 */     this.project_rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(project_holder, 76);
/* 034 */
/* 035 */   }
/* 036 */
/* 037 */   protected void processNext() throws java.io.IOException {
/* 038 */     while (scan_input.hasNext()) {
/* 039 */       InternalRow scan_row = (InternalRow) scan_input.next();
/* 040 */       scan_numOutputRows.add(1);
/* 041 */       boolean scan_isNull147 = scan_row.isNullAt(71);
/* 042 */       UTF8String scan_value147 = scan_isNull147 ? null : (scan_row.getUTF8String(71));
/* 043 */
/* 044 */       if (!(!(scan_isNull147))) continue;
/* 045 */
/* 046 */       boolean filter_isNull2 = false;
/* 047 */
/* 048 */       boolean filter_value2 = false;
/* 049 */       filter_value2 = scan_value147.equals(((UTF8String) references[2]));
/* 050 */       if (!filter_value2) continue;
/* 051 */
/* 052 */       filter_numOutputRows.add(1);
/* 053 */
/* 054 */       boolean scan_isNull76 = scan_row.isNullAt(0);
/* 055 */       Decimal scan_value76 = scan_isNull76 ? null : (scan_row.getDecimal(0, 38, 0));
/* 056 */       boolean scan_isNull77 = scan_row.isNullAt(1);
/* 057 */       UTF8String scan_value77 = scan_isNull77 ? null : (scan_row.getUTF8String(1));
/* 058 */       boolean scan_isNull78 = scan_row.isNullAt(2);
/* 059 */       Decimal scan_value78 = scan_isNull78 ? null : (scan_row.getDecimal(2, 38, 0));
/* 060 */       boolean scan_isNull79 = scan_row.isNullAt(3);
/* 061 */       Decimal scan_value79 = scan_isNull79 ? null : (scan_row.getDecimal(3, 38, 0));
/* 062 */       boolean scan_isNull80 = scan_row.isNullAt(4);
/* 063 */       Decimal scan_value80 = scan_isNull80 ? null : (scan_row.getDecimal(4, 38, 0));
/* 064 */       boolean scan_isNull81 = scan_row.isNullAt(5);
/* 065 */       Decimal scan_value81 = scan_isNull81 ? null : (scan_row.getDecimal(5, 38, 0));
/* 066 */       boolean scan_isNull82 = scan_row.isNullAt(6);
/* 067 */       Decimal scan_value82 = scan_isNull82 ? null : (scan_row.getDecimal(6, 38, 0));
/* 068 */       boolean scan_isNull83 = scan_row.isNullAt(7);
/* 069 */       UTF8String scan_value83 = scan_isNull83 ? null : (scan_row.getUTF8String(7));
/* 070 */       boolean scan_isNull84 = scan_row.isNullAt(8);
/* 071 */       UTF8String scan_value84 = scan_isNull84 ? null : (scan_row.getUTF8String(8));
/* 072 */       boolean scan_isNull85 = scan_row.isNullAt(9);
/* 073 */       UTF8String scan_value85 = scan_isNull85 ? null : (scan_row.getUTF8String(9));
/* 074 */       boolean scan_isNull86 = scan_row.isNullAt(10);
/* 075 */       Decimal scan_value86 = scan_isNull86 ? null : (scan_row.getDecimal(10, 38, 0));
/* 076 */       boolean scan_isNull87 = scan_row.isNullAt(11);
/* 077 */       Decimal scan_value87 = scan_isNull87 ? null : (scan_row.getDecimal(11, 38, 0));
/* 078 */       boolean scan_isNull88 = scan_row.isNullAt(12);
/* 079 */       Decimal scan_value88 = scan_isNull88 ? null : (scan_row.getDecimal(12, 38, 0));
/* 080 */       boolean scan_isNull89 = scan_row.isNullAt(13);
/* 081 */       UTF8String scan_value89 = scan_isNull89 ? null : (scan_row.getUTF8String(13));
/* 082 */       boolean scan_isNull90 = scan_row.isNullAt(14);
/* 083 */       UTF8String scan_value90 = scan_isNull90 ? null : (scan_row.getUTF8String(14));
/* 084 */       boolean scan_isNull91 = scan_row.isNullAt(15);
/* 085 */       UTF8String scan_value91 = scan_isNull91 ? null : (scan_row.getUTF8String(15));
/* 086 */       boolean scan_isNull92 = scan_row.isNullAt(16);
/* 087 */       UTF8String scan_value92 = scan_isNull92 ? null : (scan_row.getUTF8String(16));
/* 088 */       boolean scan_isNull93 = scan_row.isNullAt(17);
/* 089 */       Decimal scan_value93 = scan_isNull93 ? null : (scan_row.getDecimal(17, 38, 0));
/* 090 */       boolean scan_isNull94 = scan_row.isNullAt(18);
/* 091 */       UTF8String scan_value94 = scan_isNull94 ? null : (scan_row.getUTF8String(18));
/* 092 */       boolean scan_isNull95 = scan_row.isNullAt(19);
/* 093 */       Decimal scan_value95 = scan_isNull95 ? null : (scan_row.getDecimal(19, 38, 0));
/* 094 */       boolean scan_isNull96 = scan_row.isNullAt(20);
/* 095 */       Decimal scan_value96 = scan_isNull96 ? null : (scan_row.getDecimal(20, 38, 0));
/* 096 */       boolean scan_isNull97 = scan_row.isNullAt(21);
/* 097 */       Decimal scan_value97 = scan_isNull97 ? null : (scan_row.getDecimal(21, 38, 0));
/* 098 */       boolean scan_isNull98 = scan_row.isNullAt(22);
/* 099 */       Decimal scan_value98 = scan_isNull98 ? null : (scan_row.getDecimal(22, 38, 0));
/* 100 */       boolean scan_isNull99 = scan_row.isNullAt(23);
/* 101 */       Decimal scan_value99 = scan_isNull99 ? null : (scan_row.getDecimal(23, 38, 0));
/* 102 */       boolean scan_isNull100 = scan_row.isNullAt(24);
/* 103 */       UTF8String scan_value100 = scan_isNull100 ? null : (scan_row.getUTF8String(24));
/* 104 */       boolean scan_isNull101 = scan_row.isNullAt(25);
/* 105 */       UTF8String scan_value101 = scan_isNull101 ? null : (scan_row.getUTF8String(25));
/* 106 */       boolean scan_isNull102 = scan_row.isNullAt(26);
/* 107 */       UTF8String scan_value102 = scan_isNull102 ? null : (scan_row.getUTF8String(26));
/* 108 */       boolean scan_isNull103 = scan_row.isNullAt(27);
/* 109 */       UTF8String scan_value103 = scan_isNull103 ? null : (scan_row.getUTF8String(27));
/* 110 */       boolean scan_isNull104 = scan_row.isNullAt(28);
/* 111 */       Decimal scan_value104 = scan_isNull104 ? null : (scan_row.getDecimal(28, 38, 0));
/* 112 */       boolean scan_isNull105 = scan_row.isNullAt(29);
/* 113 */       Decimal scan_value105 = scan_isNull105 ? null : (scan_row.getDecimal(29, 38, 0));
/* 114 */       boolean scan_isNull106 = scan_row.isNullAt(30);
/* 115 */       Decimal scan_value106 = scan_isNull106 ? null : (scan_row.getDecimal(30, 38, 0));
/* 116 */       boolean scan_isNull107 = scan_row.isNullAt(31);
/* 117 */       UTF8String scan_value107 = scan_isNull107 ? null : (scan_row.getUTF8String(31));
/* 118 */       boolean scan_isNull108 = scan_row.isNullAt(32);
/* 119 */       UTF8String scan_value108 = scan_isNull108 ? null : (scan_row.getUTF8String(32));
/* 120 */       boolean scan_isNull109 = scan_row.isNullAt(33);
/* 121 */       UTF8String scan_value109 = scan_isNull109 ? null : (scan_row.getUTF8String(33));
/* 122 */       boolean scan_isNull110 = scan_row.isNullAt(34);
/* 123 */       UTF8String scan_value110 = scan_isNull110 ? null : (scan_row.getUTF8String(34));
/* 124 */       boolean scan_isNull111 = scan_row.isNullAt(35);
/* 125 */       Decimal scan_value111 = scan_isNull111 ? null : (scan_row.getDecimal(35, 38, 0));
/* 126 */       boolean scan_isNull112 = scan_row.isNullAt(36);
/* 127 */       UTF8String scan_value112 = scan_isNull112 ? null : (scan_row.getUTF8String(36));
/* 128 */       boolean scan_isNull113 = scan_row.isNullAt(37);
/* 129 */       Decimal scan_value113 = scan_isNull113 ? null : (scan_row.getDecimal(37, 38, 0));
/* 130 */       boolean scan_isNull114 = scan_row.isNullAt(38);
/* 131 */       Decimal scan_value114 = scan_isNull114 ? null : (scan_row.getDecimal(38, 38, 0));
/* 132 */       boolean scan_isNull115 = scan_row.isNullAt(39);
/* 133 */       Decimal scan_value115 = scan_isNull115 ? null : (scan_row.getDecimal(39, 38, 0));
/* 134 */       boolean scan_isNull116 = scan_row.isNullAt(40);
/* 135 */       Decimal scan_value116 = scan_isNull116 ? null : (scan_row.getDecimal(40, 38, 0));
/* 136 */       boolean scan_isNull117 = scan_row.isNullAt(41);
/* 137 */       Decimal scan_value117 = scan_isNull117 ? null : (scan_row.getDecimal(41, 38, 0));
/* 138 */       boolean scan_isNull118 = scan_row.isNullAt(42);
/* 139 */       UTF8String scan_value118 = scan_isNull118 ? null : (scan_row.getUTF8String(42));
/* 140 */       boolean scan_isNull119 = scan_row.isNullAt(43);
/* 141 */       UTF8String scan_value119 = scan_isNull119 ? null : (scan_row.getUTF8String(43));
/* 142 */       boolean scan_isNull120 = scan_row.isNullAt(44);
/* 143 */       UTF8String scan_value120 = scan_isNull120 ? null : (scan_row.getUTF8String(44));
/* 144 */       boolean scan_isNull121 = scan_row.isNullAt(45);
/* 145 */       UTF8String scan_value121 = scan_isNull121 ? null : (scan_row.getUTF8String(45));
/* 146 */       boolean scan_isNull122 = scan_row.isNullAt(46);
/* 147 */       Decimal scan_value122 = scan_isNull122 ? null : (scan_row.getDecimal(46, 38, 0));
/* 148 */       boolean scan_isNull123 = scan_row.isNullAt(47);
/* 149 */       Decimal scan_value123 = scan_isNull123 ? null : (scan_row.getDecimal(47, 38, 0));
/* 150 */       boolean scan_isNull124 = scan_row.isNullAt(48);
/* 151 */       Decimal scan_value124 = scan_isNull124 ? null : (scan_row.getDecimal(48, 38, 0));
/* 152 */       boolean scan_isNull125 = scan_row.isNullAt(49);
/* 153 */       UTF8String scan_value125 = scan_isNull125 ? null : (scan_row.getUTF8String(49));
/* 154 */       boolean scan_isNull126 = scan_row.isNullAt(50);
/* 155 */       UTF8String scan_value126 = scan_isNull126 ? null : (scan_row.getUTF8String(50));
/* 156 */       boolean scan_isNull127 = scan_row.isNullAt(51);
/* 157 */       UTF8String scan_value127 = scan_isNull127 ? null : (scan_row.getUTF8String(51));
/* 158 */       boolean scan_isNull128 = scan_row.isNullAt(52);
/* 159 */       UTF8String scan_value128 = scan_isNull128 ? null : (scan_row.getUTF8String(52));
/* 160 */       boolean scan_isNull129 = scan_row.isNullAt(53);
/* 161 */       Decimal scan_value129 = scan_isNull129 ? null : (scan_row.getDecimal(53, 38, 0));
/* 162 */       boolean scan_isNull130 = scan_row.isNullAt(54);
/* 163 */       UTF8String scan_value130 = scan_isNull130 ? null : (scan_row.getUTF8String(54));
/* 164 */       boolean scan_isNull131 = scan_row.isNullAt(55);
/* 165 */       Decimal scan_value131 = scan_isNull131 ? null : (scan_row.getDecimal(55, 38, 0));
/* 166 */       boolean scan_isNull132 = scan_row.isNullAt(56);
/* 167 */       Decimal scan_value132 = scan_isNull132 ? null : (scan_row.getDecimal(56, 38, 0));
/* 168 */       boolean scan_isNull133 = scan_row.isNullAt(57);
/* 169 */       Decimal scan_value133 = scan_isNull133 ? null : (scan_row.getDecimal(57, 38, 0));
/* 170 */       boolean scan_isNull134 = scan_row.isNullAt(58);
/* 171 */       Decimal scan_value134 = scan_isNull134 ? null : (scan_row.getDecimal(58, 38, 0));
/* 172 */       boolean scan_isNull135 = scan_row.isNullAt(59);
/* 173 */       Decimal scan_value135 = scan_isNull135 ? null : (scan_row.getDecimal(59, 38, 0));
/* 174 */       boolean scan_isNull136 = scan_row.isNullAt(60);
/* 175 */       UTF8String scan_value136 = scan_isNull136 ? null : (scan_row.getUTF8String(60));
/* 176 */       boolean scan_isNull137 = scan_row.isNullAt(61);
/* 177 */       UTF8String scan_value137 = scan_isNull137 ? null : (scan_row.getUTF8String(61));
/* 178 */       boolean scan_isNull138 = scan_row.isNullAt(62);
/* 179 */       UTF8String scan_value138 = scan_isNull138 ? null : (scan_row.getUTF8String(62));
/* 180 */       boolean scan_isNull139 = scan_row.isNullAt(63);
/* 181 */       UTF8String scan_value139 = scan_isNull139 ? null : (scan_row.getUTF8String(63));
/* 182 */       boolean scan_isNull140 = scan_row.isNullAt(64);
/* 183 */       Decimal scan_value140 = scan_isNull140 ? null : (scan_row.getDecimal(64, 38, 0));
/* 184 */       boolean scan_isNull141 = scan_row.isNullAt(65);
/* 185 */       Decimal scan_value141 = scan_isNull141 ? null : (scan_row.getDecimal(65, 38, 0));
/* 186 */       boolean scan_isNull142 = scan_row.isNullAt(66);
/* 187 */       Decimal scan_value142 = scan_isNull142 ? null : (scan_row.getDecimal(66, 38, 0));
/* 188 */       boolean scan_isNull143 = scan_row.isNullAt(67);
/* 189 */       UTF8String scan_value143 = scan_isNull143 ? null : (scan_row.getUTF8String(67));
/* 190 */       boolean scan_isNull144 = scan_row.isNullAt(68);
/* 191 */       UTF8String scan_value144 = scan_isNull144 ? null : (scan_row.getUTF8String(68));
/* 192 */       boolean scan_isNull145 = scan_row.isNullAt(69);
/* 193 */       UTF8String scan_value145 = scan_isNull145 ? null : (scan_row.getUTF8String(69));
/* 194 */       boolean scan_isNull146 = scan_row.isNullAt(70);
/* 195 */       UTF8String scan_value146 = scan_isNull146 ? null : (scan_row.getUTF8String(70));
/* 196 */       boolean scan_isNull148 = scan_row.isNullAt(72);
/* 197 */       long scan_value148 = scan_isNull148 ? -1L : (scan_row.getLong(72));
/* 198 */       boolean scan_isNull149 = scan_row.isNullAt(73);
/* 199 */       long scan_value149 = scan_isNull149 ? -1L : (scan_row.getLong(73));
/* 200 */       boolean scan_isNull150 = scan_row.isNullAt(74);
/* 201 */       UTF8String scan_value150 = scan_isNull150 ? null : (scan_row.getUTF8String(74));
/* 202 */       boolean scan_isNull151 = scan_row.isNullAt(75);
/* 203 */       UTF8String scan_value151 = scan_isNull151 ? null : (scan_row.getUTF8String(75));
/* 204 */       project_holder.reset();
/* 205 */
/* 206 */       project_rowWriter.zeroOutNullBytes();
/* 207 */
/* 208 */       if (scan_isNull76) {
/* 209 */         project_rowWriter.write(0, (Decimal) null, 38, 0);
/* 210 */       } else {
/* 211 */         project_rowWriter.write(0, scan_value76, 38, 0);
/* 212 */       }
/* 213 */
/* 214 */       if (scan_isNull77) {
/* 215 */         project_rowWriter.setNullAt(1);
/* 216 */       } else {
/* 217 */         project_rowWriter.write(1, scan_value77);
/* 218 */       }
/* 219 */
/* 220 */       if (scan_isNull78) {
/* 221 */         project_rowWriter.write(2, (Decimal) null, 38, 0);
/* 222 */       } else {
/* 223 */         project_rowWriter.write(2, scan_value78, 38, 0);
/* 224 */       }
/* 225 */
/* 226 */       if (scan_isNull79) {
/* 227 */         project_rowWriter.write(3, (Decimal) null, 38, 0);
/* 228 */       } else {
/* 229 */         project_rowWriter.write(3, scan_value79, 38, 0);
/* 230 */       }
/* 231 */
/* 232 */       if (scan_isNull80) {
/* 233 */         project_rowWriter.write(4, (Decimal) null, 38, 0);
/* 234 */       } else {
/* 235 */         project_rowWriter.write(4, scan_value80, 38, 0);
/* 236 */       }
/* 237 */
/* 238 */       if (scan_isNull81) {
/* 239 */         project_rowWriter.write(5, (Decimal) null, 38, 0);
/* 240 */       } else {
/* 241 */         project_rowWriter.write(5, scan_value81, 38, 0);
/* 242 */       }
/* 243 */
/* 244 */       if (scan_isNull82) {
/* 245 */         project_rowWriter.write(6, (Decimal) null, 38, 0);
/* 246 */       } else {
/* 247 */         project_rowWriter.write(6, scan_value82, 38, 0);
/* 248 */       }
/* 249 */
/* 250 */       if (scan_isNull83) {
/* 251 */         project_rowWriter.setNullAt(7);
/* 252 */       } else {
/* 253 */         project_rowWriter.write(7, scan_value83);
/* 254 */       }
/* 255 */
/* 256 */       if (scan_isNull84) {
/* 257 */         project_rowWriter.setNullAt(8);
/* 258 */       } else {
/* 259 */         project_rowWriter.write(8, scan_value84);
/* 260 */       }
/* 261 */
/* 262 */       if (scan_isNull85) {
/* 263 */         project_rowWriter.setNullAt(9);
/* 264 */       } else {
/* 265 */         project_rowWriter.write(9, scan_value85);
/* 266 */       }
/* 267 */
/* 268 */       if (scan_isNull86) {
/* 269 */         project_rowWriter.write(10, (Decimal) null, 38, 0);
/* 270 */       } else {
/* 271 */         project_rowWriter.write(10, scan_value86, 38, 0);
/* 272 */       }
/* 273 */
/* 274 */       if (scan_isNull87) {
/* 275 */         project_rowWriter.write(11, (Decimal) null, 38, 0);
/* 276 */       } else {
/* 277 */         project_rowWriter.write(11, scan_value87, 38, 0);
/* 278 */       }
/* 279 */
/* 280 */       if (scan_isNull88) {
/* 281 */         project_rowWriter.write(12, (Decimal) null, 38, 0);
/* 282 */       } else {
/* 283 */         project_rowWriter.write(12, scan_value88, 38, 0);
/* 284 */       }
/* 285 */
/* 286 */       if (scan_isNull89) {
/* 287 */         project_rowWriter.setNullAt(13);
/* 288 */       } else {
/* 289 */         project_rowWriter.write(13, scan_value89);
/* 290 */       }
/* 291 */
/* 292 */       if (scan_isNull90) {
/* 293 */         project_rowWriter.setNullAt(14);
/* 294 */       } else {
/* 295 */         project_rowWriter.write(14, scan_value90);
/* 296 */       }
/* 297 */
/* 298 */       if (scan_isNull91) {
/* 299 */         project_rowWriter.setNullAt(15);
/* 300 */       } else {
/* 301 */         project_rowWriter.write(15, scan_value91);
/* 302 */       }
/* 303 */
/* 304 */       if (scan_isNull92) {
/* 305 */         project_rowWriter.setNullAt(16);
/* 306 */       } else {
/* 307 */         project_rowWriter.write(16, scan_value92);
/* 308 */       }
/* 309 */
/* 310 */       if (scan_isNull93) {
/* 311 */         project_rowWriter.write(17, (Decimal) null, 38, 0);
/* 312 */       } else {
/* 313 */         project_rowWriter.write(17, scan_value93, 38, 0);
/* 314 */       }
/* 315 */
/* 316 */       if (scan_isNull94) {
/* 317 */         project_rowWriter.setNullAt(18);
/* 318 */       } else {
/* 319 */         project_rowWriter.write(18, scan_value94);
/* 320 */       }
/* 321 */
/* 322 */       if (scan_isNull95) {
/* 323 */         project_rowWriter.write(19, (Decimal) null, 38, 0);
/* 324 */       } else {
/* 325 */         project_rowWriter.write(19, scan_value95, 38, 0);
/* 326 */       }
/* 327 */
/* 328 */       if (scan_isNull96) {
/* 329 */         project_rowWriter.write(20, (Decimal) null, 38, 0);
/* 330 */       } else {
/* 331 */         project_rowWriter.write(20, scan_value96, 38, 0);
/* 332 */       }
/* 333 */
/* 334 */       if (scan_isNull97) {
/* 335 */         project_rowWriter.write(21, (Decimal) null, 38, 0);
/* 336 */       } else {
/* 337 */         project_rowWriter.write(21, scan_value97, 38, 0);
/* 338 */       }
/* 339 */
/* 340 */       if (scan_isNull98) {
/* 341 */         project_rowWriter.write(22, (Decimal) null, 38, 0);
/* 342 */       } else {
/* 343 */         project_rowWriter.write(22, scan_value98, 38, 0);
/* 344 */       }
/* 345 */
/* 346 */       if (scan_isNull99) {
/* 347 */         project_rowWriter.write(23, (Decimal) null, 38, 0);
/* 348 */       } else {
/* 349 */         project_rowWriter.write(23, scan_value99, 38, 0);
/* 350 */       }
/* 351 */
/* 352 */       if (scan_isNull100) {
/* 353 */         project_rowWriter.setNullAt(24);
/* 354 */       } else {
/* 355 */         project_rowWriter.write(24, scan_value100);
/* 356 */       }
/* 357 */
/* 358 */       if (scan_isNull101) {
/* 359 */         project_rowWriter.setNullAt(25);
/* 360 */       } else {
/* 361 */         project_rowWriter.write(25, scan_value101);
/* 362 */       }
/* 363 */
/* 364 */       if (scan_isNull102) {
/* 365 */         project_rowWriter.setNullAt(26);
/* 366 */       } else {
/* 367 */         project_rowWriter.write(26, scan_value102);
/* 368 */       }
/* 369 */
/* 370 */       if (scan_isNull103) {
/* 371 */         project_rowWriter.setNullAt(27);
/* 372 */       } else {
/* 373 */         project_rowWriter.write(27, scan_value103);
/* 374 */       }
/* 375 */
/* 376 */       if (scan_isNull104) {
/* 377 */         project_rowWriter.write(28, (Decimal) null, 38, 0);
/* 378 */       } else {
/* 379 */         project_rowWriter.write(28, scan_value104, 38, 0);
/* 380 */       }
/* 381 */
/* 382 */       if (scan_isNull105) {
/* 383 */         project_rowWriter.write(29, (Decimal) null, 38, 0);
/* 384 */       } else {
/* 385 */         project_rowWriter.write(29, scan_value105, 38, 0);
/* 386 */       }
/* 387 */
/* 388 */       if (scan_isNull106) {
/* 389 */         project_rowWriter.write(30, (Decimal) null, 38, 0);
/* 390 */       } else {
/* 391 */         project_rowWriter.write(30, scan_value106, 38, 0);
/* 392 */       }
/* 393 */
/* 394 */       if (scan_isNull107) {
/* 395 */         project_rowWriter.setNullAt(31);
/* 396 */       } else {
/* 397 */         project_rowWriter.write(31, scan_value107);
/* 398 */       }
/* 399 */
/* 400 */       if (scan_isNull108) {
/* 401 */         project_rowWriter.setNullAt(32);
/* 402 */       } else {
/* 403 */         project_rowWriter.write(32, scan_value108);
/* 404 */       }
/* 405 */
/* 406 */       if (scan_isNull109) {
/* 407 */         project_rowWriter.setNullAt(33);
/* 408 */       } else {
/* 409 */         project_rowWriter.write(33, scan_value109);
/* 410 */       }
/* 411 */
/* 412 */       if (scan_isNull110) {
/* 413 */         project_rowWriter.setNullAt(34);
/* 414 */       } else {
/* 415 */         project_rowWriter.write(34, scan_value110);
/* 416 */       }
/* 417 */
/* 418 */       if (scan_isNull111) {
/* 419 */         project_rowWriter.write(35, (Decimal) null, 38, 0);
/* 420 */       } else {
/* 421 */         project_rowWriter.write(35, scan_value111, 38, 0);
/* 422 */       }
/* 423 */
/* 424 */       if (scan_isNull112) {
/* 425 */         project_rowWriter.setNullAt(36);
/* 426 */       } else {
/* 427 */         project_rowWriter.write(36, scan_value112);
/* 428 */       }
/* 429 */
/* 430 */       if (scan_isNull113) {
/* 431 */         project_rowWriter.write(37, (Decimal) null, 38, 0);
/* 432 */       } else {
/* 433 */         project_rowWriter.write(37, scan_value113, 38, 0);
/* 434 */       }
/* 435 */
/* 436 */       if (scan_isNull114) {
/* 437 */         project_rowWriter.write(38, (Decimal) null, 38, 0);
/* 438 */       } else {
/* 439 */         project_rowWriter.write(38, scan_value114, 38, 0);
/* 440 */       }
/* 441 */
/* 442 */       if (scan_isNull115) {
/* 443 */         project_rowWriter.write(39, (Decimal) null, 38, 0);
/* 444 */       } else {
/* 445 */         project_rowWriter.write(39, scan_value115, 38, 0);
/* 446 */       }
/* 447 */
/* 448 */       if (scan_isNull116) {
/* 449 */         project_rowWriter.write(40, (Decimal) null, 38, 0);
/* 450 */       } else {
/* 451 */         project_rowWriter.write(40, scan_value116, 38, 0);
/* 452 */       }
/* 453 */
/* 454 */       if (scan_isNull117) {
/* 455 */         project_rowWriter.write(41, (Decimal) null, 38, 0);
/* 456 */       } else {
/* 457 */         project_rowWriter.write(41, scan_value117, 38, 0);
/* 458 */       }
/* 459 */
/* 460 */       if (scan_isNull118) {
/* 461 */         project_rowWriter.setNullAt(42);
/* 462 */       } else {
/* 463 */         project_rowWriter.write(42, scan_value118);
/* 464 */       }
/* 465 */
/* 466 */       if (scan_isNull119) {
/* 467 */         project_rowWriter.setNullAt(43);
/* 468 */       } else {
/* 469 */         project_rowWriter.write(43, scan_value119);
/* 470 */       }
/* 471 */
/* 472 */       if (scan_isNull120) {
/* 473 */         project_rowWriter.setNullAt(44);
/* 474 */       } else {
/* 475 */         project_rowWriter.write(44, scan_value120);
/* 476 */       }
/* 477 */
/* 478 */       if (scan_isNull121) {
/* 479 */         project_rowWriter.setNullAt(45);
/* 480 */       } else {
/* 481 */         project_rowWriter.write(45, scan_value121);
/* 482 */       }
/* 483 */
/* 484 */       if (scan_isNull122) {
/* 485 */         project_rowWriter.write(46, (Decimal) null, 38, 0);
/* 486 */       } else {
/* 487 */         project_rowWriter.write(46, scan_value122, 38, 0);
/* 488 */       }
/* 489 */
/* 490 */       if (scan_isNull123) {
/* 491 */         project_rowWriter.write(47, (Decimal) null, 38, 0);
/* 492 */       } else {
/* 493 */         project_rowWriter.write(47, scan_value123, 38, 0);
/* 494 */       }
/* 495 */
/* 496 */       if (scan_isNull124) {
/* 497 */         project_rowWriter.write(48, (Decimal) null, 38, 0);
/* 498 */       } else {
/* 499 */         project_rowWriter.write(48, scan_value124, 38, 0);
/* 500 */       }
/* 501 */
/* 502 */       if (scan_isNull125) {
/* 503 */         project_rowWriter.setNullAt(49);
/* 504 */       } else {
/* 505 */         project_rowWriter.write(49, scan_value125);
/* 506 */       }
/* 507 */
/* 508 */       if (scan_isNull126) {
/* 509 */         project_rowWriter.setNullAt(50);
/* 510 */       } else {
/* 511 */         project_rowWriter.write(50, scan_value126);
/* 512 */       }
/* 513 */
/* 514 */       if (scan_isNull127) {
/* 515 */         project_rowWriter.setNullAt(51);
/* 516 */       } else {
/* 517 */         project_rowWriter.write(51, scan_value127);
/* 518 */       }
/* 519 */
/* 520 */       if (scan_isNull128) {
/* 521 */         project_rowWriter.setNullAt(52);
/* 522 */       } else {
/* 523 */         project_rowWriter.write(52, scan_value128);
/* 524 */       }
/* 525 */
/* 526 */       if (scan_isNull129) {
/* 527 */         project_rowWriter.write(53, (Decimal) null, 38, 0);
/* 528 */       } else {
/* 529 */         project_rowWriter.write(53, scan_value129, 38, 0);
/* 530 */       }
/* 531 */
/* 532 */       if (scan_isNull130) {
/* 533 */         project_rowWriter.setNullAt(54);
/* 534 */       } else {
/* 535 */         project_rowWriter.write(54, scan_value130);
/* 536 */       }
/* 537 */
/* 538 */       if (scan_isNull131) {
/* 539 */         project_rowWriter.write(55, (Decimal) null, 38, 0);
/* 540 */       } else {
/* 541 */         project_rowWriter.write(55, scan_value131, 38, 0);
/* 542 */       }
/* 543 */
/* 544 */       if (scan_isNull132) {
/* 545 */         project_rowWriter.write(56, (Decimal) null, 38, 0);
/* 546 */       } else {
/* 547 */         project_rowWriter.write(56, scan_value132, 38, 0);
/* 548 */       }
/* 549 */
/* 550 */       if (scan_isNull133) {
/* 551 */         project_rowWriter.write(57, (Decimal) null, 38, 0);
/* 552 */       } else {
/* 553 */         project_rowWriter.write(57, scan_value133, 38, 0);
/* 554 */       }
/* 555 */
/* 556 */       if (scan_isNull134) {
/* 557 */         project_rowWriter.write(58, (Decimal) null, 38, 0);
/* 558 */       } else {
/* 559 */         project_rowWriter.write(58, scan_value134, 38, 0);
/* 560 */       }
/* 561 */
/* 562 */       if (scan_isNull135) {
/* 563 */         project_rowWriter.write(59, (Decimal) null, 38, 0);
/* 564 */       } else {
/* 565 */         project_rowWriter.write(59, scan_value135, 38, 0);
/* 566 */       }
/* 567 */
/* 568 */       if (scan_isNull136) {
/* 569 */         project_rowWriter.setNullAt(60);
/* 570 */       } else {
/* 571 */         project_rowWriter.write(60, scan_value136);
/* 572 */       }
/* 573 */
/* 574 */       if (scan_isNull137) {
/* 575 */         project_rowWriter.setNullAt(61);
/* 576 */       } else {
/* 577 */         project_rowWriter.write(61, scan_value137);
/* 578 */       }
/* 579 */
/* 580 */       if (scan_isNull138) {
/* 581 */         project_rowWriter.setNullAt(62);
/* 582 */       } else {
/* 583 */         project_rowWriter.write(62, scan_value138);
/* 584 */       }
/* 585 */
/* 586 */       if (scan_isNull139) {
/* 587 */         project_rowWriter.setNullAt(63);
/* 588 */       } else {
/* 589 */         project_rowWriter.write(63, scan_value139);
/* 590 */       }
/* 591 */
/* 592 */       if (scan_isNull140) {
/* 593 */         project_rowWriter.write(64, (Decimal) null, 38, 0);
/* 594 */       } else {
/* 595 */         project_rowWriter.write(64, scan_value140, 38, 0);
/* 596 */       }
/* 597 */
/* 598 */       if (scan_isNull141) {
/* 599 */         project_rowWriter.write(65, (Decimal) null, 38, 0);
/* 600 */       } else {
/* 601 */         project_rowWriter.write(65, scan_value141, 38, 0);
/* 602 */       }
/* 603 */
/* 604 */       if (scan_isNull142) {
/* 605 */         project_rowWriter.write(66, (Decimal) null, 38, 0);
/* 606 */       } else {
/* 607 */         project_rowWriter.write(66, scan_value142, 38, 0);
/* 608 */       }
/* 609 */
/* 610 */       if (scan_isNull143) {
/* 611 */         project_rowWriter.setNullAt(67);
/* 612 */       } else {
/* 613 */         project_rowWriter.write(67, scan_value143);
/* 614 */       }
/* 615 */
/* 616 */       if (scan_isNull144) {
/* 617 */         project_rowWriter.setNullAt(68);
/* 618 */       } else {
/* 619 */         project_rowWriter.write(68, scan_value144);
/* 620 */       }
/* 621 */
/* 622 */       if (scan_isNull145) {
/* 623 */         project_rowWriter.setNullAt(69);
/* 624 */       } else {
/* 625 */         project_rowWriter.write(69, scan_value145);
/* 626 */       }
/* 627 */
/* 628 */       if (scan_isNull146) {
/* 629 */         project_rowWriter.setNullAt(70);
/* 630 */       } else {
/* 631 */         project_rowWriter.write(70, scan_value146);
/* 632 */       }
/* 633 */
/* 634 */       project_rowWriter.write(71, scan_value147);
/* 635 */
/* 636 */       if (scan_isNull148) {
/* 637 */         project_rowWriter.setNullAt(72);
/* 638 */       } else {
/* 639 */         project_rowWriter.write(72, scan_value148);
/* 640 */       }
/* 641 */
/* 642 */       if (scan_isNull149) {
/* 643 */         project_rowWriter.setNullAt(73);
/* 644 */       } else {
/* 645 */         project_rowWriter.write(73, scan_value149);
/* 646 */       }
/* 647 */
/* 648 */       if (scan_isNull150) {
/* 649 */         project_rowWriter.setNullAt(74);
/* 650 */       } else {
/* 651 */         project_rowWriter.write(74, scan_value150);
/* 652 */       }
/* 653 */
/* 654 */       if (scan_isNull151) {
/* 655 */         project_rowWriter.setNullAt(75);
/* 656 */       } else {
/* 657 */         project_rowWriter.write(75, scan_value151);
/* 658 */       }
/* 659 */       project_result.setTotalSize(project_holder.totalSize());
/* 660 */       append(project_result);
/* 661 */       if (shouldStop()) return;
/* 662 */     }
/* 663 */   }
/* 664 */ }

17/11/03 14:39:45 DEBUG CodeGenerator:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIterator(references);
/* 003 */ }
/* 004 */
/* 005 */ final class GeneratedIterator extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 006 */   private Object[] references;
/* 007 */   private scala.collection.Iterator[] inputs;
/* 008 */   private org.apache.spark.sql.execution.metric.SQLMetric scan_numOutputRows;
/* 009 */   private scala.collection.Iterator scan_input;
/* 010 */   private org.apache.spark.sql.execution.metric.SQLMetric filter_numOutputRows;
/* 011 */   private UnsafeRow filter_result;
/* 012 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder filter_holder;
/* 013 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter filter_rowWriter;
/* 014 */   private UnsafeRow project_result;
/* 015 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder project_holder;
/* 016 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter project_rowWriter;
/* 017 */
/* 018 */   public GeneratedIterator(Object[] references) {
/* 019 */     this.references = references;
/* 020 */   }
/* 021 */
/* 022 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 023 */     partitionIndex = index;
/* 024 */     this.inputs = inputs;
/* 025 */     this.scan_numOutputRows = (org.apache.spark.sql.execution.metric.SQLMetric) references[0];
/* 026 */     scan_input = inputs[0];
/* 027 */     this.filter_numOutputRows = (org.apache.spark.sql.execution.metric.SQLMetric) references[1];
/* 028 */     filter_result = new UnsafeRow(76);
/* 029 */     this.filter_holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(filter_result, 2368);
/* 030 */     this.filter_rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(filter_holder, 76);
/* 031 */     project_result = new UnsafeRow(76);
/* 032 */     this.project_holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(project_result, 2368);
/* 033 */     this.project_rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(project_holder, 76);
/* 034 */
/* 035 */   }
/* 036 */
/* 037 */   protected void processNext() throws java.io.IOException {
/* 038 */     while (scan_input.hasNext()) {
/* 039 */       InternalRow scan_row = (InternalRow) scan_input.next();
/* 040 */       scan_numOutputRows.add(1);
/* 041 */       boolean scan_isNull147 = scan_row.isNullAt(71);
/* 042 */       UTF8String scan_value147 = scan_isNull147 ? null : (scan_row.getUTF8String(71));
/* 043 */
/* 044 */       if (!(!(scan_isNull147))) continue;
/* 045 */
/* 046 */       boolean filter_isNull2 = false;
/* 047 */
/* 048 */       boolean filter_value2 = false;
/* 049 */       filter_value2 = scan_value147.equals(((UTF8String) references[2]));
/* 050 */       if (!filter_value2) continue;
/* 051 */
/* 052 */       filter_numOutputRows.add(1);
/* 053 */
/* 054 */       boolean scan_isNull76 = scan_row.isNullAt(0);
/* 055 */       Decimal scan_value76 = scan_isNull76 ? null : (scan_row.getDecimal(0, 38, 0));
/* 056 */       boolean scan_isNull77 = scan_row.isNullAt(1);
/* 057 */       UTF8String scan_value77 = scan_isNull77 ? null : (scan_row.getUTF8String(1));
/* 058 */       boolean scan_isNull78 = scan_row.isNullAt(2);
/* 059 */       Decimal scan_value78 = scan_isNull78 ? null : (scan_row.getDecimal(2, 38, 0));
/* 060 */       boolean scan_isNull79 = scan_row.isNullAt(3);
/* 061 */       Decimal scan_value79 = scan_isNull79 ? null : (scan_row.getDecimal(3, 38, 0));
/* 062 */       boolean scan_isNull80 = scan_row.isNullAt(4);
/* 063 */       Decimal scan_value80 = scan_isNull80 ? null : (scan_row.getDecimal(4, 38, 0));
/* 064 */       boolean scan_isNull81 = scan_row.isNullAt(5);
/* 065 */       Decimal scan_value81 = scan_isNull81 ? null : (scan_row.getDecimal(5, 38, 0));
/* 066 */       boolean scan_isNull82 = scan_row.isNullAt(6);
/* 067 */       Decimal scan_value82 = scan_isNull82 ? null : (scan_row.getDecimal(6, 38, 0));
/* 068 */       boolean scan_isNull83 = scan_row.isNullAt(7);
/* 069 */       UTF8String scan_value83 = scan_isNull83 ? null : (scan_row.getUTF8String(7));
/* 070 */       boolean scan_isNull84 = scan_row.isNullAt(8);
/* 071 */       UTF8String scan_value84 = scan_isNull84 ? null : (scan_row.getUTF8String(8));
/* 072 */       boolean scan_isNull85 = scan_row.isNullAt(9);
/* 073 */       UTF8String scan_value85 = scan_isNull85 ? null : (scan_row.getUTF8String(9));
/* 074 */       boolean scan_isNull86 = scan_row.isNullAt(10);
/* 075 */       Decimal scan_value86 = scan_isNull86 ? null : (scan_row.getDecimal(10, 38, 0));
/* 076 */       boolean scan_isNull87 = scan_row.isNullAt(11);
/* 077 */       Decimal scan_value87 = scan_isNull87 ? null : (scan_row.getDecimal(11, 38, 0));
/* 078 */       boolean scan_isNull88 = scan_row.isNullAt(12);
/* 079 */       Decimal scan_value88 = scan_isNull88 ? null : (scan_row.getDecimal(12, 38, 0));
/* 080 */       boolean scan_isNull89 = scan_row.isNullAt(13);
/* 081 */       UTF8String scan_value89 = scan_isNull89 ? null : (scan_row.getUTF8String(13));
/* 082 */       boolean scan_isNull90 = scan_row.isNullAt(14);
/* 083 */       UTF8String scan_value90 = scan_isNull90 ? null : (scan_row.getUTF8String(14));
/* 084 */       boolean scan_isNull91 = scan_row.isNullAt(15);
/* 085 */       UTF8String scan_value91 = scan_isNull91 ? null : (scan_row.getUTF8String(15));
/* 086 */       boolean scan_isNull92 = scan_row.isNullAt(16);
/* 087 */       UTF8String scan_value92 = scan_isNull92 ? null : (scan_row.getUTF8String(16));
/* 088 */       boolean scan_isNull93 = scan_row.isNullAt(17);
/* 089 */       Decimal scan_value93 = scan_isNull93 ? null : (scan_row.getDecimal(17, 38, 0));
/* 090 */       boolean scan_isNull94 = scan_row.isNullAt(18);
/* 091 */       UTF8String scan_value94 = scan_isNull94 ? null : (scan_row.getUTF8String(18));
/* 092 */       boolean scan_isNull95 = scan_row.isNullAt(19);
/* 093 */       Decimal scan_value95 = scan_isNull95 ? null : (scan_row.getDecimal(19, 38, 0));
/* 094 */       boolean scan_isNull96 = scan_row.isNullAt(20);
/* 095 */       Decimal scan_value96 = scan_isNull96 ? null : (scan_row.getDecimal(20, 38, 0));
/* 096 */       boolean scan_isNull97 = scan_row.isNullAt(21);
/* 097 */       Decimal scan_value97 = scan_isNull97 ? null : (scan_row.getDecimal(21, 38, 0));
/* 098 */       boolean scan_isNull98 = scan_row.isNullAt(22);
/* 099 */       Decimal scan_value98 = scan_isNull98 ? null : (scan_row.getDecimal(22, 38, 0));
/* 100 */       boolean scan_isNull99 = scan_row.isNullAt(23);
/* 101 */       Decimal scan_value99 = scan_isNull99 ? null : (scan_row.getDecimal(23, 38, 0));
/* 102 */       boolean scan_isNull100 = scan_row.isNullAt(24);
/* 103 */       UTF8String scan_value100 = scan_isNull100 ? null : (scan_row.getUTF8String(24));
/* 104 */       boolean scan_isNull101 = scan_row.isNullAt(25);
/* 105 */       UTF8String scan_value101 = scan_isNull101 ? null : (scan_row.getUTF8String(25));
/* 106 */       boolean scan_isNull102 = scan_row.isNullAt(26);
/* 107 */       UTF8String scan_value102 = scan_isNull102 ? null : (scan_row.getUTF8String(26));
/* 108 */       boolean scan_isNull103 = scan_row.isNullAt(27);
/* 109 */       UTF8String scan_value103 = scan_isNull103 ? null : (scan_row.getUTF8String(27));
/* 110 */       boolean scan_isNull104 = scan_row.isNullAt(28);
/* 111 */       Decimal scan_value104 = scan_isNull104 ? null : (scan_row.getDecimal(28, 38, 0));
/* 112 */       boolean scan_isNull105 = scan_row.isNullAt(29);
/* 113 */       Decimal scan_value105 = scan_isNull105 ? null : (scan_row.getDecimal(29, 38, 0));
/* 114 */       boolean scan_isNull106 = scan_row.isNullAt(30);
/* 115 */       Decimal scan_value106 = scan_isNull106 ? null : (scan_row.getDecimal(30, 38, 0));
/* 116 */       boolean scan_isNull107 = scan_row.isNullAt(31);
/* 117 */       UTF8String scan_value107 = scan_isNull107 ? null : (scan_row.getUTF8String(31));
/* 118 */       boolean scan_isNull108 = scan_row.isNullAt(32);
/* 119 */       UTF8String scan_value108 = scan_isNull108 ? null : (scan_row.getUTF8String(32));
/* 120 */       boolean scan_isNull109 = scan_row.isNullAt(33);
/* 121 */       UTF8String scan_value109 = scan_isNull109 ? null : (scan_row.getUTF8String(33));
/* 122 */       boolean scan_isNull110 = scan_row.isNullAt(34);
/* 123 */       UTF8String scan_value110 = scan_isNull110 ? null : (scan_row.getUTF8String(34));
/* 124 */       boolean scan_isNull111 = scan_row.isNullAt(35);
/* 125 */       Decimal scan_value111 = scan_isNull111 ? null : (scan_row.getDecimal(35, 38, 0));
/* 126 */       boolean scan_isNull112 = scan_row.isNullAt(36);
/* 127 */       UTF8String scan_value112 = scan_isNull112 ? null : (scan_row.getUTF8String(36));
/* 128 */       boolean scan_isNull113 = scan_row.isNullAt(37);
/* 129 */       Decimal scan_value113 = scan_isNull113 ? null : (scan_row.getDecimal(37, 38, 0));
/* 130 */       boolean scan_isNull114 = scan_row.isNullAt(38);
/* 131 */       Decimal scan_value114 = scan_isNull114 ? null : (scan_row.getDecimal(38, 38, 0));
/* 132 */       boolean scan_isNull115 = scan_row.isNullAt(39);
/* 133 */       Decimal scan_value115 = scan_isNull115 ? null : (scan_row.getDecimal(39, 38, 0));
/* 134 */       boolean scan_isNull116 = scan_row.isNullAt(40);
/* 135 */       Decimal scan_value116 = scan_isNull116 ? null : (scan_row.getDecimal(40, 38, 0));
/* 136 */       boolean scan_isNull117 = scan_row.isNullAt(41);
/* 137 */       Decimal scan_value117 = scan_isNull117 ? null : (scan_row.getDecimal(41, 38, 0));
/* 138 */       boolean scan_isNull118 = scan_row.isNullAt(42);
/* 139 */       UTF8String scan_value118 = scan_isNull118 ? null : (scan_row.getUTF8String(42));
/* 140 */       boolean scan_isNull119 = scan_row.isNullAt(43);
/* 141 */       UTF8String scan_value119 = scan_isNull119 ? null : (scan_row.getUTF8String(43));
/* 142 */       boolean scan_isNull120 = scan_row.isNullAt(44);
/* 143 */       UTF8String scan_value120 = scan_isNull120 ? null : (scan_row.getUTF8String(44));
/* 144 */       boolean scan_isNull121 = scan_row.isNullAt(45);
/* 145 */       UTF8String scan_value121 = scan_isNull121 ? null : (scan_row.getUTF8String(45));
/* 146 */       boolean scan_isNull122 = scan_row.isNullAt(46);
/* 147 */       Decimal scan_value122 = scan_isNull122 ? null : (scan_row.getDecimal(46, 38, 0));
/* 148 */       boolean scan_isNull123 = scan_row.isNullAt(47);
/* 149 */       Decimal scan_value123 = scan_isNull123 ? null : (scan_row.getDecimal(47, 38, 0));
/* 150 */       boolean scan_isNull124 = scan_row.isNullAt(48);
/* 151 */       Decimal scan_value124 = scan_isNull124 ? null : (scan_row.getDecimal(48, 38, 0));
/* 152 */       boolean scan_isNull125 = scan_row.isNullAt(49);
/* 153 */       UTF8String scan_value125 = scan_isNull125 ? null : (scan_row.getUTF8String(49));
/* 154 */       boolean scan_isNull126 = scan_row.isNullAt(50);
/* 155 */       UTF8String scan_value126 = scan_isNull126 ? null : (scan_row.getUTF8String(50));
/* 156 */       boolean scan_isNull127 = scan_row.isNullAt(51);
/* 157 */       UTF8String scan_value127 = scan_isNull127 ? null : (scan_row.getUTF8String(51));
/* 158 */       boolean scan_isNull128 = scan_row.isNullAt(52);
/* 159 */       UTF8String scan_value128 = scan_isNull128 ? null : (scan_row.getUTF8String(52));
/* 160 */       boolean scan_isNull129 = scan_row.isNullAt(53);
/* 161 */       Decimal scan_value129 = scan_isNull129 ? null : (scan_row.getDecimal(53, 38, 0));
/* 162 */       boolean scan_isNull130 = scan_row.isNullAt(54);
/* 163 */       UTF8String scan_value130 = scan_isNull130 ? null : (scan_row.getUTF8String(54));
/* 164 */       boolean scan_isNull131 = scan_row.isNullAt(55);
/* 165 */       Decimal scan_value131 = scan_isNull131 ? null : (scan_row.getDecimal(55, 38, 0));
/* 166 */       boolean scan_isNull132 = scan_row.isNullAt(56);
/* 167 */       Decimal scan_value132 = scan_isNull132 ? null : (scan_row.getDecimal(56, 38, 0));
/* 168 */       boolean scan_isNull133 = scan_row.isNullAt(57);
/* 169 */       Decimal scan_value133 = scan_isNull133 ? null : (scan_row.getDecimal(57, 38, 0));
/* 170 */       boolean scan_isNull134 = scan_row.isNullAt(58);
/* 171 */       Decimal scan_value134 = scan_isNull134 ? null : (scan_row.getDecimal(58, 38, 0));
/* 172 */       boolean scan_isNull135 = scan_row.isNullAt(59);
/* 173 */       Decimal scan_value135 = scan_isNull135 ? null : (scan_row.getDecimal(59, 38, 0));
/* 174 */       boolean scan_isNull136 = scan_row.isNullAt(60);
/* 175 */       UTF8String scan_value136 = scan_isNull136 ? null : (scan_row.getUTF8String(60));
/* 176 */       boolean scan_isNull137 = scan_row.isNullAt(61);
/* 177 */       UTF8String scan_value137 = scan_isNull137 ? null : (scan_row.getUTF8String(61));
/* 178 */       boolean scan_isNull138 = scan_row.isNullAt(62);
/* 179 */       UTF8String scan_value138 = scan_isNull138 ? null : (scan_row.getUTF8String(62));
/* 180 */       boolean scan_isNull139 = scan_row.isNullAt(63);
/* 181 */       UTF8String scan_value139 = scan_isNull139 ? null : (scan_row.getUTF8String(63));
/* 182 */       boolean scan_isNull140 = scan_row.isNullAt(64);
/* 183 */       Decimal scan_value140 = scan_isNull140 ? null : (scan_row.getDecimal(64, 38, 0));
/* 184 */       boolean scan_isNull141 = scan_row.isNullAt(65);
/* 185 */       Decimal scan_value141 = scan_isNull141 ? null : (scan_row.getDecimal(65, 38, 0));
/* 186 */       boolean scan_isNull142 = scan_row.isNullAt(66);
/* 187 */       Decimal scan_value142 = scan_isNull142 ? null : (scan_row.getDecimal(66, 38, 0));
/* 188 */       boolean scan_isNull143 = scan_row.isNullAt(67);
/* 189 */       UTF8String scan_value143 = scan_isNull143 ? null : (scan_row.getUTF8String(67));
/* 190 */       boolean scan_isNull144 = scan_row.isNullAt(68);
/* 191 */       UTF8String scan_value144 = scan_isNull144 ? null : (scan_row.getUTF8String(68));
/* 192 */       boolean scan_isNull145 = scan_row.isNullAt(69);
/* 193 */       UTF8String scan_value145 = scan_isNull145 ? null : (scan_row.getUTF8String(69));
/* 194 */       boolean scan_isNull146 = scan_row.isNullAt(70);
/* 195 */       UTF8String scan_value146 = scan_isNull146 ? null : (scan_row.getUTF8String(70));
/* 196 */       boolean scan_isNull148 = scan_row.isNullAt(72);
/* 197 */       long scan_value148 = scan_isNull148 ? -1L : (scan_row.getLong(72));
/* 198 */       boolean scan_isNull149 = scan_row.isNullAt(73);
/* 199 */       long scan_value149 = scan_isNull149 ? -1L : (scan_row.getLong(73));
/* 200 */       boolean scan_isNull150 = scan_row.isNullAt(74);
/* 201 */       UTF8String scan_value150 = scan_isNull150 ? null : (scan_row.getUTF8String(74));
/* 202 */       boolean scan_isNull151 = scan_row.isNullAt(75);
/* 203 */       UTF8String scan_value151 = scan_isNull151 ? null : (scan_row.getUTF8String(75));
/* 204 */       project_holder.reset();
/* 205 */
/* 206 */       project_rowWriter.zeroOutNullBytes();
/* 207 */
/* 208 */       if (scan_isNull76) {
/* 209 */         project_rowWriter.write(0, (Decimal) null, 38, 0);
/* 210 */       } else {
/* 211 */         project_rowWriter.write(0, scan_value76, 38, 0);
/* 212 */       }
/* 213 */
/* 214 */       if (scan_isNull77) {
/* 215 */         project_rowWriter.setNullAt(1);
/* 216 */       } else {
/* 217 */         project_rowWriter.write(1, scan_value77);
/* 218 */       }
/* 219 */
/* 220 */       if (scan_isNull78) {
/* 221 */         project_rowWriter.write(2, (Decimal) null, 38, 0);
/* 222 */       } else {
/* 223 */         project_rowWriter.write(2, scan_value78, 38, 0);
/* 224 */       }
/* 225 */
/* 226 */       if (scan_isNull79) {
/* 227 */         project_rowWriter.write(3, (Decimal) null, 38, 0);
/* 228 */       } else {
/* 229 */         project_rowWriter.write(3, scan_value79, 38, 0);
/* 230 */       }
/* 231 */
/* 232 */       if (scan_isNull80) {
/* 233 */         project_rowWriter.write(4, (Decimal) null, 38, 0);
/* 234 */       } else {
/* 235 */         project_rowWriter.write(4, scan_value80, 38, 0);
/* 236 */       }
/* 237 */
/* 238 */       if (scan_isNull81) {
/* 239 */         project_rowWriter.write(5, (Decimal) null, 38, 0);
/* 240 */       } else {
/* 241 */         project_rowWriter.write(5, scan_value81, 38, 0);
/* 242 */       }
/* 243 */
/* 244 */       if (scan_isNull82) {
/* 245 */         project_rowWriter.write(6, (Decimal) null, 38, 0);
/* 246 */       } else {
/* 247 */         project_rowWriter.write(6, scan_value82, 38, 0);
/* 248 */       }
/* 249 */
/* 250 */       if (scan_isNull83) {
/* 251 */         project_rowWriter.setNullAt(7);
/* 252 */       } else {
/* 253 */         project_rowWriter.write(7, scan_value83);
/* 254 */       }
/* 255 */
/* 256 */       if (scan_isNull84) {
/* 257 */         project_rowWriter.setNullAt(8);
/* 258 */       } else {
/* 259 */         project_rowWriter.write(8, scan_value84);
/* 260 */       }
/* 261 */
/* 262 */       if (scan_isNull85) {
/* 263 */         project_rowWriter.setNullAt(9);
/* 264 */       } else {
/* 265 */         project_rowWriter.write(9, scan_value85);
/* 266 */       }
/* 267 */
/* 268 */       if (scan_isNull86) {
/* 269 */         project_rowWriter.write(10, (Decimal) null, 38, 0);
/* 270 */       } else {
/* 271 */         project_rowWriter.write(10, scan_value86, 38, 0);
/* 272 */       }
/* 273 */
/* 274 */       if (scan_isNull87) {
/* 275 */         project_rowWriter.write(11, (Decimal) null, 38, 0);
/* 276 */       } else {
/* 277 */         project_rowWriter.write(11, scan_value87, 38, 0);
/* 278 */       }
/* 279 */
/* 280 */       if (scan_isNull88) {
/* 281 */         project_rowWriter.write(12, (Decimal) null, 38, 0);
/* 282 */       } else {
/* 283 */         project_rowWriter.write(12, scan_value88, 38, 0);
/* 284 */       }
/* 285 */
/* 286 */       if (scan_isNull89) {
/* 287 */         project_rowWriter.setNullAt(13);
/* 288 */       } else {
/* 289 */         project_rowWriter.write(13, scan_value89);
/* 290 */       }
/* 291 */
/* 292 */       if (scan_isNull90) {
/* 293 */         project_rowWriter.setNullAt(14);
/* 294 */       } else {
/* 295 */         project_rowWriter.write(14, scan_value90);
/* 296 */       }
/* 297 */
/* 298 */       if (scan_isNull91) {
/* 299 */         project_rowWriter.setNullAt(15);
/* 300 */       } else {
/* 301 */         project_rowWriter.write(15, scan_value91);
/* 302 */       }
/* 303 */
/* 304 */       if (scan_isNull92) {
/* 305 */         project_rowWriter.setNullAt(16);
/* 306 */       } else {
/* 307 */         project_rowWriter.write(16, scan_value92);
/* 308 */       }
/* 309 */
/* 310 */       if (scan_isNull93) {
/* 311 */         project_rowWriter.write(17, (Decimal) null, 38, 0);
/* 312 */       } else {
/* 313 */         project_rowWriter.write(17, scan_value93, 38, 0);
/* 314 */       }
/* 315 */
/* 316 */       if (scan_isNull94) {
/* 317 */         project_rowWriter.setNullAt(18);
/* 318 */       } else {
/* 319 */         project_rowWriter.write(18, scan_value94);
/* 320 */       }
/* 321 */
/* 322 */       if (scan_isNull95) {
/* 323 */         project_rowWriter.write(19, (Decimal) null, 38, 0);
/* 324 */       } else {
/* 325 */         project_rowWriter.write(19, scan_value95, 38, 0);
/* 326 */       }
/* 327 */
/* 328 */       if (scan_isNull96) {
/* 329 */         project_rowWriter.write(20, (Decimal) null, 38, 0);
/* 330 */       } else {
/* 331 */         project_rowWriter.write(20, scan_value96, 38, 0);
/* 332 */       }
/* 333 */
/* 334 */       if (scan_isNull97) {
/* 335 */         project_rowWriter.write(21, (Decimal) null, 38, 0);
/* 336 */       } else {
/* 337 */         project_rowWriter.write(21, scan_value97, 38, 0);
/* 338 */       }
/* 339 */
/* 340 */       if (scan_isNull98) {
/* 341 */         project_rowWriter.write(22, (Decimal) null, 38, 0);
/* 342 */       } else {
/* 343 */         project_rowWriter.write(22, scan_value98, 38, 0);
/* 344 */       }
/* 345 */
/* 346 */       if (scan_isNull99) {
/* 347 */         project_rowWriter.write(23, (Decimal) null, 38, 0);
/* 348 */       } else {
/* 349 */         project_rowWriter.write(23, scan_value99, 38, 0);
/* 350 */       }
/* 351 */
/* 352 */       if (scan_isNull100) {
/* 353 */         project_rowWriter.setNullAt(24);
/* 354 */       } else {
/* 355 */         project_rowWriter.write(24, scan_value100);
/* 356 */       }
/* 357 */
/* 358 */       if (scan_isNull101) {
/* 359 */         project_rowWriter.setNullAt(25);
/* 360 */       } else {
/* 361 */         project_rowWriter.write(25, scan_value101);
/* 362 */       }
/* 363 */
/* 364 */       if (scan_isNull102) {
/* 365 */         project_rowWriter.setNullAt(26);
/* 366 */       } else {
/* 367 */         project_rowWriter.write(26, scan_value102);
/* 368 */       }
/* 369 */
/* 370 */       if (scan_isNull103) {
/* 371 */         project_rowWriter.setNullAt(27);
/* 372 */       } else {
/* 373 */         project_rowWriter.write(27, scan_value103);
/* 374 */       }
/* 375 */
/* 376 */       if (scan_isNull104) {
/* 377 */         project_rowWriter.write(28, (Decimal) null, 38, 0);
/* 378 */       } else {
/* 379 */         project_rowWriter.write(28, scan_value104, 38, 0);
/* 380 */       }
/* 381 */
/* 382 */       if (scan_isNull105) {
/* 383 */         project_rowWriter.write(29, (Decimal) null, 38, 0);
/* 384 */       } else {
/* 385 */         project_rowWriter.write(29, scan_value105, 38, 0);
/* 386 */       }
/* 387 */
/* 388 */       if (scan_isNull106) {
/* 389 */         project_rowWriter.write(30, (Decimal) null, 38, 0);
/* 390 */       } else {
/* 391 */         project_rowWriter.write(30, scan_value106, 38, 0);
/* 392 */       }
/* 393 */
/* 394 */       if (scan_isNull107) {
/* 395 */         project_rowWriter.setNullAt(31);
/* 396 */       } else {
/* 397 */         project_rowWriter.write(31, scan_value107);
/* 398 */       }
/* 399 */
/* 400 */       if (scan_isNull108) {
/* 401 */         project_rowWriter.setNullAt(32);
/* 402 */       } else {
/* 403 */         project_rowWriter.write(32, scan_value108);
/* 404 */       }
/* 405 */
/* 406 */       if (scan_isNull109) {
/* 407 */         project_rowWriter.setNullAt(33);
/* 408 */       } else {
/* 409 */         project_rowWriter.write(33, scan_value109);
/* 410 */       }
/* 411 */
/* 412 */       if (scan_isNull110) {
/* 413 */         project_rowWriter.setNullAt(34);
/* 414 */       } else {
/* 415 */         project_rowWriter.write(34, scan_value110);
/* 416 */       }
/* 417 */
/* 418 */       if (scan_isNull111) {
/* 419 */         project_rowWriter.write(35, (Decimal) null, 38, 0);
/* 420 */       } else {
/* 421 */         project_rowWriter.write(35, scan_value111, 38, 0);
/* 422 */       }
/* 423 */
/* 424 */       if (scan_isNull112) {
/* 425 */         project_rowWriter.setNullAt(36);
/* 426 */       } else {
/* 427 */         project_rowWriter.write(36, scan_value112);
/* 428 */       }
/* 429 */
/* 430 */       if (scan_isNull113) {
/* 431 */         project_rowWriter.write(37, (Decimal) null, 38, 0);
/* 432 */       } else {
/* 433 */         project_rowWriter.write(37, scan_value113, 38, 0);
/* 434 */       }
/* 435 */
/* 436 */       if (scan_isNull114) {
/* 437 */         project_rowWriter.write(38, (Decimal) null, 38, 0);
/* 438 */       } else {
/* 439 */         project_rowWriter.write(38, scan_value114, 38, 0);
/* 440 */       }
/* 441 */
/* 442 */       if (scan_isNull115) {
/* 443 */         project_rowWriter.write(39, (Decimal) null, 38, 0);
/* 444 */       } else {
/* 445 */         project_rowWriter.write(39, scan_value115, 38, 0);
/* 446 */       }
/* 447 */
/* 448 */       if (scan_isNull116) {
/* 449 */         project_rowWriter.write(40, (Decimal) null, 38, 0);
/* 450 */       } else {
/* 451 */         project_rowWriter.write(40, scan_value116, 38, 0);
/* 452 */       }
/* 453 */
/* 454 */       if (scan_isNull117) {
/* 455 */         project_rowWriter.write(41, (Decimal) null, 38, 0);
/* 456 */       } else {
/* 457 */         project_rowWriter.write(41, scan_value117, 38, 0);
/* 458 */       }
/* 459 */
/* 460 */       if (scan_isNull118) {
/* 461 */         project_rowWriter.setNullAt(42);
/* 462 */       } else {
/* 463 */         project_rowWriter.write(42, scan_value118);
/* 464 */       }
/* 465 */
/* 466 */       if (scan_isNull119) {
/* 467 */         project_rowWriter.setNullAt(43);
/* 468 */       } else {
/* 469 */         project_rowWriter.write(43, scan_value119);
/* 470 */       }
/* 471 */
/* 472 */       if (scan_isNull120) {
/* 473 */         project_rowWriter.setNullAt(44);
/* 474 */       } else {
/* 475 */         project_rowWriter.write(44, scan_value120);
/* 476 */       }
/* 477 */
/* 478 */       if (scan_isNull121) {
/* 479 */         project_rowWriter.setNullAt(45);
/* 480 */       } else {
/* 481 */         project_rowWriter.write(45, scan_value121);
/* 482 */       }
/* 483 */
/* 484 */       if (scan_isNull122) {
/* 485 */         project_rowWriter.write(46, (Decimal) null, 38, 0);
/* 486 */       } else {
/* 487 */         project_rowWriter.write(46, scan_value122, 38, 0);
/* 488 */       }
/* 489 */
/* 490 */       if (scan_isNull123) {
/* 491 */         project_rowWriter.write(47, (Decimal) null, 38, 0);
/* 492 */       } else {
/* 493 */         project_rowWriter.write(47, scan_value123, 38, 0);
/* 494 */       }
/* 495 */
/* 496 */       if (scan_isNull124) {
/* 497 */         project_rowWriter.write(48, (Decimal) null, 38, 0);
/* 498 */       } else {
/* 499 */         project_rowWriter.write(48, scan_value124, 38, 0);
/* 500 */       }
/* 501 */
/* 502 */       if (scan_isNull125) {
/* 503 */         project_rowWriter.setNullAt(49);
/* 504 */       } else {
/* 505 */         project_rowWriter.write(49, scan_value125);
/* 506 */       }
/* 507 */
/* 508 */       if (scan_isNull126) {
/* 509 */         project_rowWriter.setNullAt(50);
/* 510 */       } else {
/* 511 */         project_rowWriter.write(50, scan_value126);
/* 512 */       }
/* 513 */
/* 514 */       if (scan_isNull127) {
/* 515 */         project_rowWriter.setNullAt(51);
/* 516 */       } else {
/* 517 */         project_rowWriter.write(51, scan_value127);
/* 518 */       }
/* 519 */
/* 520 */       if (scan_isNull128) {
/* 521 */         project_rowWriter.setNullAt(52);
/* 522 */       } else {
/* 523 */         project_rowWriter.write(52, scan_value128);
/* 524 */       }
/* 525 */
/* 526 */       if (scan_isNull129) {
/* 527 */         project_rowWriter.write(53, (Decimal) null, 38, 0);
/* 528 */       } else {
/* 529 */         project_rowWriter.write(53, scan_value129, 38, 0);
/* 530 */       }
/* 531 */
/* 532 */       if (scan_isNull130) {
/* 533 */         project_rowWriter.setNullAt(54);
/* 534 */       } else {
/* 535 */         project_rowWriter.write(54, scan_value130);
/* 536 */       }
/* 537 */
/* 538 */       if (scan_isNull131) {
/* 539 */         project_rowWriter.write(55, (Decimal) null, 38, 0);
/* 540 */       } else {
/* 541 */         project_rowWriter.write(55, scan_value131, 38, 0);
/* 542 */       }
/* 543 */
/* 544 */       if (scan_isNull132) {
/* 545 */         project_rowWriter.write(56, (Decimal) null, 38, 0);
/* 546 */       } else {
/* 547 */         project_rowWriter.write(56, scan_value132, 38, 0);
/* 548 */       }
/* 549 */
/* 550 */       if (scan_isNull133) {
/* 551 */         project_rowWriter.write(57, (Decimal) null, 38, 0);
/* 552 */       } else {
/* 553 */         project_rowWriter.write(57, scan_value133, 38, 0);
/* 554 */       }
/* 555 */
/* 556 */       if (scan_isNull134) {
/* 557 */         project_rowWriter.write(58, (Decimal) null, 38, 0);
/* 558 */       } else {
/* 559 */         project_rowWriter.write(58, scan_value134, 38, 0);
/* 560 */       }
/* 561 */
/* 562 */       if (scan_isNull135) {
/* 563 */         project_rowWriter.write(59, (Decimal) null, 38, 0);
/* 564 */       } else {
/* 565 */         project_rowWriter.write(59, scan_value135, 38, 0);
/* 566 */       }
/* 567 */
/* 568 */       if (scan_isNull136) {
/* 569 */         project_rowWriter.setNullAt(60);
/* 570 */       } else {
/* 571 */         project_rowWriter.write(60, scan_value136);
/* 572 */       }
/* 573 */
/* 574 */       if (scan_isNull137) {
/* 575 */         project_rowWriter.setNullAt(61);
/* 576 */       } else {
/* 577 */         project_rowWriter.write(61, scan_value137);
/* 578 */       }
/* 579 */
/* 580 */       if (scan_isNull138) {
/* 581 */         project_rowWriter.setNullAt(62);
/* 582 */       } else {
/* 583 */         project_rowWriter.write(62, scan_value138);
/* 584 */       }
/* 585 */
/* 586 */       if (scan_isNull139) {
/* 587 */         project_rowWriter.setNullAt(63);
/* 588 */       } else {
/* 589 */         project_rowWriter.write(63, scan_value139);
/* 590 */       }
/* 591 */
/* 592 */       if (scan_isNull140) {
/* 593 */         project_rowWriter.write(64, (Decimal) null, 38, 0);
/* 594 */       } else {
/* 595 */         project_rowWriter.write(64, scan_value140, 38, 0);
/* 596 */       }
/* 597 */
/* 598 */       if (scan_isNull141) {
/* 599 */         project_rowWriter.write(65, (Decimal) null, 38, 0);
/* 600 */       } else {
/* 601 */         project_rowWriter.write(65, scan_value141, 38, 0);
/* 602 */       }
/* 603 */
/* 604 */       if (scan_isNull142) {
/* 605 */         project_rowWriter.write(66, (Decimal) null, 38, 0);
/* 606 */       } else {
/* 607 */         project_rowWriter.write(66, scan_value142, 38, 0);
/* 608 */       }
/* 609 */
/* 610 */       if (scan_isNull143) {
/* 611 */         project_rowWriter.setNullAt(67);
/* 612 */       } else {
/* 613 */         project_rowWriter.write(67, scan_value143);
/* 614 */       }
/* 615 */
/* 616 */       if (scan_isNull144) {
/* 617 */         project_rowWriter.setNullAt(68);
/* 618 */       } else {
/* 619 */         project_rowWriter.write(68, scan_value144);
/* 620 */       }
/* 621 */
/* 622 */       if (scan_isNull145) {
/* 623 */         project_rowWriter.setNullAt(69);
/* 624 */       } else {
/* 625 */         project_rowWriter.write(69, scan_value145);
/* 626 */       }
/* 627 */
/* 628 */       if (scan_isNull146) {
/* 629 */         project_rowWriter.setNullAt(70);
/* 630 */       } else {
/* 631 */         project_rowWriter.write(70, scan_value146);
/* 632 */       }
/* 633 */
/* 634 */       project_rowWriter.write(71, scan_value147);
/* 635 */
/* 636 */       if (scan_isNull148) {
/* 637 */         project_rowWriter.setNullAt(72);
/* 638 */       } else {
/* 639 */         project_rowWriter.write(72, scan_value148);
/* 640 */       }
/* 641 */
/* 642 */       if (scan_isNull149) {
/* 643 */         project_rowWriter.setNullAt(73);
/* 644 */       } else {
/* 645 */         project_rowWriter.write(73, scan_value149);
/* 646 */       }
/* 647 */
/* 648 */       if (scan_isNull150) {
/* 649 */         project_rowWriter.setNullAt(74);
/* 650 */       } else {
/* 651 */         project_rowWriter.write(74, scan_value150);
/* 652 */       }
/* 653 */
/* 654 */       if (scan_isNull151) {
/* 655 */         project_rowWriter.setNullAt(75);
/* 656 */       } else {
/* 657 */         project_rowWriter.write(75, scan_value151);
/* 658 */       }
/* 659 */       project_result.setTotalSize(project_holder.totalSize());
/* 660 */       append(project_result);
/* 661 */       if (shouldStop()) return;
/* 662 */     }
/* 663 */   }
/* 664 */ }

17/11/03 14:39:45 INFO CodeGenerator: Code generated in 340.542565 ms
17/11/03 14:39:45 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 339.4 KB, free 366.0 MB)
17/11/03 14:39:45 DEBUG BlockManager: Put block broadcast_0 locally took  37 ms
17/11/03 14:39:45 DEBUG BlockManager: Putting block broadcast_0 without replication took  39 ms
17/11/03 14:39:45 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 29.5 KB, free 365.9 MB)
17/11/03 14:39:45 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 172.30.1.247:33650 (size: 29.5 KB, free: 366.3 MB)
17/11/03 14:39:45 DEBUG BlockManagerMaster: Updated info of block broadcast_0_piece0
17/11/03 14:39:45 DEBUG BlockManager: Told master about block broadcast_0_piece0
17/11/03 14:39:45 DEBUG BlockManager: Put block broadcast_0_piece0 locally took  4 ms
17/11/03 14:39:45 DEBUG BlockManager: Putting block broadcast_0_piece0 without replication took  5 ms
17/11/03 14:39:45 INFO SparkContext: Created broadcast 0 from take at <console>:26
17/11/03 14:39:45 INFO FileSourceScanExec: Planning with 3 buckets
17/11/03 14:39:45 DEBUG ClosureCleaner: +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8) +++
17/11/03 14:39:45 DEBUG ClosureCleaner:  + declared fields: 4
17/11/03 14:39:45 DEBUG ClosureCleaner:      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8.serialVersionUID
17/11/03 14:39:45 DEBUG ClosureCleaner:      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8.cleanedSource$2
17/11/03 14:39:45 DEBUG ClosureCleaner:      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8.references$1
17/11/03 14:39:45 DEBUG ClosureCleaner:      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8.durationMs$1
17/11/03 14:39:45 DEBUG ClosureCleaner:  + declared methods: 2
17/11/03 14:39:45 DEBUG ClosureCleaner:      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8.apply(java.lang.Object,java.lang.Object)
17/11/03 14:39:45 DEBUG ClosureCleaner:      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8.apply(int,scala.collection.Iterator)
17/11/03 14:39:45 DEBUG ClosureCleaner:  + inner classes: 1
17/11/03 14:39:45 DEBUG ClosureCleaner:      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1
17/11/03 14:39:45 DEBUG ClosureCleaner:  + outer classes: 0
17/11/03 14:39:45 DEBUG ClosureCleaner:  + outer objects: 0
17/11/03 14:39:45 DEBUG ClosureCleaner:  + populating accessed fields because this is the starting closure
17/11/03 14:39:45 DEBUG ClosureCleaner:  + fields accessed by starting closure: 0
17/11/03 14:39:45 DEBUG ClosureCleaner:  + there are no enclosing objects!
17/11/03 14:39:45 DEBUG ClosureCleaner:  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8) is now cleaned +++
17/11/03 14:39:46 DEBUG ClosureCleaner: +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$3) +++
17/11/03 14:39:46 DEBUG ClosureCleaner:  + declared fields: 1
17/11/03 14:39:46 DEBUG ClosureCleaner:      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$3.serialVersionUID
17/11/03 14:39:46 DEBUG ClosureCleaner:  + declared methods: 2
17/11/03 14:39:46 DEBUG ClosureCleaner:      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$3.apply(java.lang.Object)
17/11/03 14:39:46 DEBUG ClosureCleaner:      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$3.apply(scala.collection.Iterator)
17/11/03 14:39:46 DEBUG ClosureCleaner:  + inner classes: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + outer classes: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + outer objects: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + populating accessed fields because this is the starting closure
17/11/03 14:39:46 DEBUG ClosureCleaner:  + fields accessed by starting closure: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + there are no enclosing objects!
17/11/03 14:39:46 DEBUG ClosureCleaner:  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$3) is now cleaned +++
17/11/03 14:39:46 DEBUG ClosureCleaner: +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
17/11/03 14:39:46 DEBUG ClosureCleaner:  + declared fields: 2
17/11/03 14:39:46 DEBUG ClosureCleaner:      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
17/11/03 14:39:46 DEBUG ClosureCleaner:      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
17/11/03 14:39:46 DEBUG ClosureCleaner:  + declared methods: 2
17/11/03 14:39:46 DEBUG ClosureCleaner:      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
17/11/03 14:39:46 DEBUG ClosureCleaner:      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
17/11/03 14:39:46 DEBUG ClosureCleaner:  + inner classes: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + outer classes: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + outer objects: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + populating accessed fields because this is the starting closure
17/11/03 14:39:46 DEBUG ClosureCleaner:  + fields accessed by starting closure: 0
17/11/03 14:39:46 DEBUG ClosureCleaner:  + there are no enclosing objects!
17/11/03 14:39:46 DEBUG ClosureCleaner:  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
17/11/03 14:39:46 INFO SparkContext: Starting job: take at <console>:26
17/11/03 14:39:46 INFO DAGScheduler: Got job 0 (take at <console>:26) with 1 output partitions
17/11/03 14:39:46 INFO DAGScheduler: Final stage: ResultStage 0 (take at <console>:26)
17/11/03 14:39:46 INFO DAGScheduler: Parents of final stage: List()
17/11/03 14:39:46 INFO DAGScheduler: Missing parents: List()
17/11/03 14:39:46 DEBUG DAGScheduler: submitStage(ResultStage 0)
17/11/03 14:39:46 DEBUG DAGScheduler: missing: List()
17/11/03 14:39:46 INFO DAGScheduler: Submitting ResultStage 0 (MapPartitionsRDD[2] at take at <console>:26), which has no missing parents
17/11/03 14:39:46 DEBUG DAGScheduler: submitMissingTasks(ResultStage 0)
17/11/03 14:39:46 DEBUG DFSClient: DFSClient writeChunk allocating new packet seqno=4, src=/spark2-history/local-1509719784165.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=38400
17/11/03 14:39:46 DEBUG DFSClient: DFSClient flush(): bytesCurBlock=40911 lastFlushOffset=38578 createNewBlock=false
17/11/03 14:39:46 DEBUG DFSClient: Queued packet 4
17/11/03 14:39:46 DEBUG DFSClient: Waiting for ack for: 4
17/11/03 14:39:46 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: 4 offsetInBlock: 38400 lastPacketInBlock: false lastByteOffsetInBlock: 40911
17/11/03 14:39:46 DEBUG DFSClient: DFSClient seqno: 4 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 995462 flag: 0 flag: 0 flag: 0
17/11/03 14:39:46 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 37.3 KB, free 365.9 MB)
17/11/03 14:39:46 DEBUG BlockManager: Put block broadcast_1 locally took  1 ms
17/11/03 14:39:46 DEBUG BlockManager: Putting block broadcast_1 without replication took  2 ms
17/11/03 14:39:46 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 11.2 KB, free 365.9 MB)
17/11/03 14:39:46 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on 172.30.1.247:33650 (size: 11.2 KB, free: 366.3 MB)
17/11/03 14:39:46 DEBUG BlockManagerMaster: Updated info of block broadcast_1_piece0
17/11/03 14:39:46 DEBUG BlockManager: Told master about block broadcast_1_piece0
17/11/03 14:39:46 DEBUG BlockManager: Put block broadcast_1_piece0 locally took  1 ms
17/11/03 14:39:46 DEBUG BlockManager: Putting block broadcast_1_piece0 without replication took  1 ms
17/11/03 14:39:46 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1006
17/11/03 14:39:46 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 0 (MapPartitionsRDD[2] at take at <console>:26) (first 15 tasks are for partitions Vector(0))
17/11/03 14:39:46 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks
17/11/03 14:39:46 DEBUG TaskSetManager: Epoch for TaskSet 0.0: 0
17/11/03 14:39:46 DEBUG TaskSetManager: Valid locality levels for TaskSet 0.0: ANY
17/11/03 14:39:46 DEBUG TaskSchedulerImpl: parentName: , name: TaskSet_0.0, runningTasks: 0
17/11/03 14:39:46 DEBUG TaskSetManager: Valid locality levels for TaskSet 0.0: ANY
17/11/03 14:39:46 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0, localhost, executor driver, partition 0, ANY, 7683 bytes)
17/11/03 14:39:46 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
17/11/03 14:39:46 DEBUG Executor: Task 0's epoch is 0
17/11/03 14:39:46 DEBUG BlockManager: Getting local block broadcast_1
17/11/03 14:39:46 DEBUG BlockManager: Level for block broadcast_1 is StorageLevel(disk, memory, deserialized, 1 replicas)
17/11/03 14:39:46 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-1874275, partition values: [I]
17/11/03 14:39:46 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true],input[75, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(76);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2368);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 76);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */
/* 219 */     boolean isNull75 = i.isNullAt(75);
/* 220 */     UTF8String value75 = isNull75 ? null : (i.getUTF8String(75));
/* 221 */     if (isNull75) {
/* 222 */       rowWriter.setNullAt(75);
/* 223 */     } else {
/* 224 */       rowWriter.write(75, value75);
/* 225 */     }
/* 226 */
/* 227 */   }
/* 228 */
/* 229 */
/* 230 */   private void apply_12(InternalRow i) {
/* 231 */
/* 232 */
/* 233 */     boolean isNull48 = i.isNullAt(48);
/* 234 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 235 */     if (isNull48) {
/* 236 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 237 */     } else {
/* 238 */       rowWriter.write(48, value48, 38, 0);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull49 = i.isNullAt(49);
/* 243 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 244 */     if (isNull49) {
/* 245 */       rowWriter.setNullAt(49);
/* 246 */     } else {
/* 247 */       rowWriter.write(49, value49);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull50 = i.isNullAt(50);
/* 252 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 253 */     if (isNull50) {
/* 254 */       rowWriter.setNullAt(50);
/* 255 */     } else {
/* 256 */       rowWriter.write(50, value50);
/* 257 */     }
/* 258 */
/* 259 */
/* 260 */     boolean isNull51 = i.isNullAt(51);
/* 261 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 262 */     if (isNull51) {
/* 263 */       rowWriter.setNullAt(51);
/* 264 */     } else {
/* 265 */       rowWriter.write(51, value51);
/* 266 */     }
/* 267 */
/* 268 */   }
/* 269 */
/* 270 */
/* 271 */   private void apply_15(InternalRow i) {
/* 272 */
/* 273 */
/* 274 */     boolean isNull60 = i.isNullAt(60);
/* 275 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 276 */     if (isNull60) {
/* 277 */       rowWriter.setNullAt(60);
/* 278 */     } else {
/* 279 */       rowWriter.write(60, value60);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull61 = i.isNullAt(61);
/* 284 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 285 */     if (isNull61) {
/* 286 */       rowWriter.setNullAt(61);
/* 287 */     } else {
/* 288 */       rowWriter.write(61, value61);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull62 = i.isNullAt(62);
/* 293 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 294 */     if (isNull62) {
/* 295 */       rowWriter.setNullAt(62);
/* 296 */     } else {
/* 297 */       rowWriter.write(62, value62);
/* 298 */     }
/* 299 */
/* 300 */
/* 301 */     boolean isNull63 = i.isNullAt(63);
/* 302 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 303 */     if (isNull63) {
/* 304 */       rowWriter.setNullAt(63);
/* 305 */     } else {
/* 306 */       rowWriter.write(63, value63);
/* 307 */     }
/* 308 */
/* 309 */   }
/* 310 */
/* 311 */
/* 312 */   private void apply_9(InternalRow i) {
/* 313 */
/* 314 */
/* 315 */     boolean isNull36 = i.isNullAt(36);
/* 316 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 317 */     if (isNull36) {
/* 318 */       rowWriter.setNullAt(36);
/* 319 */     } else {
/* 320 */       rowWriter.write(36, value36);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull37 = i.isNullAt(37);
/* 325 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 326 */     if (isNull37) {
/* 327 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(37, value37, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull38 = i.isNullAt(38);
/* 334 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 335 */     if (isNull38) {
/* 336 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(38, value38, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */
/* 342 */     boolean isNull39 = i.isNullAt(39);
/* 343 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 344 */     if (isNull39) {
/* 345 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 346 */     } else {
/* 347 */       rowWriter.write(39, value39, 38, 0);
/* 348 */     }
/* 349 */
/* 350 */   }
/* 351 */
/* 352 */
/* 353 */   private void apply_3(InternalRow i) {
/* 354 */
/* 355 */
/* 356 */     boolean isNull12 = i.isNullAt(12);
/* 357 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 358 */     if (isNull12) {
/* 359 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 360 */     } else {
/* 361 */       rowWriter.write(12, value12, 38, 0);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull13 = i.isNullAt(13);
/* 366 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 367 */     if (isNull13) {
/* 368 */       rowWriter.setNullAt(13);
/* 369 */     } else {
/* 370 */       rowWriter.write(13, value13);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull14 = i.isNullAt(14);
/* 375 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 376 */     if (isNull14) {
/* 377 */       rowWriter.setNullAt(14);
/* 378 */     } else {
/* 379 */       rowWriter.write(14, value14);
/* 380 */     }
/* 381 */
/* 382 */
/* 383 */     boolean isNull15 = i.isNullAt(15);
/* 384 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 385 */     if (isNull15) {
/* 386 */       rowWriter.setNullAt(15);
/* 387 */     } else {
/* 388 */       rowWriter.write(15, value15);
/* 389 */     }
/* 390 */
/* 391 */   }
/* 392 */
/* 393 */
/* 394 */   private void apply_6(InternalRow i) {
/* 395 */
/* 396 */
/* 397 */     boolean isNull24 = i.isNullAt(24);
/* 398 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 399 */     if (isNull24) {
/* 400 */       rowWriter.setNullAt(24);
/* 401 */     } else {
/* 402 */       rowWriter.write(24, value24);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull25 = i.isNullAt(25);
/* 407 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 408 */     if (isNull25) {
/* 409 */       rowWriter.setNullAt(25);
/* 410 */     } else {
/* 411 */       rowWriter.write(25, value25);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull26 = i.isNullAt(26);
/* 416 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 417 */     if (isNull26) {
/* 418 */       rowWriter.setNullAt(26);
/* 419 */     } else {
/* 420 */       rowWriter.write(26, value26);
/* 421 */     }
/* 422 */
/* 423 */
/* 424 */     boolean isNull27 = i.isNullAt(27);
/* 425 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 426 */     if (isNull27) {
/* 427 */       rowWriter.setNullAt(27);
/* 428 */     } else {
/* 429 */       rowWriter.write(27, value27);
/* 430 */     }
/* 431 */
/* 432 */   }
/* 433 */
/* 434 */
/* 435 */   private void apply_14(InternalRow i) {
/* 436 */
/* 437 */
/* 438 */     boolean isNull56 = i.isNullAt(56);
/* 439 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 440 */     if (isNull56) {
/* 441 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(56, value56, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull57 = i.isNullAt(57);
/* 448 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 449 */     if (isNull57) {
/* 450 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(57, value57, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull58 = i.isNullAt(58);
/* 457 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 458 */     if (isNull58) {
/* 459 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(58, value58, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */
/* 465 */     boolean isNull59 = i.isNullAt(59);
/* 466 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 467 */     if (isNull59) {
/* 468 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 469 */     } else {
/* 470 */       rowWriter.write(59, value59, 38, 0);
/* 471 */     }
/* 472 */
/* 473 */   }
/* 474 */
/* 475 */
/* 476 */   private void apply_0(InternalRow i) {
/* 477 */
/* 478 */
/* 479 */     boolean isNull = i.isNullAt(0);
/* 480 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 481 */     if (isNull) {
/* 482 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 483 */     } else {
/* 484 */       rowWriter.write(0, value, 38, 0);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull1 = i.isNullAt(1);
/* 489 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 490 */     if (isNull1) {
/* 491 */       rowWriter.setNullAt(1);
/* 492 */     } else {
/* 493 */       rowWriter.write(1, value1);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull2 = i.isNullAt(2);
/* 498 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 499 */     if (isNull2) {
/* 500 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(2, value2, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */
/* 506 */     boolean isNull3 = i.isNullAt(3);
/* 507 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 508 */     if (isNull3) {
/* 509 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 510 */     } else {
/* 511 */       rowWriter.write(3, value3, 38, 0);
/* 512 */     }
/* 513 */
/* 514 */   }
/* 515 */
/* 516 */
/* 517 */   private void apply_17(InternalRow i) {
/* 518 */
/* 519 */
/* 520 */     boolean isNull68 = i.isNullAt(68);
/* 521 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 522 */     if (isNull68) {
/* 523 */       rowWriter.setNullAt(68);
/* 524 */     } else {
/* 525 */       rowWriter.write(68, value68);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull69 = i.isNullAt(69);
/* 530 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 531 */     if (isNull69) {
/* 532 */       rowWriter.setNullAt(69);
/* 533 */     } else {
/* 534 */       rowWriter.write(69, value69);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull70 = i.isNullAt(70);
/* 539 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 540 */     if (isNull70) {
/* 541 */       rowWriter.setNullAt(70);
/* 542 */     } else {
/* 543 */       rowWriter.write(70, value70);
/* 544 */     }
/* 545 */
/* 546 */
/* 547 */     boolean isNull71 = i.isNullAt(71);
/* 548 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 549 */     if (isNull71) {
/* 550 */       rowWriter.setNullAt(71);
/* 551 */     } else {
/* 552 */       rowWriter.write(71, value71);
/* 553 */     }
/* 554 */
/* 555 */   }
/* 556 */
/* 557 */
/* 558 */   private void apply_11(InternalRow i) {
/* 559 */
/* 560 */
/* 561 */     boolean isNull44 = i.isNullAt(44);
/* 562 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 563 */     if (isNull44) {
/* 564 */       rowWriter.setNullAt(44);
/* 565 */     } else {
/* 566 */       rowWriter.write(44, value44);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull45 = i.isNullAt(45);
/* 571 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 572 */     if (isNull45) {
/* 573 */       rowWriter.setNullAt(45);
/* 574 */     } else {
/* 575 */       rowWriter.write(45, value45);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull46 = i.isNullAt(46);
/* 580 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 581 */     if (isNull46) {
/* 582 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(46, value46, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */
/* 588 */     boolean isNull47 = i.isNullAt(47);
/* 589 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 590 */     if (isNull47) {
/* 591 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 592 */     } else {
/* 593 */       rowWriter.write(47, value47, 38, 0);
/* 594 */     }
/* 595 */
/* 596 */   }
/* 597 */
/* 598 */
/* 599 */   private void apply_8(InternalRow i) {
/* 600 */
/* 601 */
/* 602 */     boolean isNull32 = i.isNullAt(32);
/* 603 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 604 */     if (isNull32) {
/* 605 */       rowWriter.setNullAt(32);
/* 606 */     } else {
/* 607 */       rowWriter.write(32, value32);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull33 = i.isNullAt(33);
/* 612 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 613 */     if (isNull33) {
/* 614 */       rowWriter.setNullAt(33);
/* 615 */     } else {
/* 616 */       rowWriter.write(33, value33);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull34 = i.isNullAt(34);
/* 621 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 622 */     if (isNull34) {
/* 623 */       rowWriter.setNullAt(34);
/* 624 */     } else {
/* 625 */       rowWriter.write(34, value34);
/* 626 */     }
/* 627 */
/* 628 */
/* 629 */     boolean isNull35 = i.isNullAt(35);
/* 630 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 631 */     if (isNull35) {
/* 632 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 633 */     } else {
/* 634 */       rowWriter.write(35, value35, 38, 0);
/* 635 */     }
/* 636 */
/* 637 */   }
/* 638 */
/* 639 */
/* 640 */   private void apply_2(InternalRow i) {
/* 641 */
/* 642 */
/* 643 */     boolean isNull8 = i.isNullAt(8);
/* 644 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 645 */     if (isNull8) {
/* 646 */       rowWriter.setNullAt(8);
/* 647 */     } else {
/* 648 */       rowWriter.write(8, value8);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull9 = i.isNullAt(9);
/* 653 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 654 */     if (isNull9) {
/* 655 */       rowWriter.setNullAt(9);
/* 656 */     } else {
/* 657 */       rowWriter.write(9, value9);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull10 = i.isNullAt(10);
/* 662 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 663 */     if (isNull10) {
/* 664 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(10, value10, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */
/* 670 */     boolean isNull11 = i.isNullAt(11);
/* 671 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 672 */     if (isNull11) {
/* 673 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 674 */     } else {
/* 675 */       rowWriter.write(11, value11, 38, 0);
/* 676 */     }
/* 677 */
/* 678 */   }
/* 679 */
/* 680 */
/* 681 */   private void apply_5(InternalRow i) {
/* 682 */
/* 683 */
/* 684 */     boolean isNull20 = i.isNullAt(20);
/* 685 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 686 */     if (isNull20) {
/* 687 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(20, value20, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull21 = i.isNullAt(21);
/* 694 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 695 */     if (isNull21) {
/* 696 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(21, value21, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull22 = i.isNullAt(22);
/* 703 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 704 */     if (isNull22) {
/* 705 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(22, value22, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */
/* 711 */     boolean isNull23 = i.isNullAt(23);
/* 712 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 713 */     if (isNull23) {
/* 714 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 715 */     } else {
/* 716 */       rowWriter.write(23, value23, 38, 0);
/* 717 */     }
/* 718 */
/* 719 */   }
/* 720 */
/* 721 */
/* 722 */   private void apply_10(InternalRow i) {
/* 723 */
/* 724 */
/* 725 */     boolean isNull40 = i.isNullAt(40);
/* 726 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 727 */     if (isNull40) {
/* 728 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(40, value40, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull41 = i.isNullAt(41);
/* 735 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 736 */     if (isNull41) {
/* 737 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 738 */     } else {
/* 739 */       rowWriter.write(41, value41, 38, 0);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull42 = i.isNullAt(42);
/* 744 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 745 */     if (isNull42) {
/* 746 */       rowWriter.setNullAt(42);
/* 747 */     } else {
/* 748 */       rowWriter.write(42, value42);
/* 749 */     }
/* 750 */
/* 751 */
/* 752 */     boolean isNull43 = i.isNullAt(43);
/* 753 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 754 */     if (isNull43) {
/* 755 */       rowWriter.setNullAt(43);
/* 756 */     } else {
/* 757 */       rowWriter.write(43, value43);
/* 758 */     }
/* 759 */
/* 760 */   }
/* 761 */
/* 762 */
/* 763 */   private void apply_13(InternalRow i) {
/* 764 */
/* 765 */
/* 766 */     boolean isNull52 = i.isNullAt(52);
/* 767 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 768 */     if (isNull52) {
/* 769 */       rowWriter.setNullAt(52);
/* 770 */     } else {
/* 771 */       rowWriter.write(52, value52);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull53 = i.isNullAt(53);
/* 776 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 777 */     if (isNull53) {
/* 778 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 779 */     } else {
/* 780 */       rowWriter.write(53, value53, 38, 0);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull54 = i.isNullAt(54);
/* 785 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 786 */     if (isNull54) {
/* 787 */       rowWriter.setNullAt(54);
/* 788 */     } else {
/* 789 */       rowWriter.write(54, value54);
/* 790 */     }
/* 791 */
/* 792 */
/* 793 */     boolean isNull55 = i.isNullAt(55);
/* 794 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 795 */     if (isNull55) {
/* 796 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 797 */     } else {
/* 798 */       rowWriter.write(55, value55, 38, 0);
/* 799 */     }
/* 800 */
/* 801 */   }
/* 802 */
/* 803 */
/* 804 */   // Scala.Function1 need this
/* 805 */   public java.lang.Object apply(java.lang.Object row) {
/* 806 */     return apply((InternalRow) row);
/* 807 */   }
/* 808 */
/* 809 */   public UnsafeRow apply(InternalRow i) {
/* 810 */     holder.reset();
/* 811 */
/* 812 */     rowWriter.zeroOutNullBytes();
/* 813 */     apply_0(i);
/* 814 */     apply_1(i);
/* 815 */     apply_2(i);
/* 816 */     apply_3(i);
/* 817 */     apply_4(i);
/* 818 */     apply_5(i);
/* 819 */     apply_6(i);
/* 820 */     apply_7(i);
/* 821 */     apply_8(i);
/* 822 */     apply_9(i);
/* 823 */     apply_10(i);
/* 824 */     apply_11(i);
/* 825 */     apply_12(i);
/* 826 */     apply_13(i);
/* 827 */     apply_14(i);
/* 828 */     apply_15(i);
/* 829 */     apply_16(i);
/* 830 */     apply_17(i);
/* 831 */     apply_18(i);
/* 832 */     result.setTotalSize(holder.totalSize());
/* 833 */     return result;
/* 834 */   }
/* 835 */ }

17/11/03 14:39:46 DEBUG CodeGenerator:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(76);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2368);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 76);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */
/* 219 */     boolean isNull75 = i.isNullAt(75);
/* 220 */     UTF8String value75 = isNull75 ? null : (i.getUTF8String(75));
/* 221 */     if (isNull75) {
/* 222 */       rowWriter.setNullAt(75);
/* 223 */     } else {
/* 224 */       rowWriter.write(75, value75);
/* 225 */     }
/* 226 */
/* 227 */   }
/* 228 */
/* 229 */
/* 230 */   private void apply_12(InternalRow i) {
/* 231 */
/* 232 */
/* 233 */     boolean isNull48 = i.isNullAt(48);
/* 234 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 235 */     if (isNull48) {
/* 236 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 237 */     } else {
/* 238 */       rowWriter.write(48, value48, 38, 0);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull49 = i.isNullAt(49);
/* 243 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 244 */     if (isNull49) {
/* 245 */       rowWriter.setNullAt(49);
/* 246 */     } else {
/* 247 */       rowWriter.write(49, value49);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull50 = i.isNullAt(50);
/* 252 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 253 */     if (isNull50) {
/* 254 */       rowWriter.setNullAt(50);
/* 255 */     } else {
/* 256 */       rowWriter.write(50, value50);
/* 257 */     }
/* 258 */
/* 259 */
/* 260 */     boolean isNull51 = i.isNullAt(51);
/* 261 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 262 */     if (isNull51) {
/* 263 */       rowWriter.setNullAt(51);
/* 264 */     } else {
/* 265 */       rowWriter.write(51, value51);
/* 266 */     }
/* 267 */
/* 268 */   }
/* 269 */
/* 270 */
/* 271 */   private void apply_15(InternalRow i) {
/* 272 */
/* 273 */
/* 274 */     boolean isNull60 = i.isNullAt(60);
/* 275 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 276 */     if (isNull60) {
/* 277 */       rowWriter.setNullAt(60);
/* 278 */     } else {
/* 279 */       rowWriter.write(60, value60);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull61 = i.isNullAt(61);
/* 284 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 285 */     if (isNull61) {
/* 286 */       rowWriter.setNullAt(61);
/* 287 */     } else {
/* 288 */       rowWriter.write(61, value61);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull62 = i.isNullAt(62);
/* 293 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 294 */     if (isNull62) {
/* 295 */       rowWriter.setNullAt(62);
/* 296 */     } else {
/* 297 */       rowWriter.write(62, value62);
/* 298 */     }
/* 299 */
/* 300 */
/* 301 */     boolean isNull63 = i.isNullAt(63);
/* 302 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 303 */     if (isNull63) {
/* 304 */       rowWriter.setNullAt(63);
/* 305 */     } else {
/* 306 */       rowWriter.write(63, value63);
/* 307 */     }
/* 308 */
/* 309 */   }
/* 310 */
/* 311 */
/* 312 */   private void apply_9(InternalRow i) {
/* 313 */
/* 314 */
/* 315 */     boolean isNull36 = i.isNullAt(36);
/* 316 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 317 */     if (isNull36) {
/* 318 */       rowWriter.setNullAt(36);
/* 319 */     } else {
/* 320 */       rowWriter.write(36, value36);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull37 = i.isNullAt(37);
/* 325 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 326 */     if (isNull37) {
/* 327 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(37, value37, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull38 = i.isNullAt(38);
/* 334 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 335 */     if (isNull38) {
/* 336 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(38, value38, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */
/* 342 */     boolean isNull39 = i.isNullAt(39);
/* 343 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 344 */     if (isNull39) {
/* 345 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 346 */     } else {
/* 347 */       rowWriter.write(39, value39, 38, 0);
/* 348 */     }
/* 349 */
/* 350 */   }
/* 351 */
/* 352 */
/* 353 */   private void apply_3(InternalRow i) {
/* 354 */
/* 355 */
/* 356 */     boolean isNull12 = i.isNullAt(12);
/* 357 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 358 */     if (isNull12) {
/* 359 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 360 */     } else {
/* 361 */       rowWriter.write(12, value12, 38, 0);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull13 = i.isNullAt(13);
/* 366 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 367 */     if (isNull13) {
/* 368 */       rowWriter.setNullAt(13);
/* 369 */     } else {
/* 370 */       rowWriter.write(13, value13);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull14 = i.isNullAt(14);
/* 375 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 376 */     if (isNull14) {
/* 377 */       rowWriter.setNullAt(14);
/* 378 */     } else {
/* 379 */       rowWriter.write(14, value14);
/* 380 */     }
/* 381 */
/* 382 */
/* 383 */     boolean isNull15 = i.isNullAt(15);
/* 384 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 385 */     if (isNull15) {
/* 386 */       rowWriter.setNullAt(15);
/* 387 */     } else {
/* 388 */       rowWriter.write(15, value15);
/* 389 */     }
/* 390 */
/* 391 */   }
/* 392 */
/* 393 */
/* 394 */   private void apply_6(InternalRow i) {
/* 395 */
/* 396 */
/* 397 */     boolean isNull24 = i.isNullAt(24);
/* 398 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 399 */     if (isNull24) {
/* 400 */       rowWriter.setNullAt(24);
/* 401 */     } else {
/* 402 */       rowWriter.write(24, value24);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull25 = i.isNullAt(25);
/* 407 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 408 */     if (isNull25) {
/* 409 */       rowWriter.setNullAt(25);
/* 410 */     } else {
/* 411 */       rowWriter.write(25, value25);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull26 = i.isNullAt(26);
/* 416 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 417 */     if (isNull26) {
/* 418 */       rowWriter.setNullAt(26);
/* 419 */     } else {
/* 420 */       rowWriter.write(26, value26);
/* 421 */     }
/* 422 */
/* 423 */
/* 424 */     boolean isNull27 = i.isNullAt(27);
/* 425 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 426 */     if (isNull27) {
/* 427 */       rowWriter.setNullAt(27);
/* 428 */     } else {
/* 429 */       rowWriter.write(27, value27);
/* 430 */     }
/* 431 */
/* 432 */   }
/* 433 */
/* 434 */
/* 435 */   private void apply_14(InternalRow i) {
/* 436 */
/* 437 */
/* 438 */     boolean isNull56 = i.isNullAt(56);
/* 439 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 440 */     if (isNull56) {
/* 441 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(56, value56, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull57 = i.isNullAt(57);
/* 448 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 449 */     if (isNull57) {
/* 450 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(57, value57, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull58 = i.isNullAt(58);
/* 457 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 458 */     if (isNull58) {
/* 459 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(58, value58, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */
/* 465 */     boolean isNull59 = i.isNullAt(59);
/* 466 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 467 */     if (isNull59) {
/* 468 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 469 */     } else {
/* 470 */       rowWriter.write(59, value59, 38, 0);
/* 471 */     }
/* 472 */
/* 473 */   }
/* 474 */
/* 475 */
/* 476 */   private void apply_0(InternalRow i) {
/* 477 */
/* 478 */
/* 479 */     boolean isNull = i.isNullAt(0);
/* 480 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 481 */     if (isNull) {
/* 482 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 483 */     } else {
/* 484 */       rowWriter.write(0, value, 38, 0);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull1 = i.isNullAt(1);
/* 489 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 490 */     if (isNull1) {
/* 491 */       rowWriter.setNullAt(1);
/* 492 */     } else {
/* 493 */       rowWriter.write(1, value1);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull2 = i.isNullAt(2);
/* 498 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 499 */     if (isNull2) {
/* 500 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(2, value2, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */
/* 506 */     boolean isNull3 = i.isNullAt(3);
/* 507 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 508 */     if (isNull3) {
/* 509 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 510 */     } else {
/* 511 */       rowWriter.write(3, value3, 38, 0);
/* 512 */     }
/* 513 */
/* 514 */   }
/* 515 */
/* 516 */
/* 517 */   private void apply_17(InternalRow i) {
/* 518 */
/* 519 */
/* 520 */     boolean isNull68 = i.isNullAt(68);
/* 521 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 522 */     if (isNull68) {
/* 523 */       rowWriter.setNullAt(68);
/* 524 */     } else {
/* 525 */       rowWriter.write(68, value68);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull69 = i.isNullAt(69);
/* 530 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 531 */     if (isNull69) {
/* 532 */       rowWriter.setNullAt(69);
/* 533 */     } else {
/* 534 */       rowWriter.write(69, value69);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull70 = i.isNullAt(70);
/* 539 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 540 */     if (isNull70) {
/* 541 */       rowWriter.setNullAt(70);
/* 542 */     } else {
/* 543 */       rowWriter.write(70, value70);
/* 544 */     }
/* 545 */
/* 546 */
/* 547 */     boolean isNull71 = i.isNullAt(71);
/* 548 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 549 */     if (isNull71) {
/* 550 */       rowWriter.setNullAt(71);
/* 551 */     } else {
/* 552 */       rowWriter.write(71, value71);
/* 553 */     }
/* 554 */
/* 555 */   }
/* 556 */
/* 557 */
/* 558 */   private void apply_11(InternalRow i) {
/* 559 */
/* 560 */
/* 561 */     boolean isNull44 = i.isNullAt(44);
/* 562 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 563 */     if (isNull44) {
/* 564 */       rowWriter.setNullAt(44);
/* 565 */     } else {
/* 566 */       rowWriter.write(44, value44);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull45 = i.isNullAt(45);
/* 571 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 572 */     if (isNull45) {
/* 573 */       rowWriter.setNullAt(45);
/* 574 */     } else {
/* 575 */       rowWriter.write(45, value45);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull46 = i.isNullAt(46);
/* 580 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 581 */     if (isNull46) {
/* 582 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(46, value46, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */
/* 588 */     boolean isNull47 = i.isNullAt(47);
/* 589 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 590 */     if (isNull47) {
/* 591 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 592 */     } else {
/* 593 */       rowWriter.write(47, value47, 38, 0);
/* 594 */     }
/* 595 */
/* 596 */   }
/* 597 */
/* 598 */
/* 599 */   private void apply_8(InternalRow i) {
/* 600 */
/* 601 */
/* 602 */     boolean isNull32 = i.isNullAt(32);
/* 603 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 604 */     if (isNull32) {
/* 605 */       rowWriter.setNullAt(32);
/* 606 */     } else {
/* 607 */       rowWriter.write(32, value32);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull33 = i.isNullAt(33);
/* 612 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 613 */     if (isNull33) {
/* 614 */       rowWriter.setNullAt(33);
/* 615 */     } else {
/* 616 */       rowWriter.write(33, value33);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull34 = i.isNullAt(34);
/* 621 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 622 */     if (isNull34) {
/* 623 */       rowWriter.setNullAt(34);
/* 624 */     } else {
/* 625 */       rowWriter.write(34, value34);
/* 626 */     }
/* 627 */
/* 628 */
/* 629 */     boolean isNull35 = i.isNullAt(35);
/* 630 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 631 */     if (isNull35) {
/* 632 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 633 */     } else {
/* 634 */       rowWriter.write(35, value35, 38, 0);
/* 635 */     }
/* 636 */
/* 637 */   }
/* 638 */
/* 639 */
/* 640 */   private void apply_2(InternalRow i) {
/* 641 */
/* 642 */
/* 643 */     boolean isNull8 = i.isNullAt(8);
/* 644 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 645 */     if (isNull8) {
/* 646 */       rowWriter.setNullAt(8);
/* 647 */     } else {
/* 648 */       rowWriter.write(8, value8);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull9 = i.isNullAt(9);
/* 653 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 654 */     if (isNull9) {
/* 655 */       rowWriter.setNullAt(9);
/* 656 */     } else {
/* 657 */       rowWriter.write(9, value9);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull10 = i.isNullAt(10);
/* 662 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 663 */     if (isNull10) {
/* 664 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(10, value10, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */
/* 670 */     boolean isNull11 = i.isNullAt(11);
/* 671 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 672 */     if (isNull11) {
/* 673 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 674 */     } else {
/* 675 */       rowWriter.write(11, value11, 38, 0);
/* 676 */     }
/* 677 */
/* 678 */   }
/* 679 */
/* 680 */
/* 681 */   private void apply_5(InternalRow i) {
/* 682 */
/* 683 */
/* 684 */     boolean isNull20 = i.isNullAt(20);
/* 685 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 686 */     if (isNull20) {
/* 687 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(20, value20, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull21 = i.isNullAt(21);
/* 694 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 695 */     if (isNull21) {
/* 696 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(21, value21, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull22 = i.isNullAt(22);
/* 703 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 704 */     if (isNull22) {
/* 705 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(22, value22, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */
/* 711 */     boolean isNull23 = i.isNullAt(23);
/* 712 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 713 */     if (isNull23) {
/* 714 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 715 */     } else {
/* 716 */       rowWriter.write(23, value23, 38, 0);
/* 717 */     }
/* 718 */
/* 719 */   }
/* 720 */
/* 721 */
/* 722 */   private void apply_10(InternalRow i) {
/* 723 */
/* 724 */
/* 725 */     boolean isNull40 = i.isNullAt(40);
/* 726 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 727 */     if (isNull40) {
/* 728 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(40, value40, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull41 = i.isNullAt(41);
/* 735 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 736 */     if (isNull41) {
/* 737 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 738 */     } else {
/* 739 */       rowWriter.write(41, value41, 38, 0);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull42 = i.isNullAt(42);
/* 744 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 745 */     if (isNull42) {
/* 746 */       rowWriter.setNullAt(42);
/* 747 */     } else {
/* 748 */       rowWriter.write(42, value42);
/* 749 */     }
/* 750 */
/* 751 */
/* 752 */     boolean isNull43 = i.isNullAt(43);
/* 753 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 754 */     if (isNull43) {
/* 755 */       rowWriter.setNullAt(43);
/* 756 */     } else {
/* 757 */       rowWriter.write(43, value43);
/* 758 */     }
/* 759 */
/* 760 */   }
/* 761 */
/* 762 */
/* 763 */   private void apply_13(InternalRow i) {
/* 764 */
/* 765 */
/* 766 */     boolean isNull52 = i.isNullAt(52);
/* 767 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 768 */     if (isNull52) {
/* 769 */       rowWriter.setNullAt(52);
/* 770 */     } else {
/* 771 */       rowWriter.write(52, value52);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull53 = i.isNullAt(53);
/* 776 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 777 */     if (isNull53) {
/* 778 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 779 */     } else {
/* 780 */       rowWriter.write(53, value53, 38, 0);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull54 = i.isNullAt(54);
/* 785 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 786 */     if (isNull54) {
/* 787 */       rowWriter.setNullAt(54);
/* 788 */     } else {
/* 789 */       rowWriter.write(54, value54);
/* 790 */     }
/* 791 */
/* 792 */
/* 793 */     boolean isNull55 = i.isNullAt(55);
/* 794 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 795 */     if (isNull55) {
/* 796 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 797 */     } else {
/* 798 */       rowWriter.write(55, value55, 38, 0);
/* 799 */     }
/* 800 */
/* 801 */   }
/* 802 */
/* 803 */
/* 804 */   // Scala.Function1 need this
/* 805 */   public java.lang.Object apply(java.lang.Object row) {
/* 806 */     return apply((InternalRow) row);
/* 807 */   }
/* 808 */
/* 809 */   public UnsafeRow apply(InternalRow i) {
/* 810 */     holder.reset();
/* 811 */
/* 812 */     rowWriter.zeroOutNullBytes();
/* 813 */     apply_0(i);
/* 814 */     apply_1(i);
/* 815 */     apply_2(i);
/* 816 */     apply_3(i);
/* 817 */     apply_4(i);
/* 818 */     apply_5(i);
/* 819 */     apply_6(i);
/* 820 */     apply_7(i);
/* 821 */     apply_8(i);
/* 822 */     apply_9(i);
/* 823 */     apply_10(i);
/* 824 */     apply_11(i);
/* 825 */     apply_12(i);
/* 826 */     apply_13(i);
/* 827 */     apply_14(i);
/* 828 */     apply_15(i);
/* 829 */     apply_16(i);
/* 830 */     apply_17(i);
/* 831 */     apply_18(i);
/* 832 */     result.setTotalSize(holder.totalSize());
/* 833 */     return result;
/* 834 */   }
/* 835 */ }

17/11/03 14:39:46 DEBUG TransportClientFactory: Creating new connection to /172.30.1.247:40402
17/11/03 14:39:46 DEBUG AbstractByteBuf: -Dio.netty.buffer.bytebuf.checkAccessible: true
17/11/03 14:39:46 DEBUG ResourceLeakDetector: -Dio.netty.leakDetection.level: simple
17/11/03 14:39:46 DEBUG ResourceLeakDetector: -Dio.netty.leakDetection.maxRecords: 4
17/11/03 14:39:46 DEBUG ResourceLeakDetectorFactory: Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7691fcf8
17/11/03 14:39:46 DEBUG TransportClientFactory: Connection to /172.30.1.247:40402 successful, running bootstraps...
17/11/03 14:39:46 INFO TransportClientFactory: Successfully created connection to /172.30.1.247:40402 after 37 ms (0 ms spent in bootstraps)
17/11/03 14:39:46 DEBUG TransportClient: Sending stream request for /classes/org/apache/spark/sql/catalyst/expressions/Object.class to /172.30.1.247:40402
17/11/03 14:39:46 DEBUG Recycler: -Dio.netty.recycler.maxCapacity.default: 32768
17/11/03 14:39:46 DEBUG Recycler: -Dio.netty.recycler.maxSharedCapacityFactor: 2
17/11/03 14:39:46 DEBUG Recycler: -Dio.netty.recycler.linkCapacity: 16
17/11/03 14:39:46 DEBUG Recycler: -Dio.netty.recycler.ratio: 8
17/11/03 14:39:46 DEBUG NettyRpcEnv: Error downloading stream /classes/org/apache/spark/sql/catalyst/expressions/Object.class.
java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/Object.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:39:46 DEBUG ExecutorClassLoader: Did not load class org.apache.spark.sql.catalyst.expressions.Object from REPL class server at spark://172.30.1.247:40402/classes
java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/Object.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader.readAndTransformClass(ExecutorClassLoader.scala:204)
	at org.apache.spark.repl.ExecutorClassLoader.findClassLocally(ExecutorClassLoader.scala:163)
	at org.apache.spark.repl.ExecutorClassLoader.findClass(ExecutorClassLoader.scala:80)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:34)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:30)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.codehaus.janino.ClassLoaderIClassLoader.findIClass(ClassLoaderIClassLoader.java:83)
	at org.codehaus.janino.IClassLoader.loadIClass(IClassLoader.java:288)
	at org.codehaus.janino.UnitCompiler.findTypeByName(UnitCompiler.java:7611)
	at org.codehaus.janino.UnitCompiler.getReferenceType(UnitCompiler.java:5906)
	at org.codehaus.janino.UnitCompiler.getReferenceType(UnitCompiler.java:5751)
	at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5732)
	at org.codehaus.janino.UnitCompiler.access$13200(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$18.visitReferenceType(UnitCompiler.java:5668)
	at org.codehaus.janino.UnitCompiler$18.visitReferenceType(UnitCompiler.java:5660)
	at org.codehaus.janino.Java$ReferenceType.accept(Java.java:3356)
	at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5660)
	at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:6007)
	at org.codehaus.janino.UnitCompiler.access$13000(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$18.visitArrayType(UnitCompiler.java:5666)
	at org.codehaus.janino.UnitCompiler$18.visitArrayType(UnitCompiler.java:5660)
	at org.codehaus.janino.Java$ArrayType.accept(Java.java:3425)
	at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5660)
	at org.codehaus.janino.UnitCompiler.access$1200(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$32.getParameterTypes2(UnitCompiler.java:9326)
	at org.codehaus.janino.IClass$IInvocable.getParameterTypes(IClass.java:853)
	at org.codehaus.janino.IClass$IMethod.getDescriptor2(IClass.java:1084)
	at org.codehaus.janino.IClass$IInvocable.getDescriptor(IClass.java:865)
	at org.codehaus.janino.IClass.getIMethods(IClass.java:211)
	at org.codehaus.janino.IClass.getIMethods(IClass.java:200)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:439)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:420)
	at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:374)
	at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:369)
	at org.codehaus.janino.Java$AbstractPackageMemberClassDeclaration.accept(Java.java:1309)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:369)
	at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:345)
	at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:396)
	at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:311)
	at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:229)
	at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:196)
	at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:91)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.org$apache$spark$sql$catalyst$expressions$codegen$CodeGenerator$$doCompile(CodeGenerator.scala:960)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1027)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1024)
	at org.spark_project.guava.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)
	at org.spark_project.guava.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)
	at org.spark_project.guava.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)
	at org.spark_project.guava.cache.LocalCache$Segment.get(LocalCache.java:2257)
	at org.spark_project.guava.cache.LocalCache.get(LocalCache.java:4000)
	at org.spark_project.guava.cache.LocalCache.getOrLoad(LocalCache.java:4004)
	at org.spark_project.guava.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4874)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.compile(CodeGenerator.scala:906)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:412)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:366)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:32)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:890)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:887)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.appendPartitionColumns$lzycompute(FileFormat.scala:127)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.appendPartitionColumns(FileFormat.scala:126)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/Object.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:98)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.org$apache$spark$repl$ExecutorClassLoader$$anon$$super$read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1$$anonfun$read$2.apply$mcI$sp(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:102)
	... 87 more
Caused by: java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/Object.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	... 1 more
17/11/03 14:39:46 DEBUG TransportClient: Sending stream request for /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class to /172.30.1.247:40402
17/11/03 14:39:46 DEBUG NettyRpcEnv: Error downloading stream /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class.
java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:39:46 DEBUG ExecutorClassLoader: Did not load class org.apache.spark.sql.catalyst.expressions.GeneratedClass from REPL class server at spark://172.30.1.247:40402/classes
java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader.readAndTransformClass(ExecutorClassLoader.scala:204)
	at org.apache.spark.repl.ExecutorClassLoader.findClassLocally(ExecutorClassLoader.scala:163)
	at org.apache.spark.repl.ExecutorClassLoader.findClass(ExecutorClassLoader.scala:80)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:34)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)
	at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:229)
	at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:196)
	at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:91)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.org$apache$spark$sql$catalyst$expressions$codegen$CodeGenerator$$doCompile(CodeGenerator.scala:960)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1027)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1024)
	at org.spark_project.guava.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)
	at org.spark_project.guava.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)
	at org.spark_project.guava.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)
	at org.spark_project.guava.cache.LocalCache$Segment.get(LocalCache.java:2257)
	at org.spark_project.guava.cache.LocalCache.get(LocalCache.java:4000)
	at org.spark_project.guava.cache.LocalCache.getOrLoad(LocalCache.java:4004)
	at org.spark_project.guava.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4874)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.compile(CodeGenerator.scala:906)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:412)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:366)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:32)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:890)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:887)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.appendPartitionColumns$lzycompute(FileFormat.scala:127)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.appendPartitionColumns(FileFormat.scala:126)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:98)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.org$apache$spark$repl$ExecutorClassLoader$$anon$$super$read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1$$anonfun$read$2.apply$mcI$sp(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:102)
	... 52 more
Caused by: java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	... 1 more
17/11/03 14:39:46 INFO CodeGenerator: Code generated in 280.174449 ms
17/11/03 14:39:46 DEBUG TransportClient: Sending stream request for /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class to /172.30.1.247:40402
17/11/03 14:39:46 DEBUG NettyRpcEnv: Error downloading stream /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class.
java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:39:46 DEBUG ExecutorClassLoader: Did not load class org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection from REPL class server at spark://172.30.1.247:40402/classes
java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader.readAndTransformClass(ExecutorClassLoader.scala:204)
	at org.apache.spark.repl.ExecutorClassLoader.findClassLocally(ExecutorClassLoader.scala:163)
	at org.apache.spark.repl.ExecutorClassLoader.findClass(ExecutorClassLoader.scala:80)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:34)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass.generate(generated.java:2)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:413)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:366)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:32)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:890)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:887)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.appendPartitionColumns$lzycompute(FileFormat.scala:127)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.appendPartitionColumns(FileFormat.scala:126)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:98)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.org$apache$spark$repl$ExecutorClassLoader$$anon$$super$read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1$$anonfun$read$2.apply$mcI$sp(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:102)
	... 38 more
Caused by: java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	... 1 more
17/11/03 14:39:46 DEBUG BlockManager: Getting local block broadcast_0
17/11/03 14:39:46 DEBUG BlockManager: Level for block broadcast_0 is StorageLevel(disk, memory, deserialized, 1 replicas)
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #60
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #60
17/11/03 14:39:46 DEBUG ProtobufRpcEngine: Call: getFileInfo took 4ms
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #61
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #61
17/11/03 14:39:46 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:46 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1874275
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039; getBlockSize()=1874275; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039; getBlockSize()=1874275; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #62
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #62
17/11/03 14:39:46 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:39:46 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:39:46 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:46 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:39:46 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:39:46 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #63
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #63
17/11/03 14:39:46 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:46 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1874275
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039; getBlockSize()=1874275; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039; getBlockSize()=1874275; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #64
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #64
17/11/03 14:39:46 DEBUG ProtobufRpcEngine: Call: getFileInfo took 2ms
17/11/03 14:39:46 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:39:46 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:46 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:39:46 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:39:46 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 1874275}
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #65
17/11/03 14:39:46 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #65
17/11/03 14:39:46 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:46 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1874275
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039; getBlockSize()=1874275; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039; getBlockSize()=1874275; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:39:46 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:39:46 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:39:46 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:46 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:39:46 DEBUG RecordReaderImpl: chunks = [range start: 19926 end: 1019793]
17/11/03 14:39:46 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:39:46 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:46 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:39:46 DEBUG RecordReaderImpl: merge = [data range [19926, 1019793), size: 999867 type: array-backed]
17/11/03 14:39:46 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:39:46 DEBUG CodeGenerator:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:39:46 DEBUG TransportClient: Sending stream request for /classes/org/apache/spark/sql/catalyst/expressions/Object.class to /172.30.1.247:40402
17/11/03 14:39:46 DEBUG NettyRpcEnv: Error downloading stream /classes/org/apache/spark/sql/catalyst/expressions/Object.class.
java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/Object.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:39:46 DEBUG ExecutorClassLoader: Did not load class org.apache.spark.sql.catalyst.expressions.Object from REPL class server at spark://172.30.1.247:40402/classes
java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/Object.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader.readAndTransformClass(ExecutorClassLoader.scala:204)
	at org.apache.spark.repl.ExecutorClassLoader.findClassLocally(ExecutorClassLoader.scala:163)
	at org.apache.spark.repl.ExecutorClassLoader.findClass(ExecutorClassLoader.scala:80)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:34)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:30)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.codehaus.janino.ClassLoaderIClassLoader.findIClass(ClassLoaderIClassLoader.java:83)
	at org.codehaus.janino.IClassLoader.loadIClass(IClassLoader.java:288)
	at org.codehaus.janino.UnitCompiler.findTypeByName(UnitCompiler.java:7611)
	at org.codehaus.janino.UnitCompiler.getReferenceType(UnitCompiler.java:5906)
	at org.codehaus.janino.UnitCompiler.getReferenceType(UnitCompiler.java:5751)
	at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:5732)
	at org.codehaus.janino.UnitCompiler.access$13200(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$18.visitReferenceType(UnitCompiler.java:5668)
	at org.codehaus.janino.UnitCompiler$18.visitReferenceType(UnitCompiler.java:5660)
	at org.codehaus.janino.Java$ReferenceType.accept(Java.java:3356)
	at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5660)
	at org.codehaus.janino.UnitCompiler.getType2(UnitCompiler.java:6007)
	at org.codehaus.janino.UnitCompiler.access$13000(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$18.visitArrayType(UnitCompiler.java:5666)
	at org.codehaus.janino.UnitCompiler$18.visitArrayType(UnitCompiler.java:5660)
	at org.codehaus.janino.Java$ArrayType.accept(Java.java:3425)
	at org.codehaus.janino.UnitCompiler.getType(UnitCompiler.java:5660)
	at org.codehaus.janino.UnitCompiler.access$1200(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$32.getParameterTypes2(UnitCompiler.java:9326)
	at org.codehaus.janino.IClass$IInvocable.getParameterTypes(IClass.java:853)
	at org.codehaus.janino.IClass$IMethod.getDescriptor2(IClass.java:1084)
	at org.codehaus.janino.IClass$IInvocable.getDescriptor(IClass.java:865)
	at org.codehaus.janino.IClass.getIMethods(IClass.java:211)
	at org.codehaus.janino.IClass.getIMethods(IClass.java:200)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:439)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:420)
	at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:374)
	at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:369)
	at org.codehaus.janino.Java$AbstractPackageMemberClassDeclaration.accept(Java.java:1309)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:369)
	at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:345)
	at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:396)
	at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:311)
	at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:229)
	at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:196)
	at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:91)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.org$apache$spark$sql$catalyst$expressions$codegen$CodeGenerator$$doCompile(CodeGenerator.scala:960)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1027)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1024)
	at org.spark_project.guava.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)
	at org.spark_project.guava.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)
	at org.spark_project.guava.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)
	at org.spark_project.guava.cache.LocalCache$Segment.get(LocalCache.java:2257)
	at org.spark_project.guava.cache.LocalCache.get(LocalCache.java:4000)
	at org.spark_project.guava.cache.LocalCache.getOrLoad(LocalCache.java:4004)
	at org.spark_project.guava.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4874)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.compile(CodeGenerator.scala:906)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:412)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:366)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:32)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:890)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:130)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:120)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:114)
	at org.apache.spark.sql.hive.orc.OrcRelation$.unwrapOrcStructs(OrcFileFormat.scala:279)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:164)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:136)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/Object.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:98)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.org$apache$spark$repl$ExecutorClassLoader$$anon$$super$read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1$$anonfun$read$2.apply$mcI$sp(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:102)
	... 90 more
Caused by: java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/Object.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	... 1 more
17/11/03 14:39:47 DEBUG TransportClient: Sending stream request for /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class to /172.30.1.247:40402
17/11/03 14:39:47 DEBUG NettyRpcEnv: Error downloading stream /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class.
java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:39:47 DEBUG ExecutorClassLoader: Did not load class org.apache.spark.sql.catalyst.expressions.GeneratedClass from REPL class server at spark://172.30.1.247:40402/classes
java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader.readAndTransformClass(ExecutorClassLoader.scala:204)
	at org.apache.spark.repl.ExecutorClassLoader.findClassLocally(ExecutorClassLoader.scala:163)
	at org.apache.spark.repl.ExecutorClassLoader.findClass(ExecutorClassLoader.scala:80)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:34)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:315)
	at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:229)
	at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:196)
	at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:91)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.org$apache$spark$sql$catalyst$expressions$codegen$CodeGenerator$$doCompile(CodeGenerator.scala:960)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1027)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:1024)
	at org.spark_project.guava.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)
	at org.spark_project.guava.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)
	at org.spark_project.guava.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)
	at org.spark_project.guava.cache.LocalCache$Segment.get(LocalCache.java:2257)
	at org.spark_project.guava.cache.LocalCache.get(LocalCache.java:4000)
	at org.spark_project.guava.cache.LocalCache.getOrLoad(LocalCache.java:4004)
	at org.spark_project.guava.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4874)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.compile(CodeGenerator.scala:906)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:412)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:366)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:32)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:890)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:130)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:120)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:114)
	at org.apache.spark.sql.hive.orc.OrcRelation$.unwrapOrcStructs(OrcFileFormat.scala:279)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:164)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:136)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:98)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.org$apache$spark$repl$ExecutorClassLoader$$anon$$super$read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1$$anonfun$read$2.apply$mcI$sp(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:102)
	... 55 more
Caused by: java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	... 1 more
17/11/03 14:39:47 INFO CodeGenerator: Code generated in 83.132725 ms
17/11/03 14:39:47 DEBUG TransportClient: Sending stream request for /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class to /172.30.1.247:40402
17/11/03 14:39:47 DEBUG NettyRpcEnv: Error downloading stream /classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class.
java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:39:47 DEBUG ExecutorClassLoader: Did not load class org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection from REPL class server at spark://172.30.1.247:40402/classes
java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader.readAndTransformClass(ExecutorClassLoader.scala:204)
	at org.apache.spark.repl.ExecutorClassLoader.findClassLocally(ExecutorClassLoader.scala:163)
	at org.apache.spark.repl.ExecutorClassLoader.findClass(ExecutorClassLoader.scala:80)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at org.apache.spark.util.ParentClassLoader.loadClass(ParentClassLoader.scala:34)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass.generate(generated.java:2)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:413)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:366)
	at org.apache.spark.sql.catalyst.expressions.codegen.GenerateUnsafeProjection$.create(GenerateUnsafeProjection.scala:32)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator.generate(CodeGenerator.scala:890)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:130)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:120)
	at org.apache.spark.sql.catalyst.expressions.UnsafeProjection$.create(Projection.scala:114)
	at org.apache.spark.sql.hive.orc.OrcRelation$.unwrapOrcStructs(OrcFileFormat.scala:279)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:164)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:136)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:105)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.read(ExecutorClassLoader.scala:98)
	at java.io.FilterInputStream.read(FilterInputStream.java:107)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.org$apache$spark$repl$ExecutorClassLoader$$anon$$super$read(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1$$anonfun$read$2.apply$mcI$sp(ExecutorClassLoader.scala:95)
	at org.apache.spark.repl.ExecutorClassLoader$$anon$1.toClassNotFound(ExecutorClassLoader.scala:102)
	... 41 more
Caused by: java.lang.RuntimeException: Stream '/classes/org/apache/spark/sql/catalyst/expressions/GeneratedClass$SpecificUnsafeProjection.class' was not found.
	at org.apache.spark.network.client.TransportResponseHandler.handle(TransportResponseHandler.java:242)
	at org.apache.spark.network.server.TransportChannelHandler.channelRead(TransportChannelHandler.java:120)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:287)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at org.apache.spark.network.util.TransportFrameDecoder.channelRead(TransportFrameDecoder.java:85)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:643)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:566)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	... 1 more
17/11/03 14:39:48 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$Accept@4077bc38 on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=0 selected=0
17/11/03 14:39:48 DEBUG ManagedSelector: Selector loop woken up from select, 0/0 selected
17/11/03 14:39:48 DEBUG ManagedSelector: Running change org.spark_project.jetty.io.ManagedSelector$Accept@4077bc38
17/11/03 14:39:48 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@7e5d97a2 on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:48 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@7e5d97a2
17/11/03 14:39:48 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:48 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:48 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@7e5d97a2
17/11/03 14:39:48 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:48 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:48 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:48 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:48 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:48 DEBUG AbstractEndPoint: onOpen SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,5/30000,null@0}{io=0/0,kio=0,kro=0}
17/11/03 14:39:48 DEBUG IdleTimeout: SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,6/30000,null@0}{io=0/0,kio=0,kro=0} idle timeout check, elapsed: 6 ms, remaining: 29994 ms
17/11/03 14:39:49 DEBUG HttpChannel: new HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null} -> SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,74/30000,null@0}{io=0/0,kio=0,kro=0},null,HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false}
17/11/03 14:39:49 DEBUG HttpConnection: New HTTP Connection HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,89/30000,null@0}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG AbstractConnection: onOpen HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,90/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,90/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,10/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,10/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,10/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=0}
17/11/03 14:39:49 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,10/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=0}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:49 DEBUG ManagedSelector: Created SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,11/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=0}
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@7e5d97a2
17/11/03 14:39:49 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,14/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=0}:runUpdateKey
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:49 DEBUG QueuedThreadPool: ran org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,14/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=0}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,15/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,15/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,15/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:49 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,15/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,15/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,15/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,15/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,17/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 432 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,21/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,5/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}] filled 432 HeapByteBuffer@3863f7f0[p=0,l=432,c=8192,r=432]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,5/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=0,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=432,c=8192,r=432]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:49 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=432,c=8192,r=432]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpParser: START --> SPACE1
17/11/03 14:39:49 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:39:49 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:39:49 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:39:49 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_NAME
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_NAME --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> END
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/} onRequestComplete
17/11/03 14:39:49 DEBUG HttpInput: HttpInputOverHTTP@40fccb88[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,16/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/}] parsed true HttpParser{s=END,0 of 0}
17/11/03 14:39:49 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,16/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of 0},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/}]
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/} handle //dev2:4040/SQL/
17/11/03 14:39:49 DEBUG HttpChannelState: HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=1,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/} action DISPATCH
17/11/03 14:39:49 DEBUG Server: REQUEST on HttpChannelOverHttp@650770f9{r=1,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/}
GET /SQL/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:39:49 DEBUG ContextHandler: scope null||/SQL/ @ o.s.j.s.ServletContextHandler@55e42684{/SQL,null,AVAILABLE,@Spark}
17/11/03 14:39:49 DEBUG ContextHandler: context=/SQL||/ @ o.s.j.s.ServletContextHandler@55e42684{/SQL,null,AVAILABLE,@Spark}
17/11/03 14:39:49 DEBUG ServletHandler: servlet /SQL|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-3feebf9c@f89c896d==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:39:49 DEBUG ServletHandler: chain=null
17/11/03 14:39:49 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:39:49 DEBUG Server: RESPONSE for /SQL/ h=true
200 null
Date: Fri, 03 Nov 2017 14:39:49 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:39:49 DEBUG HttpChannelState: HttpChannelState@168e811f{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=1,c=false,a=COMPLETING,uri=//dev2:4040/SQL/} action COMPLETE
17/11/03 14:39:49 DEBUG HttpChannel: sendResponse info=null content=DirectByteBuffer@73e9ef20[p=0,l=4648,c=32768,r=4648]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=Blocker@3d557148{null}
17/11/03 14:39:49 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=4} to HttpChannelOverHttp@650770f9{r=1,c=true,a=COMPLETING,uri=//dev2:4040/SQL/}
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@8d0b7b7] generate: NEED_HEADER (null,[p=0,l=4648,c=32768,r=4648],true)@START
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@8d0b7b7] generate: FLUSH ([p=0,l=229,c=8192,r=229],[p=0,l=4648,c=32768,r=4648],true)@COMPLETING
17/11/03 14:39:49 DEBUG WriteFlusher: write: WriteFlusher@17295235{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=229,c=8192,r=229]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>ept: text/html,ap...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},DirectByteBuffer@73e9ef20[p=0,l=4648,c=32768,r=4648]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:39:49 DEBUG WriteFlusher: update WriteFlusher@17295235{WRITING}:IDLE-->WRITING
17/11/03 14:39:49 DEBUG ChannelEndPoint: flushed 4877 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,W,79/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG WriteFlusher: Flushed=true 229/229+1 WriteFlusher@17295235{WRITING}
17/11/03 14:39:49 DEBUG WriteFlusher: update WriteFlusher@17295235{IDLE}:WRITING-->IDLE
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@8d0b7b7] generate: DONE ([p=229,l=229,c=8192,r=0],[p=4648,l=4648,c=32768,r=0],true)@END
17/11/03 14:39:49 DEBUG HttpParser: reset HttpParser{s=END,0 of 0}
17/11/03 14:39:49 DEBUG HttpParser: END --> START
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,3/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,3/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,4/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,4/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:49 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,4/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:39:49 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,4/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,4/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:49 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,5/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,5/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,6/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,6/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:49 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$Accept@387a0bac on org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=0 selected=0
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 0/0 selected
17/11/03 14:39:49 DEBUG ManagedSelector: Running change org.spark_project.jetty.io.ManagedSelector$Accept@387a0bac
17/11/03 14:39:49 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@43acdc28 on org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=1 selected=0
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produced org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@43acdc28
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 dispatch
17/11/03 14:39:49 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@43acdc28
17/11/03 14:39:49 DEBUG AbstractEndPoint: onOpen SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0}
17/11/03 14:39:49 DEBUG IdleTimeout: SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0} idle timeout check, elapsed: 0 ms, remaining: 30000 ms
17/11/03 14:39:49 DEBUG HttpChannel: new HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null} -> SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0},null,HttpChannelState@33d93245{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false}
17/11/03 14:39:49 DEBUG HttpConnection: New HTTP Connection HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG AbstractConnection: onOpen HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,0/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG AbstractConnection: fillInterested HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,1/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@7b9fc4e5{true,AC.ReadCB@6e134bc3{HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,0/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@6e134bc3{HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,0/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@7b9fc4e5{true,AC.ReadCB@6e134bc3{HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,1/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@6e134bc3{HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,1/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,1/30000,HttpConnection@6e134bc3}{io=0/1,kio=0,kro=0}
17/11/03 14:39:49 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,1/30000,HttpConnection@6e134bc3}{io=0/1,kio=0,kro=0}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=1 selected=0
17/11/03 14:39:49 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce enter
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 producing
17/11/03 14:39:49 DEBUG ManagedSelector: Running change SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,2/30000,HttpConnection@6e134bc3}{io=0/1,kio=0,kro=0}:runUpdateKey
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,2/30000,HttpConnection@6e134bc3}{io=1/1,kio=1,kro=0}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG ManagedSelector: Created SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,1/30000,HttpConnection@6e134bc3}{io=1/1,kio=0,kro=0}
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 ran org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@43acdc28
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce exit
17/11/03 14:39:49 DEBUG QueuedThreadPool: ran org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=1 selected=0
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,306/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,306/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,306/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:49 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,306/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,307/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,307/30000,HttpConnection@715de90c}{io=0/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,307/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,307/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 331 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,307/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}] filled 331 HeapByteBuffer@3863f7f0[p=0,l=331,c=8192,r=331]={<<<GET /static/webui....8,en;q=0.6\r\n\r\n>>>ttp://dev2:4040/S...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=1,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=331,c=8192,r=331]={<<<GET /static/webui....8,en;q=0.6\r\n\r\n>>>ttp://dev2:4040/S...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:49 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=331,c=8192,r=331]={<<<GET /static/webui....8,en;q=0.6\r\n\r\n>>>ttp://dev2:4040/S...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpParser: START --> SPACE1
17/11/03 14:39:49 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:39:49 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:39:49 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:39:49 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> END
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=//dev2:4040/static/webui.js} onRequestComplete
17/11/03 14:39:49 DEBUG HttpInput: HttpInputOverHTTP@40fccb88[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=//dev2:4040/static/webui.js}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:39:49 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,6/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=//dev2:4040/static/webui.js}]
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=//dev2:4040/static/webui.js} handle //dev2:4040/static/webui.js
17/11/03 14:39:49 DEBUG HttpChannelState: HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=2,c=false,a=DISPATCHED,uri=//dev2:4040/static/webui.js} action DISPATCH
17/11/03 14:39:49 DEBUG Server: REQUEST on HttpChannelOverHttp@650770f9{r=2,c=false,a=DISPATCHED,uri=//dev2:4040/static/webui.js}
GET /static/webui.js HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: */*
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:39:49 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@1ee68ec9 handle Request(GET //dev2:4040/static/webui.js)@10216365 in null
17/11/03 14:39:49 DEBUG ContextHandler: scope null||/static/webui.js @ o.s.j.s.ServletContextHandler@724bf25f{/static,null,AVAILABLE,@Spark}
17/11/03 14:39:49 DEBUG ContextHandler: context=/static||/webui.js @ o.s.j.s.ServletContextHandler@724bf25f{/static,null,AVAILABLE,@Spark}
17/11/03 14:39:49 DEBUG ServletHandler: servlet /static|/webui.js|null -> org.spark_project.jetty.servlet.DefaultServlet-415d88de@b623939c==org.spark_project.jetty.servlet.DefaultServlet,-1,true
17/11/03 14:39:49 DEBUG ServletHandler: chain=null
17/11/03 14:39:49 DEBUG DefaultServlet: Resource /webui.js=jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/spark-core_2.11-2.2.0.jar!/org/apache/spark/ui/static/webui.js
17/11/03 14:39:49 INFO DefaultServlet: content=ResourceHttpContent@18d3d596{r=jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/spark-core_2.11-2.2.0.jar!/org/apache/spark/ui/static/webui.js,gz=false}
17/11/03 14:39:49 DEBUG DefaultServlet: sendData content=ResourceHttpContent@18d3d596{r=jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/spark-core_2.11-2.2.0.jar!/org/apache/spark/ui/static/webui.js,gz=false} out=HttpOutput@4dd720b1{OPEN} async=true
17/11/03 14:39:49 DEBUG HttpOutput: sendContent(http=ResourceHttpContent@18d3d596{r=jar:file:/home/ec2-user/spark2/spark-2.2.0-bin-hadoop2.7/jars/spark-core_2.11-2.2.0.jar!/org/apache/spark/ui/static/webui.js,gz=false},DefaultServlet@2c5eca9c$CB)
17/11/03 14:39:49 DEBUG HttpOutput: sendContent(buffer=DirectByteBuffer@1b532c50[p=0,l=1910,c=1910,r=1910]={<<</*\n * Licensed to...-metrics');\n});>>>},DefaultServlet@2c5eca9c$CB)
17/11/03 14:39:49 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@f471c2d compressing java.util.zip.Deflater@4bcaa4ca
17/11/03 14:39:49 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@d1c8628[p=0,l=906,c=32768,r=906]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xA5UM\x8f\xDb6\x10...\xDe8dY\xF1\xEe\x1f\xC8\xAc0\x97v\x07\x00\x00>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=GzipBufferCB@9cab40d
17/11/03 14:39:49 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=6} to HttpChannelOverHttp@650770f9{r=2,c=true,a=DISPATCHED,uri=//dev2:4040/static/webui.js}
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@34c8f4b7] generate: NEED_HEADER (null,[p=0,l=906,c=32768,r=906],true)@START
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@34c8f4b7] generate: FLUSH ([p=0,l=273,c=8192,r=273],[p=0,l=906,c=32768,r=906],true)@COMPLETING
17/11/03 14:39:49 DEBUG WriteFlusher: write: WriteFlusher@17295235{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=273,c=8192,r=273]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>, deflate\r\nAccept...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},HeapByteBuffer@d1c8628[p=0,l=906,c=32768,r=906]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xA5UM\x8f\xDb6\x10...\xDe8dY\xF1\xEe\x1f\xC8\xAc0\x97v\x07\x00\x00>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:39:49 DEBUG WriteFlusher: update WriteFlusher@17295235{WRITING}:IDLE-->WRITING
17/11/03 14:39:49 DEBUG ChannelEndPoint: flushed 1179 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,W,31/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG WriteFlusher: Flushed=true 273/273+1 WriteFlusher@17295235{WRITING}
17/11/03 14:39:49 DEBUG WriteFlusher: update WriteFlusher@17295235{IDLE}:WRITING-->IDLE
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@34c8f4b7] generate: DONE ([p=273,l=273,c=8192,r=0],[p=906,l=906,c=32768,r=0],true)@END
17/11/03 14:39:49 DEBUG Server: RESPONSE for /static/webui.js h=true
200 null
Date: Fri, 03 Nov 2017 14:39:49 GMT
Last-Modified: Fri, 30 Jun 2017 15:58:04 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Vary: Accept-Encoding, User-Agent
Content-Encoding: gzip


17/11/03 14:39:49 DEBUG HttpChannelState: HttpChannelState@168e811f{s=DISPATCHED a=COMPLETE i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=2,c=true,a=COMPLETING,uri=//dev2:4040/static/webui.js} action COMPLETE
17/11/03 14:39:49 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:39:49 DEBUG HttpParser: END --> START
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:49 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,2/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:39:49 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,3/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,3/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:49 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:49 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,347/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,347/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,347/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:49 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,347/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,348/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,347/30000,HttpConnection@715de90c}{io=0/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,348/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,348/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 363 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,348/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}] filled 363 HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=2,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:49 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpParser: START --> SPACE1
17/11/03 14:39:49 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:39:49 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:39:49 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:39:49 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:49 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:49 DEBUG HttpParser: HEADER --> END
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} onRequestComplete
17/11/03 14:39:49 DEBUG HttpInput: HttpInputOverHTTP@40fccb88[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,4/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:39:49 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,4/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}]
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} handle //dev2:4040/favicon.ico
17/11/03 14:39:49 DEBUG HttpChannelState: HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=3,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico} action DISPATCH
17/11/03 14:39:49 DEBUG Server: REQUEST on HttpChannelOverHttp@650770f9{r=3,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
GET /favicon.ico HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:39:49 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@13a89dbf handle Request(GET //dev2:4040/favicon.ico)@10216365 in null
17/11/03 14:39:49 DEBUG ContextHandler: scope null||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:39:49 DEBUG ContextHandler: context=||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:39:49 DEBUG ServletHandler: servlet |/favicon.ico|null -> org.apache.spark.ui.JettyUtils$$anon$4-310a7859@9e7e45df==org.apache.spark.ui.JettyUtils$$anon$4,-1,true
17/11/03 14:39:49 DEBUG ServletHandler: chain=null
17/11/03 14:39:49 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@1d6f71ba exclude by status 302
17/11/03 14:39:49 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@1950f6cf[p=0,l=0,c=0,r=0]={<<<>>>} complete=true committing=true callback=Blocker@3d557148{null}
17/11/03 14:39:49 DEBUG HttpChannel: Commit HTTP/1.1{s=302,h=2} to HttpChannelOverHttp@650770f9{r=3,c=true,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@5c527b81] generate: NEED_HEADER (null,[p=0,l=0,c=0,r=0],true)@START
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@5c527b81] generate: FLUSH ([p=0,l=143,c=8192,r=143],[p=0,l=0,c=0,r=0],true)@COMPLETING
17/11/03 14:39:49 DEBUG WriteFlusher: write: WriteFlusher@17295235{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=143,c=8192,r=143]={<<<HTTP/1.1 302 Foun...z-SNAPSHOT)\r\n\r\n>>>.36 (KHTML, like ...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:39:49 DEBUG WriteFlusher: update WriteFlusher@17295235{WRITING}:IDLE-->WRITING
17/11/03 14:39:49 DEBUG ChannelEndPoint: flushed 143 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,W,19/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG WriteFlusher: Flushed=true 143/143+0 WriteFlusher@17295235{WRITING}
17/11/03 14:39:49 DEBUG WriteFlusher: update WriteFlusher@17295235{IDLE}:WRITING-->IDLE
17/11/03 14:39:49 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@5c527b81] generate: DONE ([p=143,l=143,c=8192,r=0],[p=0,l=0,c=0,r=0],true)@END
17/11/03 14:39:49 DEBUG Server: RESPONSE for /favicon.ico h=true
302 null
Date: Fri, 03 Nov 2017 14:39:49 GMT
Location: http://dev2:4040/jobs/


17/11/03 14:39:49 DEBUG HttpChannelState: HttpChannelState@168e811f{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=3,c=true,a=COMPLETING,uri=//dev2:4040/favicon.ico} action COMPLETE
17/11/03 14:39:49 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:39:49 DEBUG HttpParser: END --> START
17/11/03 14:39:49 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:49 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:39:49 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:49 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:39:49 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:39:49 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:49 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,4/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,4/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:39:49 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:49 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:50 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:50 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,301/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}
17/11/03 14:39:50 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,301/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,301/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:50 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,301/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:50 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,301/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,301/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:50 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,301/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:50 DEBUG ChannelEndPoint: filled 357 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,303/30000,HttpConnection@715de90c}{io=0/0,kio=1,kro=1}
17/11/03 14:39:50 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,303/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:50 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}] filled 357 HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=3,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:50 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:50 DEBUG HttpParser: START --> SPACE1
17/11/03 14:39:50 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:39:50 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:39:50 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:39:50 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:50 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:50 DEBUG HttpParser: HEADER --> END
17/11/03 14:39:50 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=//dev2:4040/jobs/} onRequestComplete
17/11/03 14:39:50 DEBUG HttpInput: HttpInputOverHTTP@40fccb88[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=//dev2:4040/jobs/}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:39:50 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=//dev2:4040/jobs/}]
17/11/03 14:39:50 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=//dev2:4040/jobs/} handle //dev2:4040/jobs/
17/11/03 14:39:50 DEBUG HttpChannelState: HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:39:50 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=4,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/} action DISPATCH
17/11/03 14:39:50 DEBUG Server: REQUEST on HttpChannelOverHttp@650770f9{r=4,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/}
GET /jobs/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:39:50 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@7c8cea75 handle Request(GET //dev2:4040/jobs/)@10216365 in null
17/11/03 14:39:50 DEBUG ContextHandler: scope null||/jobs/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:39:50 DEBUG ContextHandler: context=/jobs||/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:39:50 DEBUG ServletHandler: servlet /jobs|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-1283ca23@1a8bdbe7==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:39:50 DEBUG ServletHandler: chain=null
17/11/03 14:39:50 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:39:50 DEBUG Server: RESPONSE for /jobs/ h=true
200 null
Date: Fri, 03 Nov 2017 14:39:50 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:39:50 DEBUG HttpChannelState: HttpChannelState@168e811f{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:39:50 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=4,c=false,a=COMPLETING,uri=//dev2:4040/jobs/} action COMPLETE
17/11/03 14:39:50 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@69fcad91 compressing java.util.zip.Deflater@2fcb2bce
17/11/03 14:39:50 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@48b9ed77[p=0,l=2219,c=32768,r=2219]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19\xD9r\xE36\xF2...\x1d\xD9_`'\xFf\x03\x03\xFe?8\xE0\x1d\x00\x00>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=GzipBufferCB@13bb1019
17/11/03 14:39:50 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=6} to HttpChannelOverHttp@650770f9{r=4,c=true,a=COMPLETING,uri=//dev2:4040/jobs/}
17/11/03 14:39:50 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@1f27b7da] generate: NEED_HEADER (null,[p=0,l=2219,c=32768,r=2219],true)@START
17/11/03 14:39:50 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@1f27b7da] generate: FLUSH ([p=0,l=288,c=8192,r=288],[p=0,l=2219,c=32768,r=2219],true)@COMPLETING
17/11/03 14:39:50 DEBUG WriteFlusher: write: WriteFlusher@17295235{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=288,c=8192,r=288]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},HeapByteBuffer@48b9ed77[p=0,l=2219,c=32768,r=2219]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19\xD9r\xE36\xF2...\x1d\xD9_`'\xFf\x03\x03\xFe?8\xE0\x1d\x00\x00>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:39:50 DEBUG WriteFlusher: update WriteFlusher@17295235{WRITING}:IDLE-->WRITING
17/11/03 14:39:50 DEBUG ChannelEndPoint: flushed 2507 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,W,151/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:50 DEBUG WriteFlusher: Flushed=true 288/288+1 WriteFlusher@17295235{WRITING}
17/11/03 14:39:50 DEBUG WriteFlusher: update WriteFlusher@17295235{IDLE}:WRITING-->IDLE
17/11/03 14:39:50 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@1f27b7da] generate: DONE ([p=288,l=288,c=8192,r=0],[p=2219,l=2219,c=32768,r=0],true)@END
17/11/03 14:39:50 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:39:50 DEBUG HttpParser: END --> START
17/11/03 14:39:50 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:39:50 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:50 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:50 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:39:50 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]
17/11/03 14:39:50 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]
17/11/03 14:39:50 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:50 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:50 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}
17/11/03 14:39:50 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:50 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:50 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:50 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=1/1,kio=0,kro=1}:runFillable
17/11/03 14:39:50 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:50 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:39:50 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:50 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1741/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1741/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:52 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1741/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1741/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1741/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1741/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1741/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 426 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1741/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}] filled 426 HeapByteBuffer@3863f7f0[p=0,l=426,c=8192,r=426]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=4,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=426,c=8192,r=426]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:52 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=426,c=8192,r=426]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpParser: START --> SPACE1
17/11/03 14:39:52 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:39:52 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:39:52 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:39:52 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_NAME
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_NAME --> HEADER_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> END
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/} onRequestComplete
17/11/03 14:39:52 DEBUG HttpInput: HttpInputOverHTTP@40fccb88[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,2/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:39:52 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,2/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/}]
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/} handle //dev2:4040/SQL/
17/11/03 14:39:52 DEBUG HttpChannelState: HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=5,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/} action DISPATCH
17/11/03 14:39:52 DEBUG Server: REQUEST on HttpChannelOverHttp@650770f9{r=5,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/}
GET /SQL/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Upgrade-Insecure-Requests: 1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:39:52 DEBUG ContextHandler: scope null||/SQL/ @ o.s.j.s.ServletContextHandler@55e42684{/SQL,null,AVAILABLE,@Spark}
17/11/03 14:39:52 DEBUG ContextHandler: context=/SQL||/ @ o.s.j.s.ServletContextHandler@55e42684{/SQL,null,AVAILABLE,@Spark}
17/11/03 14:39:52 DEBUG ServletHandler: servlet /SQL|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-3feebf9c@f89c896d==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:39:52 DEBUG ServletHandler: chain=null
17/11/03 14:39:52 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:39:52 DEBUG Server: RESPONSE for /SQL/ h=true
200 null
Date: Fri, 03 Nov 2017 14:39:52 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:39:52 DEBUG HttpChannelState: HttpChannelState@168e811f{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=5,c=false,a=COMPLETING,uri=//dev2:4040/SQL/} action COMPLETE
17/11/03 14:39:52 DEBUG HttpChannel: sendResponse info=null content=DirectByteBuffer@73e9ef20[p=0,l=4648,c=32768,r=4648]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=Blocker@3d557148{null}
17/11/03 14:39:52 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=4} to HttpChannelOverHttp@650770f9{r=5,c=true,a=COMPLETING,uri=//dev2:4040/SQL/}
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@308b868a] generate: NEED_HEADER (null,[p=0,l=4648,c=32768,r=4648],true)@START
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@308b868a] generate: FLUSH ([p=0,l=229,c=8192,r=229],[p=0,l=4648,c=32768,r=4648],true)@COMPLETING
17/11/03 14:39:52 DEBUG WriteFlusher: write: WriteFlusher@17295235{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=229,c=8192,r=229]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>-Insecure-Request...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},DirectByteBuffer@73e9ef20[p=0,l=4648,c=32768,r=4648]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:39:52 DEBUG WriteFlusher: update WriteFlusher@17295235{WRITING}:IDLE-->WRITING
17/11/03 14:39:52 DEBUG ChannelEndPoint: flushed 4877 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,W,7/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG WriteFlusher: Flushed=true 229/229+1 WriteFlusher@17295235{WRITING}
17/11/03 14:39:52 DEBUG WriteFlusher: update WriteFlusher@17295235{IDLE}:WRITING-->IDLE
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@308b868a] generate: DONE ([p=229,l=229,c=8192,r=0],[p=4648,l=4648,c=32768,r=0],true)@END
17/11/03 14:39:52 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:39:52 DEBUG HttpParser: END --> START
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:52 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:39:52 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]
17/11/03 14:39:52 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:52 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=1/1,kio=0,kro=1}:runFillable
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:52 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,441/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,442/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,442/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:52 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,442/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,442/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,442/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,442/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,442/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 363 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,442/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}] filled 363 HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>> gzip, deflate\r\nA...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=5,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>> gzip, deflate\r\nA...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:52 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>> gzip, deflate\r\nA...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpParser: START --> SPACE1
17/11/03 14:39:52 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:39:52 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:39:52 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:39:52 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> END
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} onRequestComplete
17/11/03 14:39:52 DEBUG HttpInput: HttpInputOverHTTP@40fccb88[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:39:52 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}]
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} handle //dev2:4040/favicon.ico
17/11/03 14:39:52 DEBUG HttpChannelState: HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=6,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico} action DISPATCH
17/11/03 14:39:52 DEBUG Server: REQUEST on HttpChannelOverHttp@650770f9{r=6,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
GET /favicon.ico HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:39:52 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@13a89dbf handle Request(GET //dev2:4040/favicon.ico)@10216365 in null
17/11/03 14:39:52 DEBUG ContextHandler: scope null||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:39:52 DEBUG ContextHandler: context=||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:39:52 DEBUG ServletHandler: servlet |/favicon.ico|null -> org.apache.spark.ui.JettyUtils$$anon$4-310a7859@9e7e45df==org.apache.spark.ui.JettyUtils$$anon$4,-1,true
17/11/03 14:39:52 DEBUG ServletHandler: chain=null
17/11/03 14:39:52 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@3ef3e540 exclude by status 302
17/11/03 14:39:52 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@1950f6cf[p=0,l=0,c=0,r=0]={<<<>>>} complete=true committing=true callback=Blocker@3d557148{null}
17/11/03 14:39:52 DEBUG HttpChannel: Commit HTTP/1.1{s=302,h=2} to HttpChannelOverHttp@650770f9{r=6,c=true,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@15776648] generate: NEED_HEADER (null,[p=0,l=0,c=0,r=0],true)@START
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@15776648] generate: FLUSH ([p=0,l=143,c=8192,r=143],[p=0,l=0,c=0,r=0],true)@COMPLETING
17/11/03 14:39:52 DEBUG WriteFlusher: write: WriteFlusher@17295235{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=143,c=8192,r=143]={<<<HTTP/1.1 302 Foun...z-SNAPSHOT)\r\n\r\n>>>.36 (KHTML, like ...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:39:52 DEBUG WriteFlusher: update WriteFlusher@17295235{WRITING}:IDLE-->WRITING
17/11/03 14:39:52 DEBUG ChannelEndPoint: flushed 143 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,W,2/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG WriteFlusher: Flushed=true 143/143+0 WriteFlusher@17295235{WRITING}
17/11/03 14:39:52 DEBUG WriteFlusher: update WriteFlusher@17295235{IDLE}:WRITING-->IDLE
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@15776648] generate: DONE ([p=143,l=143,c=8192,r=0],[p=0,l=0,c=0,r=0],true)@END
17/11/03 14:39:52 DEBUG Server: RESPONSE for /favicon.ico h=true
302 null
Date: Fri, 03 Nov 2017 14:39:52 GMT
Location: http://dev2:4040/jobs/


17/11/03 14:39:52 DEBUG HttpChannelState: HttpChannelState@168e811f{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=6,c=true,a=COMPLETING,uri=//dev2:4040/favicon.ico} action COMPLETE
17/11/03 14:39:52 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:39:52 DEBUG HttpParser: END --> START
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:52 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:39:52 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]
17/11/03 14:39:52 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:52 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,3/30000,HttpConnection@715de90c}{io=1/1,kio=0,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:52 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,299/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,300/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,300/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:39:52 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,300/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,300/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,300/30000,HttpConnection@715de90c}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,300/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,300/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 357 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,300/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}] filled 357 HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\n gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=6,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\n gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:52 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\n gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpParser: START --> SPACE1
17/11/03 14:39:52 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:39:52 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:39:52 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:39:52 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:39:52 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:39:52 DEBUG HttpParser: HEADER --> END
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/} onRequestComplete
17/11/03 14:39:52 DEBUG HttpInput: HttpInputOverHTTP@40fccb88[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:39:52 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/}]
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/} handle //dev2:4040/jobs/
17/11/03 14:39:52 DEBUG HttpChannelState: HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=7,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/} action DISPATCH
17/11/03 14:39:52 DEBUG Server: REQUEST on HttpChannelOverHttp@650770f9{r=7,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/}
GET /jobs/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:39:52 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@7c8cea75 handle Request(GET //dev2:4040/jobs/)@10216365 in null
17/11/03 14:39:52 DEBUG ContextHandler: scope null||/jobs/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:39:52 DEBUG ContextHandler: context=/jobs||/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:39:52 DEBUG ServletHandler: servlet /jobs|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-1283ca23@1a8bdbe7==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:39:52 DEBUG ServletHandler: chain=null
17/11/03 14:39:52 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:39:52 DEBUG Server: RESPONSE for /jobs/ h=true
200 null
Date: Fri, 03 Nov 2017 14:39:52 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:39:52 DEBUG HttpChannelState: HttpChannelState@168e811f{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=7,c=false,a=COMPLETING,uri=//dev2:4040/jobs/} action COMPLETE
17/11/03 14:39:52 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@1640d9ee compressing java.util.zip.Deflater@5fbd1bae
17/11/03 14:39:52 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@d1c8628[p=0,l=2219,c=32768,r=2219]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19\xD9r\xE36\xF2...:\xB2\xBf\xC0N\xFe\x07\xE7\tD(\xE0\x1d\x00\x00>>>count() or saveAs...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=GzipBufferCB@3c14356d
17/11/03 14:39:52 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=6} to HttpChannelOverHttp@650770f9{r=7,c=true,a=COMPLETING,uri=//dev2:4040/jobs/}
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@30299cec] generate: NEED_HEADER (null,[p=0,l=2219,c=32768,r=2219],true)@START
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@30299cec] generate: FLUSH ([p=0,l=288,c=8192,r=288],[p=0,l=2219,c=32768,r=2219],true)@COMPLETING
17/11/03 14:39:52 DEBUG WriteFlusher: write: WriteFlusher@17295235{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=288,c=8192,r=288]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},HeapByteBuffer@d1c8628[p=0,l=2219,c=32768,r=2219]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19\xD9r\xE36\xF2...:\xB2\xBf\xC0N\xFe\x07\xE7\tD(\xE0\x1d\x00\x00>>>count() or saveAs...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:39:52 DEBUG WriteFlusher: update WriteFlusher@17295235{WRITING}:IDLE-->WRITING
17/11/03 14:39:52 DEBUG ChannelEndPoint: flushed 2507 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,W,12/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG WriteFlusher: Flushed=true 288/288+1 WriteFlusher@17295235{WRITING}
17/11/03 14:39:52 DEBUG WriteFlusher: update WriteFlusher@17295235{IDLE}:WRITING-->IDLE
17/11/03 14:39:52 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@333b637e[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@30299cec] generate: DONE ([p=288,l=288,c=8192,r=0],[p=2219,l=2219,c=32768,r=0],true)@END
17/11/03 14:39:52 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:39:52 DEBUG HttpParser: END --> START
17/11/03 14:39:52 DEBUG HttpChannel: HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:52 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:39:52 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]
17/11/03 14:39:52 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,1/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,0/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}
17/11/03 14:39:52 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:39:52 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:39:52 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:39:52 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:52 DEBUG HttpConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,1/30000,HttpConnection@715de90c}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@168e811f{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,2/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:39:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:39:52 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:39:54 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:39:54 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:54 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:39:54 DEBUG RecordReaderImpl: chunks = [range start: 13262 end: 565785]
17/11/03 14:39:54 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:39:54 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:54 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:39:54 DEBUG RecordReaderImpl: merge = [data range [13262, 565785), size: 552523 type: array-backed]
17/11/03 14:39:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #66
17/11/03 14:39:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #66
17/11/03 14:39:55 DEBUG ProtobufRpcEngine: Call: renewLease took 1ms
17/11/03 14:39:55 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:39:55 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:39:57 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:39:57 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:57 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:39:57 DEBUG RecordReaderImpl: chunks = [range start: 8020 end: 278538]
17/11/03 14:39:57 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:39:57 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00000-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042810_302039): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:57 DEBUG RecordReaderImpl: merge = [data range [8020, 278538), size: 270518 type: array-backed]
17/11/03 14:39:59 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:39:59 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,10080/30000,HttpConnection@6e134bc3}{io=1/0,kio=1,kro=1}
17/11/03 14:39:59 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,10081/30000,HttpConnection@6e134bc3}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produced SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,10081/30000,HttpConnection@6e134bc3}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 dispatch
17/11/03 14:39:59 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:59 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,10081/30000,HttpConnection@6e134bc3}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce enter
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 producing
17/11/03 14:39:59 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,10081/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}
17/11/03 14:39:59 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:59 DEBUG FillInterest: FillInterest@7b9fc4e5{true,AC.ReadCB@6e134bc3{HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,10081/30000,HttpConnection@6e134bc3}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@6e134bc3{HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,FI,-,10081/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:39:59 DEBUG HttpConnection: HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,10081/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@33d93245{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:59 DEBUG ChannelEndPoint: filled -1 SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,10081/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}
17/11/03 14:39:59 DEBUG ChannelEndPoint: ishut SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,in,out,-,-,10081/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}
17/11/03 14:39:59 DEBUG HttpParser: atEOF HttpParser{s=START,0 of 0}
17/11/03 14:39:59 DEBUG HttpConnection: HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,ISHUT,out,-,-,10081/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}] filled -1 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:59 DEBUG HttpConnection: HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,Open,ISHUT,out,-,-,10081/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:39:59 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:39:59 DEBUG HttpParser: START --> CLOSED
17/11/03 14:39:59 DEBUG WriteFlusher: ignored: WriteFlusher@5b77d36c{IDLE} {}
17/11/03 14:39:59 DEBUG ChannelEndPoint: close SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,CLOSED,ISHUT,out,-,-,10082/30000,HttpConnection@6e134bc3}{io=0/0,kio=0,kro=1}
17/11/03 14:39:59 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$2@148d2c49 on org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=1 selected=0
17/11/03 14:39:59 DEBUG ManagedSelector: Selector loop woken up from select, 0/0 selected
17/11/03 14:39:59 DEBUG HttpConnection: HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,CLOSED,ISHUT,OSHUT,-,-,10082/30000,HttpConnection@6e134bc3}{io=0/0,kio=-1,kro=-1}][p=HttpParser{s=CLOSED,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=CLOSED,0 of 0}
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produced org.spark_project.jetty.io.ManagedSelector$2@148d2c49
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 dispatch
17/11/03 14:39:59 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run org.spark_project.jetty.io.ManagedSelector$2@148d2c49
17/11/03 14:39:59 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce enter
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 producing
17/11/03 14:39:59 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:39:59 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,CLOSED,ISHUT,OSHUT,-,-,10083/30000,HttpConnection@6e134bc3}{io=0/0,kio=-1,kro=-1}][p=HttpParser{s=CLOSED,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:59 DEBUG ManagedSelector: Destroyed SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,CLOSED,ISHUT,OSHUT,-,-,10083/30000,HttpConnection@6e134bc3}{io=0/0,kio=-1,kro=-1}
17/11/03 14:39:59 DEBUG HttpConnection: HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,CLOSED,ISHUT,OSHUT,-,-,10083/30000,HttpConnection@6e134bc3}{io=0/0,kio=-1,kro=-1}][p=HttpParser{s=CLOSED,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@33d93245{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:39:59 DEBUG AbstractConnection: onClose HttpConnection@6e134bc3[SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,CLOSED,ISHUT,OSHUT,-,-,10083/30000,HttpConnection@6e134bc3}{io=0/0,kio=-1,kro=-1}][p=HttpParser{s=CLOSED,0 of 0},g=HttpGenerator@62be295c{s=START},c=HttpChannelOverHttp@16b1f127{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 ran SelectChannelEndPoint@291d613{/122.178.219.222:58646<->4040,CLOSED,ISHUT,OSHUT,-,-,10083/30000,HttpConnection@6e134bc3}{io=0/0,kio=-1,kro=-1}:runFillable
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce exit
17/11/03 14:39:59 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 ran org.spark_project.jetty.io.ManagedSelector$2@148d2c49
17/11/03 14:39:59 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce exit
17/11/03 14:39:59 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:39:59 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-1980238, partition values: [I]
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #67
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #67
17/11/03 14:39:59 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #68
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #68
17/11/03 14:39:59 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:59 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1980238
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058; getBlockSize()=1980238; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058; getBlockSize()=1980238; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #69
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #69
17/11/03 14:39:59 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:39:59 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:39:59 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:59 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:39:59 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:39:59 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #70
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #70
17/11/03 14:39:59 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:59 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1980238
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058; getBlockSize()=1980238; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058; getBlockSize()=1980238; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #71
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #71
17/11/03 14:39:59 DEBUG ProtobufRpcEngine: Call: getFileInfo took 0ms
17/11/03 14:39:59 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:39:59 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:59 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:39:59 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:39:59 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 1980238}
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #72
17/11/03 14:39:59 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #72
17/11/03 14:39:59 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:39:59 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1980238
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058; getBlockSize()=1980238; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058; getBlockSize()=1980238; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:39:59 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:39:59 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:39:59 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:59 DEBUG RecordReaderImpl: chunks = [range start: 20139 end: 1018807]
17/11/03 14:39:59 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:39:59 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:39:59 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:39:59 DEBUG RecordReaderImpl: merge = [data range [20139, 1018807), size: 998668 type: array-backed]
17/11/03 14:39:59 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:40:05 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:05 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:05 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:05 DEBUG RecordReaderImpl: chunks = [range start: 13446 end: 602979]
17/11/03 14:40:05 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:05 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:05 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:05 DEBUG RecordReaderImpl: merge = [data range [13446, 602979), size: 589533 type: array-backed]
17/11/03 14:40:09 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:09 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:09 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:09 DEBUG RecordReaderImpl: chunks = [range start: 10251 end: 348321]
17/11/03 14:40:09 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:09 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00002-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042829_302058): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:09 DEBUG RecordReaderImpl: merge = [data range [10251, 348321), size: 338070 type: array-backed]
17/11/03 14:40:11 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-1927365, partition values: [I]
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #73
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #73
17/11/03 14:40:11 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #74
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #74
17/11/03 14:40:11 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:40:11 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1927365
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061; getBlockSize()=1927365; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061; getBlockSize()=1927365; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #75
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #75
17/11/03 14:40:11 DEBUG ProtobufRpcEngine: Call: getFileInfo took 0ms
17/11/03 14:40:11 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:40:11 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:11 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.46, datanodeId = DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]
17/11/03 14:40:11 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:11 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #76
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #76
17/11/03 14:40:11 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:40:11 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1927365
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061; getBlockSize()=1927365; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061; getBlockSize()=1927365; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #77
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #77
17/11/03 14:40:11 DEBUG ProtobufRpcEngine: Call: getFileInfo took 0ms
17/11/03 14:40:11 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:40:11 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:11 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:40:11 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 1927365}
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #78
17/11/03 14:40:11 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #78
17/11/03 14:40:11 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:40:11 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1927365
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061; getBlockSize()=1927365; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061; getBlockSize()=1927365; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:11 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:40:11 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:11 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:11 DEBUG RecordReaderImpl: chunks = [range start: 20328 end: 984731]
17/11/03 14:40:11 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:11 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:11 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:11 DEBUG RecordReaderImpl: merge = [data range [20328, 984731), size: 964403 type: array-backed]
17/11/03 14:40:11 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:40:16 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:40:16 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 824394 flag: 0 flag: 0 flag: 0
17/11/03 14:40:17 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:17 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:17 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:17 DEBUG RecordReaderImpl: chunks = [range start: 13638 end: 596858]
17/11/03 14:40:17 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:17 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:17 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:17 DEBUG RecordReaderImpl: merge = [data range [13638, 596858), size: 583220 type: array-backed]
17/11/03 14:40:18 DEBUG IdleTimeout: SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,26131/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1} idle timeout check, elapsed: 26131 ms, remaining: 3869 ms
17/11/03 14:40:21 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:21 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:21 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:21 DEBUG RecordReaderImpl: chunks = [range start: 10264 end: 335648]
17/11/03 14:40:21 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:21 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00003-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042832_302061): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:21 DEBUG RecordReaderImpl: merge = [data range [10264, 335648), size: 325384 type: array-backed]
17/11/03 14:40:22 DEBUG IdleTimeout: SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,30001/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1} idle timeout check, elapsed: 30001 ms, remaining: -1 ms
17/11/03 14:40:22 DEBUG IdleTimeout: SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,FI,-,30001/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1} idle timeout expired
17/11/03 14:40:22 DEBUG HttpParser: close HttpParser{s=START,0 of -1}
17/11/03 14:40:22 DEBUG HttpParser: START --> CLOSE
17/11/03 14:40:22 DEBUG AbstractConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,30001/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}] onFillInterestedFailed {}
17/11/03 14:40:22 DEBUG ChannelEndPoint: oshut SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,out,-,-,30001/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:40:22 DEBUG AbstractConnection: fillInterested HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,-,-,30001/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]
17/11/03 14:40:22 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}
17/11/03 14:40:22 DEBUG FillInterest: FillInterest@4007b2de{true,AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@715de90c{HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]}
17/11/03 14:40:22 DEBUG SelectChannelEndPoint: changeInterests p=false 1->1 for SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:40:22 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:40:22 DEBUG WriteFlusher: ignored: WriteFlusher@17295235{IDLE} {}
17/11/03 14:40:22 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:40:22 DEBUG AbstractEndPoint: Ignored idle endpoint SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:40:22 DEBUG ManagedSelector: Running change SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,2/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}:runUpdateKey
17/11/03 14:40:22 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 1 on SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,0/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:40:22 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:40:23 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-3143539, partition values: [I]
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #79
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #79
17/11/03 14:40:23 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #80
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #80
17/11/03 14:40:23 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:40:23 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=3143539
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085; getBlockSize()=3143539; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085; getBlockSize()=3143539; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #81
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #81
17/11/03 14:40:23 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:40:23 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:40:23 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:23 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:40:23 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:23 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #82
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #82
17/11/03 14:40:23 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:40:23 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=3143539
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085; getBlockSize()=3143539; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085; getBlockSize()=3143539; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #83
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #83
17/11/03 14:40:23 DEBUG ProtobufRpcEngine: Call: getFileInfo took 0ms
17/11/03 14:40:23 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:23 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:23 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:23 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:40:23 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 3143539}
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #84
17/11/03 14:40:23 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #84
17/11/03 14:40:23 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:40:23 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=3143539
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085; getBlockSize()=3143539; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085; getBlockSize()=3143539; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:23 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:40:23 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:23 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:23 DEBUG RecordReaderImpl: chunks = [range start: 19092 end: 1090987]
17/11/03 14:40:23 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:23 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:23 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:23 DEBUG RecordReaderImpl: merge = [data range [19092, 1090987), size: 1071895 type: array-backed]
17/11/03 14:40:23 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:40:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #85
17/11/03 14:40:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #85
17/11/03 14:40:25 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:40:25 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:40:25 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:40:29 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:29 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:29 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:29 DEBUG RecordReaderImpl: chunks = [range start: 13330 end: 623804]
17/11/03 14:40:29 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:29 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:29 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:29 DEBUG RecordReaderImpl: merge = [data range [13330, 623804), size: 610474 type: array-backed]
17/11/03 14:40:32 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:32 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:32 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:32 DEBUG RecordReaderImpl: chunks = [range start: 13879 end: 625712]
17/11/03 14:40:32 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:32 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:32 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:33 DEBUG RecordReaderImpl: merge = [data range [13879, 625712), size: 611833 type: array-backed]
17/11/03 14:40:36 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:36 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:36 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:36 DEBUG RecordReaderImpl: chunks = [range start: 13239 end: 652327]
17/11/03 14:40:36 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:36 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:36 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:36 DEBUG RecordReaderImpl: merge = [data range [13239, 652327), size: 639088 type: array-backed]
17/11/03 14:40:40 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:40 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:40 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:40 DEBUG RecordReaderImpl: chunks = [range start: 5720 end: 135280]
17/11/03 14:40:40 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:40 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00004-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042856_302085): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:40 DEBUG RecordReaderImpl: merge = [data range [5720, 135280), size: 129560 type: array-backed]
17/11/03 14:40:41 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00005-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-906893, partition values: [I]
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #86
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #86
17/11/03 14:40:41 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #87
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #87
17/11/03 14:40:41 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:40:41 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=906893
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069; getBlockSize()=906893; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069; getBlockSize()=906893; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #88
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #88
17/11/03 14:40:41 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:40:41 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:41 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00005-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:41 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:40:41 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00005-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:41 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #89
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #89
17/11/03 14:40:41 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:40:41 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=906893
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069; getBlockSize()=906893; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069; getBlockSize()=906893; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #90
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #90
17/11/03 14:40:41 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:40:41 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:40:41 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00005-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:41 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:40:41 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:40:41 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00005-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 906893}
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #91
17/11/03 14:40:41 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #91
17/11/03 14:40:41 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:40:41 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=906893
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069; getBlockSize()=906893; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069; getBlockSize()=906893; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:41 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:40:41 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:41 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00005-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:41 DEBUG RecordReaderImpl: chunks = [range start: 18628 end: 902288]
17/11/03 14:40:41 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:40:41 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00005-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042840_302069): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:41 DEBUG RecordReaderImpl: merge = [data range [18628, 902288), size: 883660 type: array-backed]
17/11/03 14:40:41 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:40:46 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:40:46 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 844307 flag: 0 flag: 0 flag: 0
17/11/03 14:40:48 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-1953819, partition values: [I]
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #92
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #92
17/11/03 14:40:48 DEBUG ProtobufRpcEngine: Call: getFileInfo took 13ms
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #93
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #93
17/11/03 14:40:48 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 2ms
17/11/03 14:40:48 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1953819
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108; getBlockSize()=1953819; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108; getBlockSize()=1953819; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #94
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #94
17/11/03 14:40:48 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:40:48 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:40:48 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:48 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:40:48 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:48 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #95
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #95
17/11/03 14:40:48 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 2ms
17/11/03 14:40:48 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1953819
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108; getBlockSize()=1953819; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108; getBlockSize()=1953819; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #96
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #96
17/11/03 14:40:48 DEBUG ProtobufRpcEngine: Call: getFileInfo took 7ms
17/11/03 14:40:48 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:40:48 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:48 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:40:48 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:40:48 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 1953819}
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #97
17/11/03 14:40:48 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #97
17/11/03 14:40:48 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 3ms
17/11/03 14:40:48 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=1953819
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108; getBlockSize()=1953819; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108; getBlockSize()=1953819; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:40:48 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:40:48 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:40:48 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:48 DEBUG RecordReaderImpl: chunks = [range start: 19908 end: 1039240]
17/11/03 14:40:48 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:40:48 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:48 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:40:48 DEBUG RecordReaderImpl: merge = [data range [19908, 1039240), size: 1019332 type: array-backed]
17/11/03 14:40:48 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:40:52 DEBUG IdleTimeout: SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,30002/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1} idle timeout check, elapsed: 30002 ms, remaining: -2 ms
17/11/03 14:40:52 DEBUG IdleTimeout: SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,FI,-,30003/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1} idle timeout expired
17/11/03 14:40:52 DEBUG HttpParser: close HttpParser{s=CLOSE,0 of -1}
17/11/03 14:40:52 DEBUG HttpParser: CLOSE --> CLOSE
17/11/03 14:40:52 DEBUG AbstractConnection: HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,Open,in,OSHUT,-,-,30003/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}] onFillInterestedFailed {}
17/11/03 14:40:52 DEBUG WriteFlusher: ignored: WriteFlusher@17295235{IDLE} {}
17/11/03 14:40:52 DEBUG ChannelEndPoint: close SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,CLOSED,in,OSHUT,-,-,30003/30000,HttpConnection@715de90c}{io=1/1,kio=1,kro=1}
17/11/03 14:40:52 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$2@392929f7 on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:40:52 DEBUG WriteFlusher: ignored: WriteFlusher@17295235{IDLE} {}
17/11/03 14:40:52 DEBUG ManagedSelector: Selector loop woken up from select, 0/0 selected
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced org.spark_project.jetty.io.ManagedSelector$2@392929f7
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:40:52 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run org.spark_project.jetty.io.ManagedSelector$2@392929f7
17/11/03 14:40:52 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:40:52 DEBUG ManagedSelector: Destroyed SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,CLOSED,ISHUT,OSHUT,-,-,30004/30000,HttpConnection@715de90c}{io=1/1,kio=-1,kro=-1}
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:40:52 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:40:52 DEBUG AbstractConnection: onClose HttpConnection@715de90c[SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,CLOSED,ISHUT,OSHUT,-,-,30004/30000,HttpConnection@715de90c}{io=1/1,kio=-1,kro=-1}][p=HttpParser{s=CLOSE,0 of -1},g=HttpGenerator@177ce014{s=START},c=HttpChannelOverHttp@650770f9{r=7,c=false,a=IDLE,uri=null}]
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran org.spark_project.jetty.io.ManagedSelector$2@392929f7
17/11/03 14:40:52 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:40:52 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:40:52 DEBUG AbstractEndPoint: Ignored idle endpoint SelectChannelEndPoint@3fd62ec1{/122.178.219.222:58645<->4040,CLOSED,ISHUT,OSHUT,-,-,30003/30000,HttpConnection@715de90c}{io=1/1,kio=-1,kro=-1}
17/11/03 14:40:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #98
17/11/03 14:40:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #98
17/11/03 14:40:55 DEBUG ProtobufRpcEngine: Call: renewLease took 1ms
17/11/03 14:40:55 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:40:55 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:40:57 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:40:57 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:57 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:40:57 DEBUG RecordReaderImpl: chunks = [range start: 13388 end: 585785]
17/11/03 14:40:57 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:40:57 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:40:57 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:40:57 DEBUG RecordReaderImpl: merge = [data range [13388, 585785), size: 572397 type: array-backed]
17/11/03 14:41:00 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:41:00 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:00 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:41:00 DEBUG RecordReaderImpl: chunks = [range start: 10023 end: 318585]
17/11/03 14:41:00 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:41:00 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00006-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042879_302108): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:00 DEBUG RecordReaderImpl: merge = [data range [10023, 318585), size: 308562 type: array-backed]
17/11/03 14:41:03 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-3833878, partition values: [I]
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #99
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #99
17/11/03 14:41:03 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #100
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #100
17/11/03 14:41:03 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 2ms
17/11/03 14:41:03 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=3833878
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145; getBlockSize()=3833878; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145; getBlockSize()=3833878; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #101
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #101
17/11/03 14:41:03 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:03 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:41:03 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:03 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:41:03 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:03 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #102
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #102
17/11/03 14:41:03 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 2ms
17/11/03 14:41:03 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=3833878
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145; getBlockSize()=3833878; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145; getBlockSize()=3833878; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #103
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #103
17/11/03 14:41:03 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:03 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:41:03 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:03 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:41:03 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 3833878}
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #104
17/11/03 14:41:03 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #104
17/11/03 14:41:03 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 2ms
17/11/03 14:41:03 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=3833878
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145; getBlockSize()=3833878; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145; getBlockSize()=3833878; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:03 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:41:03 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:03 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:03 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:03 DEBUG RecordReaderImpl: chunks = [range start: 20165 end: 982754]
17/11/03 14:41:03 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:03 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:03 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:03 DEBUG RecordReaderImpl: merge = [data range [20165, 982754), size: 962589 type: array-backed]
17/11/03 14:41:03 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:41:09 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:09 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:09 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:09 DEBUG RecordReaderImpl: chunks = [range start: 13519 end: 595904]
17/11/03 14:41:09 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:09 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:09 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:09 DEBUG RecordReaderImpl: merge = [data range [13519, 595904), size: 582385 type: array-backed]
17/11/03 14:41:12 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:12 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:12 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:12 DEBUG RecordReaderImpl: chunks = [range start: 13669 end: 621197]
17/11/03 14:41:12 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:12 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:12 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:12 DEBUG RecordReaderImpl: merge = [data range [13669, 621197), size: 607528 type: array-backed]
17/11/03 14:41:16 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:41:16 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 870723 flag: 0 flag: 0 flag: 0
17/11/03 14:41:16 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:16 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:16 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:16 DEBUG RecordReaderImpl: chunks = [range start: 13423 end: 582405]
17/11/03 14:41:16 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:16 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:16 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:16 DEBUG RecordReaderImpl: merge = [data range [13423, 582405), size: 568982 type: array-backed]
17/11/03 14:41:19 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:19 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:19 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:19 DEBUG RecordReaderImpl: chunks = [range start: 13670 end: 576636]
17/11/03 14:41:19 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:19 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:19 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:19 DEBUG RecordReaderImpl: merge = [data range [13670, 576636), size: 562966 type: array-backed]
17/11/03 14:41:23 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:23 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:23 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:23 DEBUG RecordReaderImpl: chunks = [range start: 12309 end: 456987]
17/11/03 14:41:23 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:23 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00007-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042916_302145): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:23 DEBUG RecordReaderImpl: merge = [data range [12309, 456987), size: 444678 type: array-backed]
17/11/03 14:41:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #105
17/11/03 14:41:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #105
17/11/03 14:41:25 DEBUG ProtobufRpcEngine: Call: renewLease took 1ms
17/11/03 14:41:25 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:41:25 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:41:26 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00010-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-941410, partition values: [I]
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #106
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #106
17/11/03 14:41:26 DEBUG ProtobufRpcEngine: Call: getFileInfo took 2ms
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #107
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #107
17/11/03 14:41:26 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:26 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=941410
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149; getBlockSize()=941410; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149; getBlockSize()=941410; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #108
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #108
17/11/03 14:41:26 DEBUG ProtobufRpcEngine: Call: getFileInfo took 0ms
17/11/03 14:41:26 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:26 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00010-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:26 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00010-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:26 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #109
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #109
17/11/03 14:41:26 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:26 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=941410
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149; getBlockSize()=941410; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149; getBlockSize()=941410; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #110
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #110
17/11/03 14:41:26 DEBUG ProtobufRpcEngine: Call: getFileInfo took 0ms
17/11/03 14:41:26 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:41:26 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00010-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:26 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.46, datanodeId = DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]
17/11/03 14:41:26 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:41:26 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00010-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 941410}
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #111
17/11/03 14:41:26 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #111
17/11/03 14:41:26 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:26 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=941410
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149; getBlockSize()=941410; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149; getBlockSize()=941410; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:26 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:41:26 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:41:26 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00010-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:26 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:41:26 DEBUG RecordReaderImpl: chunks = [range start: 18488 end: 936854]
17/11/03 14:41:26 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:41:26 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00010-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042920_302149): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:26 DEBUG RecordReaderImpl: merge = [data range [18488, 936854), size: 918366 type: array-backed]
17/11/03 14:41:26 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:41:32 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00011-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-897466, partition values: [I]
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #112
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #112
17/11/03 14:41:32 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #113
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #113
17/11/03 14:41:32 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:32 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=897466
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163; getBlockSize()=897466; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163; getBlockSize()=897466; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #114
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #114
17/11/03 14:41:32 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:32 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:41:32 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00011-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:32 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.46, datanodeId = DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]
17/11/03 14:41:32 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00011-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:32 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #115
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #115
17/11/03 14:41:32 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:32 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=897466
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163; getBlockSize()=897466; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163; getBlockSize()=897466; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #116
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #116
17/11/03 14:41:32 DEBUG ProtobufRpcEngine: Call: getFileInfo took 0ms
17/11/03 14:41:32 DEBUG DFSClient: Connecting to datanode 172.30.1.239:50010
17/11/03 14:41:32 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00011-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:32 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.239, datanodeId = DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]
17/11/03 14:41:32 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:41:32 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00011-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 897466}
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #117
17/11/03 14:41:32 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #117
17/11/03 14:41:32 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:32 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=897466
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163; getBlockSize()=897466; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163; getBlockSize()=897466; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.239:50010,DS-4d9bdf79-d4c4-4cc0-bc6f-7ad8efb426a8,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:32 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:41:32 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:41:32 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00011-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:32 DEBUG RecordReaderImpl: chunks = [range start: 17888 end: 892884]
17/11/03 14:41:32 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:41:32 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00011-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042934_302163): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:32 DEBUG RecordReaderImpl: merge = [data range [17888, 892884), size: 874996 type: array-backed]
17/11/03 14:41:32 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:41:38 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00012-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-945703, partition values: [I]
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #118
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #118
17/11/03 14:41:38 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #119
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #119
17/11/03 14:41:38 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 0ms
17/11/03 14:41:38 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=945703
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169; getBlockSize()=945703; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169; getBlockSize()=945703; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #120
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #120
17/11/03 14:41:38 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:38 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:41:38 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00012-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:38 DEBUG BlockReaderFactory: Closed potentially stale remote peer NioInetPeer(Socket[addr=/172.30.1.46,port=50010,localport=57449])
java.io.EOFException: Premature EOF: no length prefix available
	at org.apache.hadoop.hdfs.protocolPB.PBHelper.vintPrefixed(PBHelper.java:2282)
	at org.apache.hadoop.hdfs.RemoteBlockReader2.newBlockReader(RemoteBlockReader2.java:423)
	at org.apache.hadoop.hdfs.BlockReaderFactory.getRemoteBlockReader(BlockReaderFactory.java:818)
	at org.apache.hadoop.hdfs.BlockReaderFactory.getRemoteBlockReaderFromTcp(BlockReaderFactory.java:697)
	at org.apache.hadoop.hdfs.BlockReaderFactory.build(BlockReaderFactory.java:355)
	at org.apache.hadoop.hdfs.DFSInputStream.blockSeekTo(DFSInputStream.java:673)
	at org.apache.hadoop.hdfs.DFSInputStream.readWithStrategy(DFSInputStream.java:882)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:934)
	at java.io.DataInputStream.readFully(DataInputStream.java:195)
	at org.apache.hadoop.hive.ql.io.orc.ReaderImpl.extractMetaInfoFromFooter(ReaderImpl.java:369)
	at org.apache.hadoop.hive.ql.io.orc.ReaderImpl.<init>(ReaderImpl.java:316)
	at org.apache.hadoop.hive.ql.io.orc.OrcFile.createReader(OrcFile.java:187)
	at org.apache.spark.sql.hive.orc.OrcFileOperator$$anonfun$getFileReader$2.apply(OrcFileOperator.scala:68)
	at org.apache.spark.sql.hive.orc.OrcFileOperator$$anonfun$getFileReader$2.apply(OrcFileOperator.scala:67)
	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409)
	at scala.collection.TraversableOnce$class.collectFirst(TraversableOnce.scala:145)
	at scala.collection.AbstractIterator.collectFirst(Iterator.scala:1336)
	at org.apache.spark.sql.hive.orc.OrcFileOperator$.getFileReader(OrcFileOperator.scala:69)
	at org.apache.spark.sql.hive.orc.OrcFileOperator$$anonfun$readSchema$1.apply(OrcFileOperator.scala:77)
	at org.apache.spark.sql.hive.orc.OrcFileOperator$$anonfun$readSchema$1.apply(OrcFileOperator.scala:77)
	at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
	at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
	at scala.collection.immutable.List.flatMap(List.scala:344)
	at org.apache.spark.sql.hive.orc.OrcFileOperator$.readSchema(OrcFileOperator.scala:77)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:137)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:136)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:41:38 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.46, datanodeId = DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]
17/11/03 14:41:38 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00012-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:38 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #121
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #121
17/11/03 14:41:38 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 2ms
17/11/03 14:41:38 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=945703
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169; getBlockSize()=945703; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169; getBlockSize()=945703; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #122
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #122
17/11/03 14:41:38 DEBUG ProtobufRpcEngine: Call: getFileInfo took 2ms
17/11/03 14:41:38 DEBUG DFSClient: Connecting to datanode 172.30.1.218:50010
17/11/03 14:41:38 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00012-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:38 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.218, datanodeId = DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]
17/11/03 14:41:38 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:41:38 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00012-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 945703}
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #123
17/11/03 14:41:38 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #123
17/11/03 14:41:38 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:38 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=945703
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169; getBlockSize()=945703; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169; getBlockSize()=945703; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:38 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:41:38 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:38 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00012-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:38 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:38 DEBUG RecordReaderImpl: chunks = [range start: 18381 end: 941150]
17/11/03 14:41:38 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:38 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00012-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042940_302169): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:38 DEBUG RecordReaderImpl: merge = [data range [18381, 941150), size: 922769 type: array-backed]
17/11/03 14:41:38 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:41:44 INFO FileScanRDD: Reading File path: hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00014-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, range: 0-933592, partition values: [I]
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #124
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #124
17/11/03 14:41:44 DEBUG ProtobufRpcEngine: Call: getFileInfo took 2ms
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #125
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #125
17/11/03 14:41:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:44 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=933592
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207; getBlockSize()=933592; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207; getBlockSize()=933592; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #126
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #126
17/11/03 14:41:44 DEBUG ProtobufRpcEngine: Call: getFileInfo took 1ms
17/11/03 14:41:44 DEBUG DFSClient: Connecting to datanode 172.30.1.46:50010
17/11/03 14:41:44 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00014-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:44 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.46, datanodeId = DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]
17/11/03 14:41:44 DEBUG OrcFileOperator: Reading schema from file List(hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00014-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc), got Hive schema string: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:44 INFO CatalystSqlParser: Parsing command: struct<c_customer_sk:decimal(38,0),c_customer_id:string,c_current_cdemo_sk:decimal(38,0),c_current_hdemo_sk:decimal(38,0),c_current_addr_sk:decimal(38,0),c_first_shipto_date_sk:decimal(38,0),c_first_sales_date_sk:decimal(38,0),c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:decimal(38,0),c_birth_month:decimal(38,0),c_birth_year:decimal(38,0),c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string,c_customer_sk__customer:decimal(38,0),c_customer_id__customer:string,c_current_cdemo_sk__customer:decimal(38,0),c_current_hdemo_sk__customer:decimal(38,0),c_current_addr_sk__customer:decimal(38,0),c_first_shipto_date_sk__customer:decimal(38,0),c_first_sales_date_sk__customer:decimal(38,0),c_salutation__customer:string,c_first_name__customer:string,c_last_name__customer:string,c_preferred_cust_flag__customer:string,c_birth_day__customer:decimal(38,0),c_birth_month__customer:decimal(38,0),c_birth_year__customer:decimal(38,0),c_birth_country__customer:string,c_login__customer:string,c_email_address__customer:string,c_last_review_date__customer:string,c_customer_sk__customer_2:decimal(38,0),c_customer_id__customer_2:string,c_current_cdemo_sk__customer_2:decimal(38,0),c_current_hdemo_sk__customer_2:decimal(38,0),c_current_addr_sk__customer_2:decimal(38,0),c_first_shipto_date_sk__customer_2:decimal(38,0),c_first_sales_date_sk__customer_2:decimal(38,0),c_salutation__customer_2:string,c_first_name__customer_2:string,c_last_name__customer_2:string,c_preferred_cust_flag__customer_2:string,c_birth_day__customer_2:decimal(38,0),c_birth_month__customer_2:decimal(38,0),c_birth_year__customer_2:decimal(38,0),c_birth_country__customer_2:string,c_login__customer_2:string,c_email_address__customer_2:string,c_last_review_date__customer_2:string,c_customer_sk__customer_3:decimal(38,0),c_customer_id__customer_3:string,c_current_cdemo_sk__customer_3:decimal(38,0),c_current_hdemo_sk__customer_3:decimal(38,0),c_current_addr_sk__customer_3:decimal(38,0),c_first_shipto_date_sk__customer_3:decimal(38,0),c_first_sales_date_sk__customer_3:decimal(38,0),c_salutation__customer_3:string,c_first_name__customer_3:string,c_last_name__customer_3:string,c_preferred_cust_flag__customer_3:string,c_birth_day__customer_3:decimal(38,0),c_birth_month__customer_3:decimal(38,0),c_birth_year__customer_3:decimal(38,0),c_birth_country__customer_3:string,c_login__customer_3:string,c_email_address__customer_3:string,c_last_review_date__customer_3:string,ziw_row_id:string,ziw_created_timestamp:timestamp,ziw_updated_timestamp:timestamp,c_salutation:string>
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #127
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #127
17/11/03 14:41:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 10ms
17/11/03 14:41:44 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=933592
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207; getBlockSize()=933592; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207; getBlockSize()=933592; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #128
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #128
17/11/03 14:41:44 DEBUG ProtobufRpcEngine: Call: getFileInfo took 5ms
17/11/03 14:41:44 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:44 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00014-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:44 DEBUG BlockReaderFactory: Closed potentially stale remote peer NioInetPeer(Socket[addr=/172.30.1.136,port=50010,localport=42711])
java.io.EOFException: Premature EOF: no length prefix available
	at org.apache.hadoop.hdfs.protocolPB.PBHelper.vintPrefixed(PBHelper.java:2282)
	at org.apache.hadoop.hdfs.RemoteBlockReader2.newBlockReader(RemoteBlockReader2.java:423)
	at org.apache.hadoop.hdfs.BlockReaderFactory.getRemoteBlockReader(BlockReaderFactory.java:818)
	at org.apache.hadoop.hdfs.BlockReaderFactory.getRemoteBlockReaderFromTcp(BlockReaderFactory.java:697)
	at org.apache.hadoop.hdfs.BlockReaderFactory.build(BlockReaderFactory.java:355)
	at org.apache.hadoop.hdfs.DFSInputStream.blockSeekTo(DFSInputStream.java:673)
	at org.apache.hadoop.hdfs.DFSInputStream.readWithStrategy(DFSInputStream.java:882)
	at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:934)
	at java.io.DataInputStream.readFully(DataInputStream.java:195)
	at org.apache.hadoop.hive.ql.io.orc.ReaderImpl.extractMetaInfoFromFooter(ReaderImpl.java:369)
	at org.apache.hadoop.hive.ql.io.orc.ReaderImpl.<init>(ReaderImpl.java:316)
	at org.apache.hadoop.hive.ql.io.orc.OrcFile.createReader(OrcFile.java:237)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:155)
	at org.apache.spark.sql.hive.orc.OrcFileFormat$$anonfun$buildReader$2.apply(OrcFileFormat.scala:131)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:136)
	at org.apache.spark.sql.execution.datasources.FileFormat$$anon$1.apply(FileFormat.scala:120)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.org$apache$spark$sql$execution$datasources$FileScanRDD$$anon$$readCurrentFile(FileScanRDD.scala:124)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.nextIterator(FileScanRDD.scala:174)
	at org.apache.spark.sql.execution.datasources.FileScanRDD$$anon$1.hasNext(FileScanRDD.scala:105)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(generated.java:38)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:395)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:234)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:228)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$25.apply(RDD.scala:827)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:108)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
17/11/03 14:41:44 DEBUG SaslDataTransferClient: SASL client skipping handshake in unsecured configuration for addr = /172.30.1.136, datanodeId = DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK]
17/11/03 14:41:44 DEBUG OrcInputFormat: No ORC pushdown predicate
17/11/03 14:41:44 INFO ReaderImpl: Reading ORC rows from hdfs://ip-172-30-1-247.ec2.internal:8020/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00014-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc with {include: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], offset: 0, length: 933592}
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #129
17/11/03 14:41:44 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #129
17/11/03 14:41:44 DEBUG ProtobufRpcEngine: Call: getBlockLocations took 1ms
17/11/03 14:41:44 DEBUG DFSClient: newInfo = LocatedBlocks{
  fileLength=933592
  underConstruction=false
  blocks=[LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207; getBlockSize()=933592; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}]
  lastLocatedBlock=LocatedBlock{BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207; getBlockSize()=933592; corrupt=false; offset=0; locs=[DatanodeInfoWithStorage[172.30.1.218:50010,DS-0aa7cf13-9c71-4b07-b486-0d065e987a58,DISK], DatanodeInfoWithStorage[172.30.1.136:50010,DS-1a938e67-2306-473d-9a8c-2520b370a30c,DISK], DatanodeInfoWithStorage[172.30.1.46:50010,DS-a13d22c6-dda8-470b-84a3-ab3bacf403b2,DISK]]}
  isLastBlockComplete=true}
17/11/03 14:41:44 INFO RecordReaderFactory: Schema is not specified on read. Using file schema.
17/11/03 14:41:44 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:44 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00014-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:44 DEBUG RecordReaderImpl: chunks = [range start: 18370 end: 929084]
17/11/03 14:41:44 DEBUG DFSClient: Connecting to datanode 172.30.1.136:50010
17/11/03 14:41:44 DEBUG PerformanceAdvisory: BlockReaderFactory(fileName=/apps/hive/warehouse/testparbck/ziw_status_flag=I/part-00014-48663744-18d5-4d23-a0c5-d70d619c104e_00000.c000.snappy.orc, block=BP-387439159-172.30.1.247-1493051499278:blk_1074042978_302207): PathInfo{path=, state=UNUSABLE} is not usable for short circuit; giving up on BlockReaderLocal.
17/11/03 14:41:44 DEBUG RecordReaderImpl: merge = [data range [18370, 929084), size: 910714 type: array-backed]
17/11/03 14:41:44 DEBUG GenerateUnsafeProjection: code for input[0, decimal(38,0), true],input[1, string, true],input[2, decimal(38,0), true],input[3, decimal(38,0), true],input[4, decimal(38,0), true],input[5, decimal(38,0), true],input[6, decimal(38,0), true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, decimal(38,0), true],input[11, decimal(38,0), true],input[12, decimal(38,0), true],input[13, string, true],input[14, string, true],input[15, string, true],input[16, string, true],input[17, decimal(38,0), true],input[18, string, true],input[19, decimal(38,0), true],input[20, decimal(38,0), true],input[21, decimal(38,0), true],input[22, decimal(38,0), true],input[23, decimal(38,0), true],input[24, string, true],input[25, string, true],input[26, string, true],input[27, string, true],input[28, decimal(38,0), true],input[29, decimal(38,0), true],input[30, decimal(38,0), true],input[31, string, true],input[32, string, true],input[33, string, true],input[34, string, true],input[35, decimal(38,0), true],input[36, string, true],input[37, decimal(38,0), true],input[38, decimal(38,0), true],input[39, decimal(38,0), true],input[40, decimal(38,0), true],input[41, decimal(38,0), true],input[42, string, true],input[43, string, true],input[44, string, true],input[45, string, true],input[46, decimal(38,0), true],input[47, decimal(38,0), true],input[48, decimal(38,0), true],input[49, string, true],input[50, string, true],input[51, string, true],input[52, string, true],input[53, decimal(38,0), true],input[54, string, true],input[55, decimal(38,0), true],input[56, decimal(38,0), true],input[57, decimal(38,0), true],input[58, decimal(38,0), true],input[59, decimal(38,0), true],input[60, string, true],input[61, string, true],input[62, string, true],input[63, string, true],input[64, decimal(38,0), true],input[65, decimal(38,0), true],input[66, decimal(38,0), true],input[67, string, true],input[68, string, true],input[69, string, true],input[70, string, true],input[71, string, true],input[72, timestamp, true],input[73, timestamp, true],input[74, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private UnsafeRow result;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder holder;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter rowWriter;
/* 011 */
/* 012 */   public SpecificUnsafeProjection(Object[] references) {
/* 013 */     this.references = references;
/* 014 */     result = new UnsafeRow(75);
/* 015 */     this.holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(result, 2336);
/* 016 */     this.rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(holder, 75);
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   public void initialize(int partitionIndex) {
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */
/* 025 */   private void apply_16(InternalRow i) {
/* 026 */
/* 027 */
/* 028 */     boolean isNull64 = i.isNullAt(64);
/* 029 */     Decimal value64 = isNull64 ? null : (i.getDecimal(64, 38, 0));
/* 030 */     if (isNull64) {
/* 031 */       rowWriter.write(64, (Decimal) null, 38, 0);
/* 032 */     } else {
/* 033 */       rowWriter.write(64, value64, 38, 0);
/* 034 */     }
/* 035 */
/* 036 */
/* 037 */     boolean isNull65 = i.isNullAt(65);
/* 038 */     Decimal value65 = isNull65 ? null : (i.getDecimal(65, 38, 0));
/* 039 */     if (isNull65) {
/* 040 */       rowWriter.write(65, (Decimal) null, 38, 0);
/* 041 */     } else {
/* 042 */       rowWriter.write(65, value65, 38, 0);
/* 043 */     }
/* 044 */
/* 045 */
/* 046 */     boolean isNull66 = i.isNullAt(66);
/* 047 */     Decimal value66 = isNull66 ? null : (i.getDecimal(66, 38, 0));
/* 048 */     if (isNull66) {
/* 049 */       rowWriter.write(66, (Decimal) null, 38, 0);
/* 050 */     } else {
/* 051 */       rowWriter.write(66, value66, 38, 0);
/* 052 */     }
/* 053 */
/* 054 */
/* 055 */     boolean isNull67 = i.isNullAt(67);
/* 056 */     UTF8String value67 = isNull67 ? null : (i.getUTF8String(67));
/* 057 */     if (isNull67) {
/* 058 */       rowWriter.setNullAt(67);
/* 059 */     } else {
/* 060 */       rowWriter.write(67, value67);
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */
/* 066 */   private void apply_4(InternalRow i) {
/* 067 */
/* 068 */
/* 069 */     boolean isNull16 = i.isNullAt(16);
/* 070 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(16));
/* 071 */     if (isNull16) {
/* 072 */       rowWriter.setNullAt(16);
/* 073 */     } else {
/* 074 */       rowWriter.write(16, value16);
/* 075 */     }
/* 076 */
/* 077 */
/* 078 */     boolean isNull17 = i.isNullAt(17);
/* 079 */     Decimal value17 = isNull17 ? null : (i.getDecimal(17, 38, 0));
/* 080 */     if (isNull17) {
/* 081 */       rowWriter.write(17, (Decimal) null, 38, 0);
/* 082 */     } else {
/* 083 */       rowWriter.write(17, value17, 38, 0);
/* 084 */     }
/* 085 */
/* 086 */
/* 087 */     boolean isNull18 = i.isNullAt(18);
/* 088 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(18));
/* 089 */     if (isNull18) {
/* 090 */       rowWriter.setNullAt(18);
/* 091 */     } else {
/* 092 */       rowWriter.write(18, value18);
/* 093 */     }
/* 094 */
/* 095 */
/* 096 */     boolean isNull19 = i.isNullAt(19);
/* 097 */     Decimal value19 = isNull19 ? null : (i.getDecimal(19, 38, 0));
/* 098 */     if (isNull19) {
/* 099 */       rowWriter.write(19, (Decimal) null, 38, 0);
/* 100 */     } else {
/* 101 */       rowWriter.write(19, value19, 38, 0);
/* 102 */     }
/* 103 */
/* 104 */   }
/* 105 */
/* 106 */
/* 107 */   private void apply_7(InternalRow i) {
/* 108 */
/* 109 */
/* 110 */     boolean isNull28 = i.isNullAt(28);
/* 111 */     Decimal value28 = isNull28 ? null : (i.getDecimal(28, 38, 0));
/* 112 */     if (isNull28) {
/* 113 */       rowWriter.write(28, (Decimal) null, 38, 0);
/* 114 */     } else {
/* 115 */       rowWriter.write(28, value28, 38, 0);
/* 116 */     }
/* 117 */
/* 118 */
/* 119 */     boolean isNull29 = i.isNullAt(29);
/* 120 */     Decimal value29 = isNull29 ? null : (i.getDecimal(29, 38, 0));
/* 121 */     if (isNull29) {
/* 122 */       rowWriter.write(29, (Decimal) null, 38, 0);
/* 123 */     } else {
/* 124 */       rowWriter.write(29, value29, 38, 0);
/* 125 */     }
/* 126 */
/* 127 */
/* 128 */     boolean isNull30 = i.isNullAt(30);
/* 129 */     Decimal value30 = isNull30 ? null : (i.getDecimal(30, 38, 0));
/* 130 */     if (isNull30) {
/* 131 */       rowWriter.write(30, (Decimal) null, 38, 0);
/* 132 */     } else {
/* 133 */       rowWriter.write(30, value30, 38, 0);
/* 134 */     }
/* 135 */
/* 136 */
/* 137 */     boolean isNull31 = i.isNullAt(31);
/* 138 */     UTF8String value31 = isNull31 ? null : (i.getUTF8String(31));
/* 139 */     if (isNull31) {
/* 140 */       rowWriter.setNullAt(31);
/* 141 */     } else {
/* 142 */       rowWriter.write(31, value31);
/* 143 */     }
/* 144 */
/* 145 */   }
/* 146 */
/* 147 */
/* 148 */   private void apply_1(InternalRow i) {
/* 149 */
/* 150 */
/* 151 */     boolean isNull4 = i.isNullAt(4);
/* 152 */     Decimal value4 = isNull4 ? null : (i.getDecimal(4, 38, 0));
/* 153 */     if (isNull4) {
/* 154 */       rowWriter.write(4, (Decimal) null, 38, 0);
/* 155 */     } else {
/* 156 */       rowWriter.write(4, value4, 38, 0);
/* 157 */     }
/* 158 */
/* 159 */
/* 160 */     boolean isNull5 = i.isNullAt(5);
/* 161 */     Decimal value5 = isNull5 ? null : (i.getDecimal(5, 38, 0));
/* 162 */     if (isNull5) {
/* 163 */       rowWriter.write(5, (Decimal) null, 38, 0);
/* 164 */     } else {
/* 165 */       rowWriter.write(5, value5, 38, 0);
/* 166 */     }
/* 167 */
/* 168 */
/* 169 */     boolean isNull6 = i.isNullAt(6);
/* 170 */     Decimal value6 = isNull6 ? null : (i.getDecimal(6, 38, 0));
/* 171 */     if (isNull6) {
/* 172 */       rowWriter.write(6, (Decimal) null, 38, 0);
/* 173 */     } else {
/* 174 */       rowWriter.write(6, value6, 38, 0);
/* 175 */     }
/* 176 */
/* 177 */
/* 178 */     boolean isNull7 = i.isNullAt(7);
/* 179 */     UTF8String value7 = isNull7 ? null : (i.getUTF8String(7));
/* 180 */     if (isNull7) {
/* 181 */       rowWriter.setNullAt(7);
/* 182 */     } else {
/* 183 */       rowWriter.write(7, value7);
/* 184 */     }
/* 185 */
/* 186 */   }
/* 187 */
/* 188 */
/* 189 */   private void apply_18(InternalRow i) {
/* 190 */
/* 191 */
/* 192 */     boolean isNull72 = i.isNullAt(72);
/* 193 */     long value72 = isNull72 ? -1L : (i.getLong(72));
/* 194 */     if (isNull72) {
/* 195 */       rowWriter.setNullAt(72);
/* 196 */     } else {
/* 197 */       rowWriter.write(72, value72);
/* 198 */     }
/* 199 */
/* 200 */
/* 201 */     boolean isNull73 = i.isNullAt(73);
/* 202 */     long value73 = isNull73 ? -1L : (i.getLong(73));
/* 203 */     if (isNull73) {
/* 204 */       rowWriter.setNullAt(73);
/* 205 */     } else {
/* 206 */       rowWriter.write(73, value73);
/* 207 */     }
/* 208 */
/* 209 */
/* 210 */     boolean isNull74 = i.isNullAt(74);
/* 211 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(74));
/* 212 */     if (isNull74) {
/* 213 */       rowWriter.setNullAt(74);
/* 214 */     } else {
/* 215 */       rowWriter.write(74, value74);
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_12(InternalRow i) {
/* 222 */
/* 223 */
/* 224 */     boolean isNull48 = i.isNullAt(48);
/* 225 */     Decimal value48 = isNull48 ? null : (i.getDecimal(48, 38, 0));
/* 226 */     if (isNull48) {
/* 227 */       rowWriter.write(48, (Decimal) null, 38, 0);
/* 228 */     } else {
/* 229 */       rowWriter.write(48, value48, 38, 0);
/* 230 */     }
/* 231 */
/* 232 */
/* 233 */     boolean isNull49 = i.isNullAt(49);
/* 234 */     UTF8String value49 = isNull49 ? null : (i.getUTF8String(49));
/* 235 */     if (isNull49) {
/* 236 */       rowWriter.setNullAt(49);
/* 237 */     } else {
/* 238 */       rowWriter.write(49, value49);
/* 239 */     }
/* 240 */
/* 241 */
/* 242 */     boolean isNull50 = i.isNullAt(50);
/* 243 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(50));
/* 244 */     if (isNull50) {
/* 245 */       rowWriter.setNullAt(50);
/* 246 */     } else {
/* 247 */       rowWriter.write(50, value50);
/* 248 */     }
/* 249 */
/* 250 */
/* 251 */     boolean isNull51 = i.isNullAt(51);
/* 252 */     UTF8String value51 = isNull51 ? null : (i.getUTF8String(51));
/* 253 */     if (isNull51) {
/* 254 */       rowWriter.setNullAt(51);
/* 255 */     } else {
/* 256 */       rowWriter.write(51, value51);
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_15(InternalRow i) {
/* 263 */
/* 264 */
/* 265 */     boolean isNull60 = i.isNullAt(60);
/* 266 */     UTF8String value60 = isNull60 ? null : (i.getUTF8String(60));
/* 267 */     if (isNull60) {
/* 268 */       rowWriter.setNullAt(60);
/* 269 */     } else {
/* 270 */       rowWriter.write(60, value60);
/* 271 */     }
/* 272 */
/* 273 */
/* 274 */     boolean isNull61 = i.isNullAt(61);
/* 275 */     UTF8String value61 = isNull61 ? null : (i.getUTF8String(61));
/* 276 */     if (isNull61) {
/* 277 */       rowWriter.setNullAt(61);
/* 278 */     } else {
/* 279 */       rowWriter.write(61, value61);
/* 280 */     }
/* 281 */
/* 282 */
/* 283 */     boolean isNull62 = i.isNullAt(62);
/* 284 */     UTF8String value62 = isNull62 ? null : (i.getUTF8String(62));
/* 285 */     if (isNull62) {
/* 286 */       rowWriter.setNullAt(62);
/* 287 */     } else {
/* 288 */       rowWriter.write(62, value62);
/* 289 */     }
/* 290 */
/* 291 */
/* 292 */     boolean isNull63 = i.isNullAt(63);
/* 293 */     UTF8String value63 = isNull63 ? null : (i.getUTF8String(63));
/* 294 */     if (isNull63) {
/* 295 */       rowWriter.setNullAt(63);
/* 296 */     } else {
/* 297 */       rowWriter.write(63, value63);
/* 298 */     }
/* 299 */
/* 300 */   }
/* 301 */
/* 302 */
/* 303 */   private void apply_9(InternalRow i) {
/* 304 */
/* 305 */
/* 306 */     boolean isNull36 = i.isNullAt(36);
/* 307 */     UTF8String value36 = isNull36 ? null : (i.getUTF8String(36));
/* 308 */     if (isNull36) {
/* 309 */       rowWriter.setNullAt(36);
/* 310 */     } else {
/* 311 */       rowWriter.write(36, value36);
/* 312 */     }
/* 313 */
/* 314 */
/* 315 */     boolean isNull37 = i.isNullAt(37);
/* 316 */     Decimal value37 = isNull37 ? null : (i.getDecimal(37, 38, 0));
/* 317 */     if (isNull37) {
/* 318 */       rowWriter.write(37, (Decimal) null, 38, 0);
/* 319 */     } else {
/* 320 */       rowWriter.write(37, value37, 38, 0);
/* 321 */     }
/* 322 */
/* 323 */
/* 324 */     boolean isNull38 = i.isNullAt(38);
/* 325 */     Decimal value38 = isNull38 ? null : (i.getDecimal(38, 38, 0));
/* 326 */     if (isNull38) {
/* 327 */       rowWriter.write(38, (Decimal) null, 38, 0);
/* 328 */     } else {
/* 329 */       rowWriter.write(38, value38, 38, 0);
/* 330 */     }
/* 331 */
/* 332 */
/* 333 */     boolean isNull39 = i.isNullAt(39);
/* 334 */     Decimal value39 = isNull39 ? null : (i.getDecimal(39, 38, 0));
/* 335 */     if (isNull39) {
/* 336 */       rowWriter.write(39, (Decimal) null, 38, 0);
/* 337 */     } else {
/* 338 */       rowWriter.write(39, value39, 38, 0);
/* 339 */     }
/* 340 */
/* 341 */   }
/* 342 */
/* 343 */
/* 344 */   private void apply_3(InternalRow i) {
/* 345 */
/* 346 */
/* 347 */     boolean isNull12 = i.isNullAt(12);
/* 348 */     Decimal value12 = isNull12 ? null : (i.getDecimal(12, 38, 0));
/* 349 */     if (isNull12) {
/* 350 */       rowWriter.write(12, (Decimal) null, 38, 0);
/* 351 */     } else {
/* 352 */       rowWriter.write(12, value12, 38, 0);
/* 353 */     }
/* 354 */
/* 355 */
/* 356 */     boolean isNull13 = i.isNullAt(13);
/* 357 */     UTF8String value13 = isNull13 ? null : (i.getUTF8String(13));
/* 358 */     if (isNull13) {
/* 359 */       rowWriter.setNullAt(13);
/* 360 */     } else {
/* 361 */       rowWriter.write(13, value13);
/* 362 */     }
/* 363 */
/* 364 */
/* 365 */     boolean isNull14 = i.isNullAt(14);
/* 366 */     UTF8String value14 = isNull14 ? null : (i.getUTF8String(14));
/* 367 */     if (isNull14) {
/* 368 */       rowWriter.setNullAt(14);
/* 369 */     } else {
/* 370 */       rowWriter.write(14, value14);
/* 371 */     }
/* 372 */
/* 373 */
/* 374 */     boolean isNull15 = i.isNullAt(15);
/* 375 */     UTF8String value15 = isNull15 ? null : (i.getUTF8String(15));
/* 376 */     if (isNull15) {
/* 377 */       rowWriter.setNullAt(15);
/* 378 */     } else {
/* 379 */       rowWriter.write(15, value15);
/* 380 */     }
/* 381 */
/* 382 */   }
/* 383 */
/* 384 */
/* 385 */   private void apply_6(InternalRow i) {
/* 386 */
/* 387 */
/* 388 */     boolean isNull24 = i.isNullAt(24);
/* 389 */     UTF8String value24 = isNull24 ? null : (i.getUTF8String(24));
/* 390 */     if (isNull24) {
/* 391 */       rowWriter.setNullAt(24);
/* 392 */     } else {
/* 393 */       rowWriter.write(24, value24);
/* 394 */     }
/* 395 */
/* 396 */
/* 397 */     boolean isNull25 = i.isNullAt(25);
/* 398 */     UTF8String value25 = isNull25 ? null : (i.getUTF8String(25));
/* 399 */     if (isNull25) {
/* 400 */       rowWriter.setNullAt(25);
/* 401 */     } else {
/* 402 */       rowWriter.write(25, value25);
/* 403 */     }
/* 404 */
/* 405 */
/* 406 */     boolean isNull26 = i.isNullAt(26);
/* 407 */     UTF8String value26 = isNull26 ? null : (i.getUTF8String(26));
/* 408 */     if (isNull26) {
/* 409 */       rowWriter.setNullAt(26);
/* 410 */     } else {
/* 411 */       rowWriter.write(26, value26);
/* 412 */     }
/* 413 */
/* 414 */
/* 415 */     boolean isNull27 = i.isNullAt(27);
/* 416 */     UTF8String value27 = isNull27 ? null : (i.getUTF8String(27));
/* 417 */     if (isNull27) {
/* 418 */       rowWriter.setNullAt(27);
/* 419 */     } else {
/* 420 */       rowWriter.write(27, value27);
/* 421 */     }
/* 422 */
/* 423 */   }
/* 424 */
/* 425 */
/* 426 */   private void apply_14(InternalRow i) {
/* 427 */
/* 428 */
/* 429 */     boolean isNull56 = i.isNullAt(56);
/* 430 */     Decimal value56 = isNull56 ? null : (i.getDecimal(56, 38, 0));
/* 431 */     if (isNull56) {
/* 432 */       rowWriter.write(56, (Decimal) null, 38, 0);
/* 433 */     } else {
/* 434 */       rowWriter.write(56, value56, 38, 0);
/* 435 */     }
/* 436 */
/* 437 */
/* 438 */     boolean isNull57 = i.isNullAt(57);
/* 439 */     Decimal value57 = isNull57 ? null : (i.getDecimal(57, 38, 0));
/* 440 */     if (isNull57) {
/* 441 */       rowWriter.write(57, (Decimal) null, 38, 0);
/* 442 */     } else {
/* 443 */       rowWriter.write(57, value57, 38, 0);
/* 444 */     }
/* 445 */
/* 446 */
/* 447 */     boolean isNull58 = i.isNullAt(58);
/* 448 */     Decimal value58 = isNull58 ? null : (i.getDecimal(58, 38, 0));
/* 449 */     if (isNull58) {
/* 450 */       rowWriter.write(58, (Decimal) null, 38, 0);
/* 451 */     } else {
/* 452 */       rowWriter.write(58, value58, 38, 0);
/* 453 */     }
/* 454 */
/* 455 */
/* 456 */     boolean isNull59 = i.isNullAt(59);
/* 457 */     Decimal value59 = isNull59 ? null : (i.getDecimal(59, 38, 0));
/* 458 */     if (isNull59) {
/* 459 */       rowWriter.write(59, (Decimal) null, 38, 0);
/* 460 */     } else {
/* 461 */       rowWriter.write(59, value59, 38, 0);
/* 462 */     }
/* 463 */
/* 464 */   }
/* 465 */
/* 466 */
/* 467 */   private void apply_0(InternalRow i) {
/* 468 */
/* 469 */
/* 470 */     boolean isNull = i.isNullAt(0);
/* 471 */     Decimal value = isNull ? null : (i.getDecimal(0, 38, 0));
/* 472 */     if (isNull) {
/* 473 */       rowWriter.write(0, (Decimal) null, 38, 0);
/* 474 */     } else {
/* 475 */       rowWriter.write(0, value, 38, 0);
/* 476 */     }
/* 477 */
/* 478 */
/* 479 */     boolean isNull1 = i.isNullAt(1);
/* 480 */     UTF8String value1 = isNull1 ? null : (i.getUTF8String(1));
/* 481 */     if (isNull1) {
/* 482 */       rowWriter.setNullAt(1);
/* 483 */     } else {
/* 484 */       rowWriter.write(1, value1);
/* 485 */     }
/* 486 */
/* 487 */
/* 488 */     boolean isNull2 = i.isNullAt(2);
/* 489 */     Decimal value2 = isNull2 ? null : (i.getDecimal(2, 38, 0));
/* 490 */     if (isNull2) {
/* 491 */       rowWriter.write(2, (Decimal) null, 38, 0);
/* 492 */     } else {
/* 493 */       rowWriter.write(2, value2, 38, 0);
/* 494 */     }
/* 495 */
/* 496 */
/* 497 */     boolean isNull3 = i.isNullAt(3);
/* 498 */     Decimal value3 = isNull3 ? null : (i.getDecimal(3, 38, 0));
/* 499 */     if (isNull3) {
/* 500 */       rowWriter.write(3, (Decimal) null, 38, 0);
/* 501 */     } else {
/* 502 */       rowWriter.write(3, value3, 38, 0);
/* 503 */     }
/* 504 */
/* 505 */   }
/* 506 */
/* 507 */
/* 508 */   private void apply_17(InternalRow i) {
/* 509 */
/* 510 */
/* 511 */     boolean isNull68 = i.isNullAt(68);
/* 512 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(68));
/* 513 */     if (isNull68) {
/* 514 */       rowWriter.setNullAt(68);
/* 515 */     } else {
/* 516 */       rowWriter.write(68, value68);
/* 517 */     }
/* 518 */
/* 519 */
/* 520 */     boolean isNull69 = i.isNullAt(69);
/* 521 */     UTF8String value69 = isNull69 ? null : (i.getUTF8String(69));
/* 522 */     if (isNull69) {
/* 523 */       rowWriter.setNullAt(69);
/* 524 */     } else {
/* 525 */       rowWriter.write(69, value69);
/* 526 */     }
/* 527 */
/* 528 */
/* 529 */     boolean isNull70 = i.isNullAt(70);
/* 530 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(70));
/* 531 */     if (isNull70) {
/* 532 */       rowWriter.setNullAt(70);
/* 533 */     } else {
/* 534 */       rowWriter.write(70, value70);
/* 535 */     }
/* 536 */
/* 537 */
/* 538 */     boolean isNull71 = i.isNullAt(71);
/* 539 */     UTF8String value71 = isNull71 ? null : (i.getUTF8String(71));
/* 540 */     if (isNull71) {
/* 541 */       rowWriter.setNullAt(71);
/* 542 */     } else {
/* 543 */       rowWriter.write(71, value71);
/* 544 */     }
/* 545 */
/* 546 */   }
/* 547 */
/* 548 */
/* 549 */   private void apply_11(InternalRow i) {
/* 550 */
/* 551 */
/* 552 */     boolean isNull44 = i.isNullAt(44);
/* 553 */     UTF8String value44 = isNull44 ? null : (i.getUTF8String(44));
/* 554 */     if (isNull44) {
/* 555 */       rowWriter.setNullAt(44);
/* 556 */     } else {
/* 557 */       rowWriter.write(44, value44);
/* 558 */     }
/* 559 */
/* 560 */
/* 561 */     boolean isNull45 = i.isNullAt(45);
/* 562 */     UTF8String value45 = isNull45 ? null : (i.getUTF8String(45));
/* 563 */     if (isNull45) {
/* 564 */       rowWriter.setNullAt(45);
/* 565 */     } else {
/* 566 */       rowWriter.write(45, value45);
/* 567 */     }
/* 568 */
/* 569 */
/* 570 */     boolean isNull46 = i.isNullAt(46);
/* 571 */     Decimal value46 = isNull46 ? null : (i.getDecimal(46, 38, 0));
/* 572 */     if (isNull46) {
/* 573 */       rowWriter.write(46, (Decimal) null, 38, 0);
/* 574 */     } else {
/* 575 */       rowWriter.write(46, value46, 38, 0);
/* 576 */     }
/* 577 */
/* 578 */
/* 579 */     boolean isNull47 = i.isNullAt(47);
/* 580 */     Decimal value47 = isNull47 ? null : (i.getDecimal(47, 38, 0));
/* 581 */     if (isNull47) {
/* 582 */       rowWriter.write(47, (Decimal) null, 38, 0);
/* 583 */     } else {
/* 584 */       rowWriter.write(47, value47, 38, 0);
/* 585 */     }
/* 586 */
/* 587 */   }
/* 588 */
/* 589 */
/* 590 */   private void apply_8(InternalRow i) {
/* 591 */
/* 592 */
/* 593 */     boolean isNull32 = i.isNullAt(32);
/* 594 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(32));
/* 595 */     if (isNull32) {
/* 596 */       rowWriter.setNullAt(32);
/* 597 */     } else {
/* 598 */       rowWriter.write(32, value32);
/* 599 */     }
/* 600 */
/* 601 */
/* 602 */     boolean isNull33 = i.isNullAt(33);
/* 603 */     UTF8String value33 = isNull33 ? null : (i.getUTF8String(33));
/* 604 */     if (isNull33) {
/* 605 */       rowWriter.setNullAt(33);
/* 606 */     } else {
/* 607 */       rowWriter.write(33, value33);
/* 608 */     }
/* 609 */
/* 610 */
/* 611 */     boolean isNull34 = i.isNullAt(34);
/* 612 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(34));
/* 613 */     if (isNull34) {
/* 614 */       rowWriter.setNullAt(34);
/* 615 */     } else {
/* 616 */       rowWriter.write(34, value34);
/* 617 */     }
/* 618 */
/* 619 */
/* 620 */     boolean isNull35 = i.isNullAt(35);
/* 621 */     Decimal value35 = isNull35 ? null : (i.getDecimal(35, 38, 0));
/* 622 */     if (isNull35) {
/* 623 */       rowWriter.write(35, (Decimal) null, 38, 0);
/* 624 */     } else {
/* 625 */       rowWriter.write(35, value35, 38, 0);
/* 626 */     }
/* 627 */
/* 628 */   }
/* 629 */
/* 630 */
/* 631 */   private void apply_2(InternalRow i) {
/* 632 */
/* 633 */
/* 634 */     boolean isNull8 = i.isNullAt(8);
/* 635 */     UTF8String value8 = isNull8 ? null : (i.getUTF8String(8));
/* 636 */     if (isNull8) {
/* 637 */       rowWriter.setNullAt(8);
/* 638 */     } else {
/* 639 */       rowWriter.write(8, value8);
/* 640 */     }
/* 641 */
/* 642 */
/* 643 */     boolean isNull9 = i.isNullAt(9);
/* 644 */     UTF8String value9 = isNull9 ? null : (i.getUTF8String(9));
/* 645 */     if (isNull9) {
/* 646 */       rowWriter.setNullAt(9);
/* 647 */     } else {
/* 648 */       rowWriter.write(9, value9);
/* 649 */     }
/* 650 */
/* 651 */
/* 652 */     boolean isNull10 = i.isNullAt(10);
/* 653 */     Decimal value10 = isNull10 ? null : (i.getDecimal(10, 38, 0));
/* 654 */     if (isNull10) {
/* 655 */       rowWriter.write(10, (Decimal) null, 38, 0);
/* 656 */     } else {
/* 657 */       rowWriter.write(10, value10, 38, 0);
/* 658 */     }
/* 659 */
/* 660 */
/* 661 */     boolean isNull11 = i.isNullAt(11);
/* 662 */     Decimal value11 = isNull11 ? null : (i.getDecimal(11, 38, 0));
/* 663 */     if (isNull11) {
/* 664 */       rowWriter.write(11, (Decimal) null, 38, 0);
/* 665 */     } else {
/* 666 */       rowWriter.write(11, value11, 38, 0);
/* 667 */     }
/* 668 */
/* 669 */   }
/* 670 */
/* 671 */
/* 672 */   private void apply_5(InternalRow i) {
/* 673 */
/* 674 */
/* 675 */     boolean isNull20 = i.isNullAt(20);
/* 676 */     Decimal value20 = isNull20 ? null : (i.getDecimal(20, 38, 0));
/* 677 */     if (isNull20) {
/* 678 */       rowWriter.write(20, (Decimal) null, 38, 0);
/* 679 */     } else {
/* 680 */       rowWriter.write(20, value20, 38, 0);
/* 681 */     }
/* 682 */
/* 683 */
/* 684 */     boolean isNull21 = i.isNullAt(21);
/* 685 */     Decimal value21 = isNull21 ? null : (i.getDecimal(21, 38, 0));
/* 686 */     if (isNull21) {
/* 687 */       rowWriter.write(21, (Decimal) null, 38, 0);
/* 688 */     } else {
/* 689 */       rowWriter.write(21, value21, 38, 0);
/* 690 */     }
/* 691 */
/* 692 */
/* 693 */     boolean isNull22 = i.isNullAt(22);
/* 694 */     Decimal value22 = isNull22 ? null : (i.getDecimal(22, 38, 0));
/* 695 */     if (isNull22) {
/* 696 */       rowWriter.write(22, (Decimal) null, 38, 0);
/* 697 */     } else {
/* 698 */       rowWriter.write(22, value22, 38, 0);
/* 699 */     }
/* 700 */
/* 701 */
/* 702 */     boolean isNull23 = i.isNullAt(23);
/* 703 */     Decimal value23 = isNull23 ? null : (i.getDecimal(23, 38, 0));
/* 704 */     if (isNull23) {
/* 705 */       rowWriter.write(23, (Decimal) null, 38, 0);
/* 706 */     } else {
/* 707 */       rowWriter.write(23, value23, 38, 0);
/* 708 */     }
/* 709 */
/* 710 */   }
/* 711 */
/* 712 */
/* 713 */   private void apply_10(InternalRow i) {
/* 714 */
/* 715 */
/* 716 */     boolean isNull40 = i.isNullAt(40);
/* 717 */     Decimal value40 = isNull40 ? null : (i.getDecimal(40, 38, 0));
/* 718 */     if (isNull40) {
/* 719 */       rowWriter.write(40, (Decimal) null, 38, 0);
/* 720 */     } else {
/* 721 */       rowWriter.write(40, value40, 38, 0);
/* 722 */     }
/* 723 */
/* 724 */
/* 725 */     boolean isNull41 = i.isNullAt(41);
/* 726 */     Decimal value41 = isNull41 ? null : (i.getDecimal(41, 38, 0));
/* 727 */     if (isNull41) {
/* 728 */       rowWriter.write(41, (Decimal) null, 38, 0);
/* 729 */     } else {
/* 730 */       rowWriter.write(41, value41, 38, 0);
/* 731 */     }
/* 732 */
/* 733 */
/* 734 */     boolean isNull42 = i.isNullAt(42);
/* 735 */     UTF8String value42 = isNull42 ? null : (i.getUTF8String(42));
/* 736 */     if (isNull42) {
/* 737 */       rowWriter.setNullAt(42);
/* 738 */     } else {
/* 739 */       rowWriter.write(42, value42);
/* 740 */     }
/* 741 */
/* 742 */
/* 743 */     boolean isNull43 = i.isNullAt(43);
/* 744 */     UTF8String value43 = isNull43 ? null : (i.getUTF8String(43));
/* 745 */     if (isNull43) {
/* 746 */       rowWriter.setNullAt(43);
/* 747 */     } else {
/* 748 */       rowWriter.write(43, value43);
/* 749 */     }
/* 750 */
/* 751 */   }
/* 752 */
/* 753 */
/* 754 */   private void apply_13(InternalRow i) {
/* 755 */
/* 756 */
/* 757 */     boolean isNull52 = i.isNullAt(52);
/* 758 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(52));
/* 759 */     if (isNull52) {
/* 760 */       rowWriter.setNullAt(52);
/* 761 */     } else {
/* 762 */       rowWriter.write(52, value52);
/* 763 */     }
/* 764 */
/* 765 */
/* 766 */     boolean isNull53 = i.isNullAt(53);
/* 767 */     Decimal value53 = isNull53 ? null : (i.getDecimal(53, 38, 0));
/* 768 */     if (isNull53) {
/* 769 */       rowWriter.write(53, (Decimal) null, 38, 0);
/* 770 */     } else {
/* 771 */       rowWriter.write(53, value53, 38, 0);
/* 772 */     }
/* 773 */
/* 774 */
/* 775 */     boolean isNull54 = i.isNullAt(54);
/* 776 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(54));
/* 777 */     if (isNull54) {
/* 778 */       rowWriter.setNullAt(54);
/* 779 */     } else {
/* 780 */       rowWriter.write(54, value54);
/* 781 */     }
/* 782 */
/* 783 */
/* 784 */     boolean isNull55 = i.isNullAt(55);
/* 785 */     Decimal value55 = isNull55 ? null : (i.getDecimal(55, 38, 0));
/* 786 */     if (isNull55) {
/* 787 */       rowWriter.write(55, (Decimal) null, 38, 0);
/* 788 */     } else {
/* 789 */       rowWriter.write(55, value55, 38, 0);
/* 790 */     }
/* 791 */
/* 792 */   }
/* 793 */
/* 794 */
/* 795 */   // Scala.Function1 need this
/* 796 */   public java.lang.Object apply(java.lang.Object row) {
/* 797 */     return apply((InternalRow) row);
/* 798 */   }
/* 799 */
/* 800 */   public UnsafeRow apply(InternalRow i) {
/* 801 */     holder.reset();
/* 802 */
/* 803 */     rowWriter.zeroOutNullBytes();
/* 804 */     apply_0(i);
/* 805 */     apply_1(i);
/* 806 */     apply_2(i);
/* 807 */     apply_3(i);
/* 808 */     apply_4(i);
/* 809 */     apply_5(i);
/* 810 */     apply_6(i);
/* 811 */     apply_7(i);
/* 812 */     apply_8(i);
/* 813 */     apply_9(i);
/* 814 */     apply_10(i);
/* 815 */     apply_11(i);
/* 816 */     apply_12(i);
/* 817 */     apply_13(i);
/* 818 */     apply_14(i);
/* 819 */     apply_15(i);
/* 820 */     apply_16(i);
/* 821 */     apply_17(i);
/* 822 */     apply_18(i);
/* 823 */     result.setTotalSize(holder.totalSize());
/* 824 */     return result;
/* 825 */   }
/* 826 */ }

17/11/03 14:41:44 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 4240 bytes result sent to driver
17/11/03 14:41:44 DEBUG TaskSchedulerImpl: parentName: , name: TaskSet_0.0, runningTasks: 0
17/11/03 14:41:44 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 117989 ms on localhost (executor driver) (1/1)
17/11/03 14:41:44 INFO DAGScheduler: ResultStage 0 (take at <console>:26) finished in 118.007 s
17/11/03 14:41:44 DEBUG DAGScheduler: After removal of stage 0, remaining stages = 0
17/11/03 14:41:44 INFO DAGScheduler: Job 0 finished: take at <console>:26, took 118.139701 s
17/11/03 14:41:44 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
17/11/03 14:41:44 DEBUG DFSClient: DFSClient writeChunk allocating new packet seqno=5, src=/spark2-history/local-1509719784165.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=40448
17/11/03 14:41:44 DEBUG DFSClient: DFSClient flush(): bytesCurBlock=49255 lastFlushOffset=40911 createNewBlock=false
17/11/03 14:41:44 DEBUG DFSClient: Queued packet 5
17/11/03 14:41:44 DEBUG DFSClient: Waiting for ack for: 5
17/11/03 14:41:44 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: 5 offsetInBlock: 40448 lastPacketInBlock: false lastByteOffsetInBlock: 49255
17/11/03 14:41:44 DEBUG DFSClient: DFSClient seqno: 5 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 3448290 flag: 0 flag: 0 flag: 0
17/11/03 14:41:44 DEBUG GenerateSafeProjection: code for createexternalrow(input[0, decimal(38,0), true].toJavaBigDecimal, input[1, string, true].toString, input[2, decimal(38,0), true].toJavaBigDecimal, input[3, decimal(38,0), true].toJavaBigDecimal, input[4, decimal(38,0), true].toJavaBigDecimal, input[5, decimal(38,0), true].toJavaBigDecimal, input[6, decimal(38,0), true].toJavaBigDecimal, input[7, string, true].toString, input[8, string, true].toString, input[9, string, true].toString, input[10, decimal(38,0), true].toJavaBigDecimal, input[11, decimal(38,0), true].toJavaBigDecimal, input[12, decimal(38,0), true].toJavaBigDecimal, input[13, string, true].toString, input[14, string, true].toString, input[15, string, true].toString, input[16, string, true].toString, input[17, decimal(38,0), true].toJavaBigDecimal, input[18, string, true].toString, input[19, decimal(38,0), true].toJavaBigDecimal, input[20, decimal(38,0), true].toJavaBigDecimal, input[21, decimal(38,0), true].toJavaBigDecimal, input[22, decimal(38,0), true].toJavaBigDecimal, input[23, decimal(38,0), true].toJavaBigDecimal, ... 128 more fields):
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */   private Object[] values;
/* 010 */   private boolean resultIsNull;
/* 011 */   private long argValue;
/* 012 */   private boolean resultIsNull1;
/* 013 */   private long argValue1;
/* 014 */   private org.apache.spark.sql.types.StructType schema;
/* 015 */
/* 016 */   public SpecificSafeProjection(Object[] references) {
/* 017 */     this.references = references;
/* 018 */     mutableRow = (InternalRow) references[references.length - 1];
/* 019 */
/* 020 */
/* 021 */
/* 022 */
/* 023 */
/* 024 */     this.schema = (org.apache.spark.sql.types.StructType) references[0];
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   public void initialize(int partitionIndex) {
/* 029 */
/* 030 */   }
/* 031 */
/* 032 */
/* 033 */   private void apply_16(InternalRow i) {
/* 034 */
/* 035 */     boolean isNull66 = i.isNullAt(32);
/* 036 */     UTF8String value66 = isNull66 ? null : (i.getUTF8String(32));
/* 037 */     boolean isNull65 = true;
/* 038 */     java.lang.String value65 = null;
/* 039 */     if (!isNull66) {
/* 040 */
/* 041 */       isNull65 = false;
/* 042 */       if (!isNull65) {
/* 043 */
/* 044 */         Object funcResult32 = null;
/* 045 */         funcResult32 = value66.toString();
/* 046 */         value65 = (java.lang.String) funcResult32;
/* 047 */
/* 048 */       }
/* 049 */     }
/* 050 */     if (isNull65) {
/* 051 */       values[32] = null;
/* 052 */     } else {
/* 053 */       values[32] = value65;
/* 054 */     }
/* 055 */
/* 056 */     boolean isNull68 = i.isNullAt(33);
/* 057 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(33));
/* 058 */     boolean isNull67 = true;
/* 059 */     java.lang.String value67 = null;
/* 060 */     if (!isNull68) {
/* 061 */
/* 062 */       isNull67 = false;
/* 063 */       if (!isNull67) {
/* 064 */
/* 065 */         Object funcResult33 = null;
/* 066 */         funcResult33 = value68.toString();
/* 067 */         value67 = (java.lang.String) funcResult33;
/* 068 */
/* 069 */       }
/* 070 */     }
/* 071 */     if (isNull67) {
/* 072 */       values[33] = null;
/* 073 */     } else {
/* 074 */       values[33] = value67;
/* 075 */     }
/* 076 */
/* 077 */   }
/* 078 */
/* 079 */
/* 080 */   private void apply_22(InternalRow i) {
/* 081 */
/* 082 */     boolean isNull90 = i.isNullAt(44);
/* 083 */     UTF8String value90 = isNull90 ? null : (i.getUTF8String(44));
/* 084 */     boolean isNull89 = true;
/* 085 */     java.lang.String value89 = null;
/* 086 */     if (!isNull90) {
/* 087 */
/* 088 */       isNull89 = false;
/* 089 */       if (!isNull89) {
/* 090 */
/* 091 */         Object funcResult44 = null;
/* 092 */         funcResult44 = value90.toString();
/* 093 */         value89 = (java.lang.String) funcResult44;
/* 094 */
/* 095 */       }
/* 096 */     }
/* 097 */     if (isNull89) {
/* 098 */       values[44] = null;
/* 099 */     } else {
/* 100 */       values[44] = value89;
/* 101 */     }
/* 102 */
/* 103 */     boolean isNull92 = i.isNullAt(45);
/* 104 */     UTF8String value92 = isNull92 ? null : (i.getUTF8String(45));
/* 105 */     boolean isNull91 = true;
/* 106 */     java.lang.String value91 = null;
/* 107 */     if (!isNull92) {
/* 108 */
/* 109 */       isNull91 = false;
/* 110 */       if (!isNull91) {
/* 111 */
/* 112 */         Object funcResult45 = null;
/* 113 */         funcResult45 = value92.toString();
/* 114 */         value91 = (java.lang.String) funcResult45;
/* 115 */
/* 116 */       }
/* 117 */     }
/* 118 */     if (isNull91) {
/* 119 */       values[45] = null;
/* 120 */     } else {
/* 121 */       values[45] = value91;
/* 122 */     }
/* 123 */
/* 124 */   }
/* 125 */
/* 126 */
/* 127 */   private void apply_4(InternalRow i) {
/* 128 */
/* 129 */     boolean isNull18 = i.isNullAt(8);
/* 130 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(8));
/* 131 */     boolean isNull17 = true;
/* 132 */     java.lang.String value17 = null;
/* 133 */     if (!isNull18) {
/* 134 */
/* 135 */       isNull17 = false;
/* 136 */       if (!isNull17) {
/* 137 */
/* 138 */         Object funcResult8 = null;
/* 139 */         funcResult8 = value18.toString();
/* 140 */         value17 = (java.lang.String) funcResult8;
/* 141 */
/* 142 */       }
/* 143 */     }
/* 144 */     if (isNull17) {
/* 145 */       values[8] = null;
/* 146 */     } else {
/* 147 */       values[8] = value17;
/* 148 */     }
/* 149 */
/* 150 */     boolean isNull20 = i.isNullAt(9);
/* 151 */     UTF8String value20 = isNull20 ? null : (i.getUTF8String(9));
/* 152 */     boolean isNull19 = true;
/* 153 */     java.lang.String value19 = null;
/* 154 */     if (!isNull20) {
/* 155 */
/* 156 */       isNull19 = false;
/* 157 */       if (!isNull19) {
/* 158 */
/* 159 */         Object funcResult9 = null;
/* 160 */         funcResult9 = value20.toString();
/* 161 */         value19 = (java.lang.String) funcResult9;
/* 162 */
/* 163 */       }
/* 164 */     }
/* 165 */     if (isNull19) {
/* 166 */       values[9] = null;
/* 167 */     } else {
/* 168 */       values[9] = value19;
/* 169 */     }
/* 170 */
/* 171 */   }
/* 172 */
/* 173 */
/* 174 */   private void apply_7(InternalRow i) {
/* 175 */
/* 176 */     boolean isNull30 = i.isNullAt(14);
/* 177 */     UTF8String value30 = isNull30 ? null : (i.getUTF8String(14));
/* 178 */     boolean isNull29 = true;
/* 179 */     java.lang.String value29 = null;
/* 180 */     if (!isNull30) {
/* 181 */
/* 182 */       isNull29 = false;
/* 183 */       if (!isNull29) {
/* 184 */
/* 185 */         Object funcResult14 = null;
/* 186 */         funcResult14 = value30.toString();
/* 187 */         value29 = (java.lang.String) funcResult14;
/* 188 */
/* 189 */       }
/* 190 */     }
/* 191 */     if (isNull29) {
/* 192 */       values[14] = null;
/* 193 */     } else {
/* 194 */       values[14] = value29;
/* 195 */     }
/* 196 */
/* 197 */     boolean isNull32 = i.isNullAt(15);
/* 198 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(15));
/* 199 */     boolean isNull31 = true;
/* 200 */     java.lang.String value31 = null;
/* 201 */     if (!isNull32) {
/* 202 */
/* 203 */       isNull31 = false;
/* 204 */       if (!isNull31) {
/* 205 */
/* 206 */         Object funcResult15 = null;
/* 207 */         funcResult15 = value32.toString();
/* 208 */         value31 = (java.lang.String) funcResult15;
/* 209 */
/* 210 */       }
/* 211 */     }
/* 212 */     if (isNull31) {
/* 213 */       values[15] = null;
/* 214 */     } else {
/* 215 */       values[15] = value31;
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_36(InternalRow i) {
/* 222 */
/* 223 */     resultIsNull = false;
/* 224 */     if (!resultIsNull) {
/* 225 */
/* 226 */       boolean isNull146 = i.isNullAt(72);
/* 227 */       long value146 = isNull146 ? -1L : (i.getLong(72));
/* 228 */       resultIsNull = isNull146;
/* 229 */       argValue = value146;
/* 230 */     }
/* 231 */
/* 232 */     boolean isNull145 = resultIsNull;
/* 233 */     final java.sql.Timestamp value145 = resultIsNull ? null : org.apache.spark.sql.catalyst.util.DateTimeUtils.toJavaTimestamp(argValue);
/* 234 */     isNull145 = value145 == null;
/* 235 */     if (isNull145) {
/* 236 */       values[72] = null;
/* 237 */     } else {
/* 238 */       values[72] = value145;
/* 239 */     }
/* 240 */
/* 241 */     resultIsNull1 = false;
/* 242 */     if (!resultIsNull1) {
/* 243 */
/* 244 */       boolean isNull148 = i.isNullAt(73);
/* 245 */       long value148 = isNull148 ? -1L : (i.getLong(73));
/* 246 */       resultIsNull1 = isNull148;
/* 247 */       argValue1 = value148;
/* 248 */     }
/* 249 */
/* 250 */     boolean isNull147 = resultIsNull1;
/* 251 */     final java.sql.Timestamp value147 = resultIsNull1 ? null : org.apache.spark.sql.catalyst.util.DateTimeUtils.toJavaTimestamp(argValue1);
/* 252 */     isNull147 = value147 == null;
/* 253 */     if (isNull147) {
/* 254 */       values[73] = null;
/* 255 */     } else {
/* 256 */       values[73] = value147;
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_1(InternalRow i) {
/* 263 */
/* 264 */     boolean isNull6 = i.isNullAt(2);
/* 265 */     Decimal value6 = isNull6 ? null : (i.getDecimal(2, 38, 0));
/* 266 */     boolean isNull5 = true;
/* 267 */     java.math.BigDecimal value5 = null;
/* 268 */     if (!isNull6) {
/* 269 */
/* 270 */       isNull5 = false;
/* 271 */       if (!isNull5) {
/* 272 */
/* 273 */         Object funcResult2 = null;
/* 274 */         funcResult2 = value6.toJavaBigDecimal();
/* 275 */         value5 = (java.math.BigDecimal) funcResult2;
/* 276 */
/* 277 */       }
/* 278 */     }
/* 279 */     if (isNull5) {
/* 280 */       values[2] = null;
/* 281 */     } else {
/* 282 */       values[2] = value5;
/* 283 */     }
/* 284 */
/* 285 */     boolean isNull8 = i.isNullAt(3);
/* 286 */     Decimal value8 = isNull8 ? null : (i.getDecimal(3, 38, 0));
/* 287 */     boolean isNull7 = true;
/* 288 */     java.math.BigDecimal value7 = null;
/* 289 */     if (!isNull8) {
/* 290 */
/* 291 */       isNull7 = false;
/* 292 */       if (!isNull7) {
/* 293 */
/* 294 */         Object funcResult3 = null;
/* 295 */         funcResult3 = value8.toJavaBigDecimal();
/* 296 */         value7 = (java.math.BigDecimal) funcResult3;
/* 297 */
/* 298 */       }
/* 299 */     }
/* 300 */     if (isNull7) {
/* 301 */       values[3] = null;
/* 302 */     } else {
/* 303 */       values[3] = value7;
/* 304 */     }
/* 305 */
/* 306 */   }
/* 307 */
/* 308 */
/* 309 */   private void apply_21(InternalRow i) {
/* 310 */
/* 311 */     boolean isNull86 = i.isNullAt(42);
/* 312 */     UTF8String value86 = isNull86 ? null : (i.getUTF8String(42));
/* 313 */     boolean isNull85 = true;
/* 314 */     java.lang.String value85 = null;
/* 315 */     if (!isNull86) {
/* 316 */
/* 317 */       isNull85 = false;
/* 318 */       if (!isNull85) {
/* 319 */
/* 320 */         Object funcResult42 = null;
/* 321 */         funcResult42 = value86.toString();
/* 322 */         value85 = (java.lang.String) funcResult42;
/* 323 */
/* 324 */       }
/* 325 */     }
/* 326 */     if (isNull85) {
/* 327 */       values[42] = null;
/* 328 */     } else {
/* 329 */       values[42] = value85;
/* 330 */     }
/* 331 */
/* 332 */     boolean isNull88 = i.isNullAt(43);
/* 333 */     UTF8String value88 = isNull88 ? null : (i.getUTF8String(43));
/* 334 */     boolean isNull87 = true;
/* 335 */     java.lang.String value87 = null;
/* 336 */     if (!isNull88) {
/* 337 */
/* 338 */       isNull87 = false;
/* 339 */       if (!isNull87) {
/* 340 */
/* 341 */         Object funcResult43 = null;
/* 342 */         funcResult43 = value88.toString();
/* 343 */         value87 = (java.lang.String) funcResult43;
/* 344 */
/* 345 */       }
/* 346 */     }
/* 347 */     if (isNull87) {
/* 348 */       values[43] = null;
/* 349 */     } else {
/* 350 */       values[43] = value87;
/* 351 */     }
/* 352 */
/* 353 */   }
/* 354 */
/* 355 */
/* 356 */   private void apply_30(InternalRow i) {
/* 357 */
/* 358 */     boolean isNull122 = i.isNullAt(60);
/* 359 */     UTF8String value122 = isNull122 ? null : (i.getUTF8String(60));
/* 360 */     boolean isNull121 = true;
/* 361 */     java.lang.String value121 = null;
/* 362 */     if (!isNull122) {
/* 363 */
/* 364 */       isNull121 = false;
/* 365 */       if (!isNull121) {
/* 366 */
/* 367 */         Object funcResult60 = null;
/* 368 */         funcResult60 = value122.toString();
/* 369 */         value121 = (java.lang.String) funcResult60;
/* 370 */
/* 371 */       }
/* 372 */     }
/* 373 */     if (isNull121) {
/* 374 */       values[60] = null;
/* 375 */     } else {
/* 376 */       values[60] = value121;
/* 377 */     }
/* 378 */
/* 379 */     boolean isNull124 = i.isNullAt(61);
/* 380 */     UTF8String value124 = isNull124 ? null : (i.getUTF8String(61));
/* 381 */     boolean isNull123 = true;
/* 382 */     java.lang.String value123 = null;
/* 383 */     if (!isNull124) {
/* 384 */
/* 385 */       isNull123 = false;
/* 386 */       if (!isNull123) {
/* 387 */
/* 388 */         Object funcResult61 = null;
/* 389 */         funcResult61 = value124.toString();
/* 390 */         value123 = (java.lang.String) funcResult61;
/* 391 */
/* 392 */       }
/* 393 */     }
/* 394 */     if (isNull123) {
/* 395 */       values[61] = null;
/* 396 */     } else {
/* 397 */       values[61] = value123;
/* 398 */     }
/* 399 */
/* 400 */   }
/* 401 */
/* 402 */
/* 403 */   private void apply_18(InternalRow i) {
/* 404 */
/* 405 */     boolean isNull74 = i.isNullAt(36);
/* 406 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(36));
/* 407 */     boolean isNull73 = true;
/* 408 */     java.lang.String value73 = null;
/* 409 */     if (!isNull74) {
/* 410 */
/* 411 */       isNull73 = false;
/* 412 */       if (!isNull73) {
/* 413 */
/* 414 */         Object funcResult36 = null;
/* 415 */         funcResult36 = value74.toString();
/* 416 */         value73 = (java.lang.String) funcResult36;
/* 417 */
/* 418 */       }
/* 419 */     }
/* 420 */     if (isNull73) {
/* 421 */       values[36] = null;
/* 422 */     } else {
/* 423 */       values[36] = value73;
/* 424 */     }
/* 425 */
/* 426 */     boolean isNull76 = i.isNullAt(37);
/* 427 */     Decimal value76 = isNull76 ? null : (i.getDecimal(37, 38, 0));
/* 428 */     boolean isNull75 = true;
/* 429 */     java.math.BigDecimal value75 = null;
/* 430 */     if (!isNull76) {
/* 431 */
/* 432 */       isNull75 = false;
/* 433 */       if (!isNull75) {
/* 434 */
/* 435 */         Object funcResult37 = null;
/* 436 */         funcResult37 = value76.toJavaBigDecimal();
/* 437 */         value75 = (java.math.BigDecimal) funcResult37;
/* 438 */
/* 439 */       }
/* 440 */     }
/* 441 */     if (isNull75) {
/* 442 */       values[37] = null;
/* 443 */     } else {
/* 444 */       values[37] = value75;
/* 445 */     }
/* 446 */
/* 447 */   }
/* 448 */
/* 449 */
/* 450 */   private void apply_24(InternalRow i) {
/* 451 */
/* 452 */     boolean isNull98 = i.isNullAt(48);
/* 453 */     Decimal value98 = isNull98 ? null : (i.getDecimal(48, 38, 0));
/* 454 */     boolean isNull97 = true;
/* 455 */     java.math.BigDecimal value97 = null;
/* 456 */     if (!isNull98) {
/* 457 */
/* 458 */       isNull97 = false;
/* 459 */       if (!isNull97) {
/* 460 */
/* 461 */         Object funcResult48 = null;
/* 462 */         funcResult48 = value98.toJavaBigDecimal();
/* 463 */         value97 = (java.math.BigDecimal) funcResult48;
/* 464 */
/* 465 */       }
/* 466 */     }
/* 467 */     if (isNull97) {
/* 468 */       values[48] = null;
/* 469 */     } else {
/* 470 */       values[48] = value97;
/* 471 */     }
/* 472 */
/* 473 */     boolean isNull100 = i.isNullAt(49);
/* 474 */     UTF8String value100 = isNull100 ? null : (i.getUTF8String(49));
/* 475 */     boolean isNull99 = true;
/* 476 */     java.lang.String value99 = null;
/* 477 */     if (!isNull100) {
/* 478 */
/* 479 */       isNull99 = false;
/* 480 */       if (!isNull99) {
/* 481 */
/* 482 */         Object funcResult49 = null;
/* 483 */         funcResult49 = value100.toString();
/* 484 */         value99 = (java.lang.String) funcResult49;
/* 485 */
/* 486 */       }
/* 487 */     }
/* 488 */     if (isNull99) {
/* 489 */       values[49] = null;
/* 490 */     } else {
/* 491 */       values[49] = value99;
/* 492 */     }
/* 493 */
/* 494 */   }
/* 495 */
/* 496 */
/* 497 */   private void apply_27(InternalRow i) {
/* 498 */
/* 499 */     boolean isNull110 = i.isNullAt(54);
/* 500 */     UTF8String value110 = isNull110 ? null : (i.getUTF8String(54));
/* 501 */     boolean isNull109 = true;
/* 502 */     java.lang.String value109 = null;
/* 503 */     if (!isNull110) {
/* 504 */
/* 505 */       isNull109 = false;
/* 506 */       if (!isNull109) {
/* 507 */
/* 508 */         Object funcResult54 = null;
/* 509 */         funcResult54 = value110.toString();
/* 510 */         value109 = (java.lang.String) funcResult54;
/* 511 */
/* 512 */       }
/* 513 */     }
/* 514 */     if (isNull109) {
/* 515 */       values[54] = null;
/* 516 */     } else {
/* 517 */       values[54] = value109;
/* 518 */     }
/* 519 */
/* 520 */     boolean isNull112 = i.isNullAt(55);
/* 521 */     Decimal value112 = isNull112 ? null : (i.getDecimal(55, 38, 0));
/* 522 */     boolean isNull111 = true;
/* 523 */     java.math.BigDecimal value111 = null;
/* 524 */     if (!isNull112) {
/* 525 */
/* 526 */       isNull111 = false;
/* 527 */       if (!isNull111) {
/* 528 */
/* 529 */         Object funcResult55 = null;
/* 530 */         funcResult55 = value112.toJavaBigDecimal();
/* 531 */         value111 = (java.math.BigDecimal) funcResult55;
/* 532 */
/* 533 */       }
/* 534 */     }
/* 535 */     if (isNull111) {
/* 536 */       values[55] = null;
/* 537 */     } else {
/* 538 */       values[55] = value111;
/* 539 */     }
/* 540 */
/* 541 */   }
/* 542 */
/* 543 */
/* 544 */   private void apply_33(InternalRow i) {
/* 545 */
/* 546 */     boolean isNull134 = i.isNullAt(66);
/* 547 */     Decimal value134 = isNull134 ? null : (i.getDecimal(66, 38, 0));
/* 548 */     boolean isNull133 = true;
/* 549 */     java.math.BigDecimal value133 = null;
/* 550 */     if (!isNull134) {
/* 551 */
/* 552 */       isNull133 = false;
/* 553 */       if (!isNull133) {
/* 554 */
/* 555 */         Object funcResult66 = null;
/* 556 */         funcResult66 = value134.toJavaBigDecimal();
/* 557 */         value133 = (java.math.BigDecimal) funcResult66;
/* 558 */
/* 559 */       }
/* 560 */     }
/* 561 */     if (isNull133) {
/* 562 */       values[66] = null;
/* 563 */     } else {
/* 564 */       values[66] = value133;
/* 565 */     }
/* 566 */
/* 567 */     boolean isNull136 = i.isNullAt(67);
/* 568 */     UTF8String value136 = isNull136 ? null : (i.getUTF8String(67));
/* 569 */     boolean isNull135 = true;
/* 570 */     java.lang.String value135 = null;
/* 571 */     if (!isNull136) {
/* 572 */
/* 573 */       isNull135 = false;
/* 574 */       if (!isNull135) {
/* 575 */
/* 576 */         Object funcResult67 = null;
/* 577 */         funcResult67 = value136.toString();
/* 578 */         value135 = (java.lang.String) funcResult67;
/* 579 */
/* 580 */       }
/* 581 */     }
/* 582 */     if (isNull135) {
/* 583 */       values[67] = null;
/* 584 */     } else {
/* 585 */       values[67] = value135;
/* 586 */     }
/* 587 */
/* 588 */   }
/* 589 */
/* 590 */
/* 591 */   private void apply_12(InternalRow i) {
/* 592 */
/* 593 */     boolean isNull50 = i.isNullAt(24);
/* 594 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(24));
/* 595 */     boolean isNull49 = true;
/* 596 */     java.lang.String value49 = null;
/* 597 */     if (!isNull50) {
/* 598 */
/* 599 */       isNull49 = false;
/* 600 */       if (!isNull49) {
/* 601 */
/* 602 */         Object funcResult24 = null;
/* 603 */         funcResult24 = value50.toString();
/* 604 */         value49 = (java.lang.String) funcResult24;
/* 605 */
/* 606 */       }
/* 607 */     }
/* 608 */     if (isNull49) {
/* 609 */       values[24] = null;
/* 610 */     } else {
/* 611 */       values[24] = value49;
/* 612 */     }
/* 613 */
/* 614 */     boolean isNull52 = i.isNullAt(25);
/* 615 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(25));
/* 616 */     boolean isNull51 = true;
/* 617 */     java.lang.String value51 = null;
/* 618 */     if (!isNull52) {
/* 619 */
/* 620 */       isNull51 = false;
/* 621 */       if (!isNull51) {
/* 622 */
/* 623 */         Object funcResult25 = null;
/* 624 */         funcResult25 = value52.toString();
/* 625 */         value51 = (java.lang.String) funcResult25;
/* 626 */
/* 627 */       }
/* 628 */     }
/* 629 */     if (isNull51) {
/* 630 */       values[25] = null;
/* 631 */     } else {
/* 632 */       values[25] = value51;
/* 633 */     }
/* 634 */
/* 635 */   }
/* 636 */
/* 637 */
/* 638 */   private void apply_9(InternalRow i) {
/* 639 */
/* 640 */     boolean isNull38 = i.isNullAt(18);
/* 641 */     UTF8String value38 = isNull38 ? null : (i.getUTF8String(18));
/* 642 */     boolean isNull37 = true;
/* 643 */     java.lang.String value37 = null;
/* 644 */     if (!isNull38) {
/* 645 */
/* 646 */       isNull37 = false;
/* 647 */       if (!isNull37) {
/* 648 */
/* 649 */         Object funcResult18 = null;
/* 650 */         funcResult18 = value38.toString();
/* 651 */         value37 = (java.lang.String) funcResult18;
/* 652 */
/* 653 */       }
/* 654 */     }
/* 655 */     if (isNull37) {
/* 656 */       values[18] = null;
/* 657 */     } else {
/* 658 */       values[18] = value37;
/* 659 */     }
/* 660 */
/* 661 */     boolean isNull40 = i.isNullAt(19);
/* 662 */     Decimal value40 = isNull40 ? null : (i.getDecimal(19, 38, 0));
/* 663 */     boolean isNull39 = true;
/* 664 */     java.math.BigDecimal value39 = null;
/* 665 */     if (!isNull40) {
/* 666 */
/* 667 */       isNull39 = false;
/* 668 */       if (!isNull39) {
/* 669 */
/* 670 */         Object funcResult19 = null;
/* 671 */         funcResult19 = value40.toJavaBigDecimal();
/* 672 */         value39 = (java.math.BigDecimal) funcResult19;
/* 673 */
/* 674 */       }
/* 675 */     }
/* 676 */     if (isNull39) {
/* 677 */       values[19] = null;
/* 678 */     } else {
/* 679 */       values[19] = value39;
/* 680 */     }
/* 681 */
/* 682 */   }
/* 683 */
/* 684 */
/* 685 */   private void apply_15(InternalRow i) {
/* 686 */
/* 687 */     boolean isNull62 = i.isNullAt(30);
/* 688 */     Decimal value62 = isNull62 ? null : (i.getDecimal(30, 38, 0));
/* 689 */     boolean isNull61 = true;
/* 690 */     java.math.BigDecimal value61 = null;
/* 691 */     if (!isNull62) {
/* 692 */
/* 693 */       isNull61 = false;
/* 694 */       if (!isNull61) {
/* 695 */
/* 696 */         Object funcResult30 = null;
/* 697 */         funcResult30 = value62.toJavaBigDecimal();
/* 698 */         value61 = (java.math.BigDecimal) funcResult30;
/* 699 */
/* 700 */       }
/* 701 */     }
/* 702 */     if (isNull61) {
/* 703 */       values[30] = null;
/* 704 */     } else {
/* 705 */       values[30] = value61;
/* 706 */     }
/* 707 */
/* 708 */     boolean isNull64 = i.isNullAt(31);
/* 709 */     UTF8String value64 = isNull64 ? null : (i.getUTF8String(31));
/* 710 */     boolean isNull63 = true;
/* 711 */     java.lang.String value63 = null;
/* 712 */     if (!isNull64) {
/* 713 */
/* 714 */       isNull63 = false;
/* 715 */       if (!isNull63) {
/* 716 */
/* 717 */         Object funcResult31 = null;
/* 718 */         funcResult31 = value64.toString();
/* 719 */         value63 = (java.lang.String) funcResult31;
/* 720 */
/* 721 */       }
/* 722 */     }
/* 723 */     if (isNull63) {
/* 724 */       values[31] = null;
/* 725 */     } else {
/* 726 */       values[31] = value63;
/* 727 */     }
/* 728 */
/* 729 */   }
/* 730 */
/* 731 */
/* 732 */   private void apply_3(InternalRow i) {
/* 733 */
/* 734 */     boolean isNull14 = i.isNullAt(6);
/* 735 */     Decimal value14 = isNull14 ? null : (i.getDecimal(6, 38, 0));
/* 736 */     boolean isNull13 = true;
/* 737 */     java.math.BigDecimal value13 = null;
/* 738 */     if (!isNull14) {
/* 739 */
/* 740 */       isNull13 = false;
/* 741 */       if (!isNull13) {
/* 742 */
/* 743 */         Object funcResult6 = null;
/* 744 */         funcResult6 = value14.toJavaBigDecimal();
/* 745 */         value13 = (java.math.BigDecimal) funcResult6;
/* 746 */
/* 747 */       }
/* 748 */     }
/* 749 */     if (isNull13) {
/* 750 */       values[6] = null;
/* 751 */     } else {
/* 752 */       values[6] = value13;
/* 753 */     }
/* 754 */
/* 755 */     boolean isNull16 = i.isNullAt(7);
/* 756 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(7));
/* 757 */     boolean isNull15 = true;
/* 758 */     java.lang.String value15 = null;
/* 759 */     if (!isNull16) {
/* 760 */
/* 761 */       isNull15 = false;
/* 762 */       if (!isNull15) {
/* 763 */
/* 764 */         Object funcResult7 = null;
/* 765 */         funcResult7 = value16.toString();
/* 766 */         value15 = (java.lang.String) funcResult7;
/* 767 */
/* 768 */       }
/* 769 */     }
/* 770 */     if (isNull15) {
/* 771 */       values[7] = null;
/* 772 */     } else {
/* 773 */       values[7] = value15;
/* 774 */     }
/* 775 */
/* 776 */   }
/* 777 */
/* 778 */
/* 779 */   private void apply_6(InternalRow i) {
/* 780 */
/* 781 */     boolean isNull26 = i.isNullAt(12);
/* 782 */     Decimal value26 = isNull26 ? null : (i.getDecimal(12, 38, 0));
/* 783 */     boolean isNull25 = true;
/* 784 */     java.math.BigDecimal value25 = null;
/* 785 */     if (!isNull26) {
/* 786 */
/* 787 */       isNull25 = false;
/* 788 */       if (!isNull25) {
/* 789 */
/* 790 */         Object funcResult12 = null;
/* 791 */         funcResult12 = value26.toJavaBigDecimal();
/* 792 */         value25 = (java.math.BigDecimal) funcResult12;
/* 793 */
/* 794 */       }
/* 795 */     }
/* 796 */     if (isNull25) {
/* 797 */       values[12] = null;
/* 798 */     } else {
/* 799 */       values[12] = value25;
/* 800 */     }
/* 801 */
/* 802 */     boolean isNull28 = i.isNullAt(13);
/* 803 */     UTF8String value28 = isNull28 ? null : (i.getUTF8String(13));
/* 804 */     boolean isNull27 = true;
/* 805 */     java.lang.String value27 = null;
/* 806 */     if (!isNull28) {
/* 807 */
/* 808 */       isNull27 = false;
/* 809 */       if (!isNull27) {
/* 810 */
/* 811 */         Object funcResult13 = null;
/* 812 */         funcResult13 = value28.toString();
/* 813 */         value27 = (java.lang.String) funcResult13;
/* 814 */
/* 815 */       }
/* 816 */     }
/* 817 */     if (isNull27) {
/* 818 */       values[13] = null;
/* 819 */     } else {
/* 820 */       values[13] = value27;
/* 821 */     }
/* 822 */
/* 823 */   }
/* 824 */
/* 825 */
/* 826 */   private void apply_32(InternalRow i) {
/* 827 */
/* 828 */     boolean isNull130 = i.isNullAt(64);
/* 829 */     Decimal value130 = isNull130 ? null : (i.getDecimal(64, 38, 0));
/* 830 */     boolean isNull129 = true;
/* 831 */     java.math.BigDecimal value129 = null;
/* 832 */     if (!isNull130) {
/* 833 */
/* 834 */       isNull129 = false;
/* 835 */       if (!isNull129) {
/* 836 */
/* 837 */         Object funcResult64 = null;
/* 838 */         funcResult64 = value130.toJavaBigDecimal();
/* 839 */         value129 = (java.math.BigDecimal) funcResult64;
/* 840 */
/* 841 */       }
/* 842 */     }
/* 843 */     if (isNull129) {
/* 844 */       values[64] = null;
/* 845 */     } else {
/* 846 */       values[64] = value129;
/* 847 */     }
/* 848 */
/* 849 */     boolean isNull132 = i.isNullAt(65);
/* 850 */     Decimal value132 = isNull132 ? null : (i.getDecimal(65, 38, 0));
/* 851 */     boolean isNull131 = true;
/* 852 */     java.math.BigDecimal value131 = null;
/* 853 */     if (!isNull132) {
/* 854 */
/* 855 */       isNull131 = false;
/* 856 */       if (!isNull131) {
/* 857 */
/* 858 */         Object funcResult65 = null;
/* 859 */         funcResult65 = value132.toJavaBigDecimal();
/* 860 */         value131 = (java.math.BigDecimal) funcResult65;
/* 861 */
/* 862 */       }
/* 863 */     }
/* 864 */     if (isNull131) {
/* 865 */       values[65] = null;
/* 866 */     } else {
/* 867 */       values[65] = value131;
/* 868 */     }
/* 869 */
/* 870 */   }
/* 871 */
/* 872 */
/* 873 */   private void apply_26(InternalRow i) {
/* 874 */
/* 875 */     boolean isNull106 = i.isNullAt(52);
/* 876 */     UTF8String value106 = isNull106 ? null : (i.getUTF8String(52));
/* 877 */     boolean isNull105 = true;
/* 878 */     java.lang.String value105 = null;
/* 879 */     if (!isNull106) {
/* 880 */
/* 881 */       isNull105 = false;
/* 882 */       if (!isNull105) {
/* 883 */
/* 884 */         Object funcResult52 = null;
/* 885 */         funcResult52 = value106.toString();
/* 886 */         value105 = (java.lang.String) funcResult52;
/* 887 */
/* 888 */       }
/* 889 */     }
/* 890 */     if (isNull105) {
/* 891 */       values[52] = null;
/* 892 */     } else {
/* 893 */       values[52] = value105;
/* 894 */     }
/* 895 */
/* 896 */     boolean isNull108 = i.isNullAt(53);
/* 897 */     Decimal value108 = isNull108 ? null : (i.getDecimal(53, 38, 0));
/* 898 */     boolean isNull107 = true;
/* 899 */     java.math.BigDecimal value107 = null;
/* 900 */     if (!isNull108) {
/* 901 */
/* 902 */       isNull107 = false;
/* 903 */       if (!isNull107) {
/* 904 */
/* 905 */         Object funcResult53 = null;
/* 906 */         funcResult53 = value108.toJavaBigDecimal();
/* 907 */         value107 = (java.math.BigDecimal) funcResult53;
/* 908 */
/* 909 */       }
/* 910 */     }
/* 911 */     if (isNull107) {
/* 912 */       values[53] = null;
/* 913 */     } else {
/* 914 */       values[53] = value107;
/* 915 */     }
/* 916 */
/* 917 */   }
/* 918 */
/* 919 */
/* 920 */   private void apply_35(InternalRow i) {
/* 921 */
/* 922 */     boolean isNull142 = i.isNullAt(70);
/* 923 */     UTF8String value142 = isNull142 ? null : (i.getUTF8String(70));
/* 924 */     boolean isNull141 = true;
/* 925 */     java.lang.String value141 = null;
/* 926 */     if (!isNull142) {
/* 927 */
/* 928 */       isNull141 = false;
/* 929 */       if (!isNull141) {
/* 930 */
/* 931 */         Object funcResult70 = null;
/* 932 */         funcResult70 = value142.toString();
/* 933 */         value141 = (java.lang.String) funcResult70;
/* 934 */
/* 935 */       }
/* 936 */     }
/* 937 */     if (isNull141) {
/* 938 */       values[70] = null;
/* 939 */     } else {
/* 940 */       values[70] = value141;
/* 941 */     }
/* 942 */
/* 943 */     boolean isNull144 = i.isNullAt(71);
/* 944 */     UTF8String value144 = isNull144 ? null : (i.getUTF8String(71));
/* 945 */     boolean isNull143 = true;
/* 946 */     java.lang.String value143 = null;
/* 947 */     if (!isNull144) {
/* 948 */
/* 949 */       isNull143 = false;
/* 950 */       if (!isNull143) {
/* 951 */
/* 952 */         Object funcResult71 = null;
/* 953 */         funcResult71 = value144.toString();
/* 954 */         value143 = (java.lang.String) funcResult71;
/* 955 */
/* 956 */       }
/* 957 */     }
/* 958 */     if (isNull143) {
/* 959 */       values[71] = null;
/* 960 */     } else {
/* 961 */       values[71] = value143;
/* 962 */     }
/* 963 */
/* 964 */   }
/* 965 */
/* 966 */
/* 967 */   private void apply_29(InternalRow i) {
/* 968 */
/* 969 */     boolean isNull118 = i.isNullAt(58);
/* 970 */     Decimal value118 = isNull118 ? null : (i.getDecimal(58, 38, 0));
/* 971 */     boolean isNull117 = true;
/* 972 */     java.math.BigDecimal value117 = null;
/* 973 */     if (!isNull118) {
/* 974 */
/* 975 */       isNull117 = false;
/* 976 */       if (!isNull117) {
/* 977 */
/* 978 */         Object funcResult58 = null;
/* 979 */         funcResult58 = value118.toJavaBigDecimal();
/* 980 */         value117 = (java.math.BigDecimal) funcResult58;
/* 981 */
/* 982 */       }
/* 983 */     }
/* 984 */     if (isNull117) {
/* 985 */       values[58] = null;
/* 986 */     } else {
/* 987 */       values[58] = value117;
/* 988 */     }
/* 989 */
/* 990 */     boolean isNull120 = i.isNullAt(59);
/* 991 */     Decimal value120 = isNull120 ? null : (i.getDecimal(59, 38, 0));
/* 992 */     boolean isNull119 = true;
/* 993 */     java.math.BigDecimal value119 = null;
/* 994 */     if (!isNull120) {
/* 995 */
/* 996 */       isNull119 = false;
/* 997 */       if (!isNull119) {
/* 998 */
/* 999 */         Object funcResult59 = null;
/* 1000 */         funcResult59 = value120.toJavaBigDecimal();
/* 1001 */         value119 = (java.math.BigDecimal) funcResult59;
/* 1002 */
/* 1003 */       }
/* 1004 */     }
/* 1005 */     if (isNull119) {
/* 1006 */       values[59] = null;
/* 1007 */     } else {
/* 1008 */       values[59] = value119;
/* 1009 */     }
/* 1010 */
/* 1011 */   }
/* 1012 */
/* 1013 */
/* 1014 */   private void apply_14(InternalRow i) {
/* 1015 */
/* 1016 */     boolean isNull58 = i.isNullAt(28);
/* 1017 */     Decimal value58 = isNull58 ? null : (i.getDecimal(28, 38, 0));
/* 1018 */     boolean isNull57 = true;
/* 1019 */     java.math.BigDecimal value57 = null;
/* 1020 */     if (!isNull58) {
/* 1021 */
/* 1022 */       isNull57 = false;
/* 1023 */       if (!isNull57) {
/* 1024 */
/* 1025 */         Object funcResult28 = null;
/* 1026 */         funcResult28 = value58.toJavaBigDecimal();
/* 1027 */         value57 = (java.math.BigDecimal) funcResult28;
/* 1028 */
/* 1029 */       }
/* 1030 */     }
/* 1031 */     if (isNull57) {
/* 1032 */       values[28] = null;
/* 1033 */     } else {
/* 1034 */       values[28] = value57;
/* 1035 */     }
/* 1036 */
/* 1037 */     boolean isNull60 = i.isNullAt(29);
/* 1038 */     Decimal value60 = isNull60 ? null : (i.getDecimal(29, 38, 0));
/* 1039 */     boolean isNull59 = true;
/* 1040 */     java.math.BigDecimal value59 = null;
/* 1041 */     if (!isNull60) {
/* 1042 */
/* 1043 */       isNull59 = false;
/* 1044 */       if (!isNull59) {
/* 1045 */
/* 1046 */         Object funcResult29 = null;
/* 1047 */         funcResult29 = value60.toJavaBigDecimal();
/* 1048 */         value59 = (java.math.BigDecimal) funcResult29;
/* 1049 */
/* 1050 */       }
/* 1051 */     }
/* 1052 */     if (isNull59) {
/* 1053 */       values[29] = null;
/* 1054 */     } else {
/* 1055 */       values[29] = value59;
/* 1056 */     }
/* 1057 */
/* 1058 */   }
/* 1059 */
/* 1060 */
/* 1061 */   private void apply_0(InternalRow i) {
/* 1062 */
/* 1063 */     boolean isNull2 = i.isNullAt(0);
/* 1064 */     Decimal value2 = isNull2 ? null : (i.getDecimal(0, 38, 0));
/* 1065 */     boolean isNull1 = true;
/* 1066 */     java.math.BigDecimal value1 = null;
/* 1067 */     if (!isNull2) {
/* 1068 */
/* 1069 */       isNull1 = false;
/* 1070 */       if (!isNull1) {
/* 1071 */
/* 1072 */         Object funcResult = null;
/* 1073 */         funcResult = value2.toJavaBigDecimal();
/* 1074 */         value1 = (java.math.BigDecimal) funcResult;
/* 1075 */
/* 1076 */       }
/* 1077 */     }
/* 1078 */     if (isNull1) {
/* 1079 */       values[0] = null;
/* 1080 */     } else {
/* 1081 */       values[0] = value1;
/* 1082 */     }
/* 1083 */
/* 1084 */     boolean isNull4 = i.isNullAt(1);
/* 1085 */     UTF8String value4 = isNull4 ? null : (i.getUTF8String(1));
/* 1086 */     boolean isNull3 = true;
/* 1087 */     java.lang.String value3 = null;
/* 1088 */     if (!isNull4) {
/* 1089 */
/* 1090 */       isNull3 = false;
/* 1091 */       if (!isNull3) {
/* 1092 */
/* 1093 */         Object funcResult1 = null;
/* 1094 */         funcResult1 = value4.toString();
/* 1095 */         value3 = (java.lang.String) funcResult1;
/* 1096 */
/* 1097 */       }
/* 1098 */     }
/* 1099 */     if (isNull3) {
/* 1100 */       values[1] = null;
/* 1101 */     } else {
/* 1102 */       values[1] = value3;
/* 1103 */     }
/* 1104 */
/* 1105 */   }
/* 1106 */
/* 1107 */
/* 1108 */   private void apply_20(InternalRow i) {
/* 1109 */
/* 1110 */     boolean isNull82 = i.isNullAt(40);
/* 1111 */     Decimal value82 = isNull82 ? null : (i.getDecimal(40, 38, 0));
/* 1112 */     boolean isNull81 = true;
/* 1113 */     java.math.BigDecimal value81 = null;
/* 1114 */     if (!isNull82) {
/* 1115 */
/* 1116 */       isNull81 = false;
/* 1117 */       if (!isNull81) {
/* 1118 */
/* 1119 */         Object funcResult40 = null;
/* 1120 */         funcResult40 = value82.toJavaBigDecimal();
/* 1121 */         value81 = (java.math.BigDecimal) funcResult40;
/* 1122 */
/* 1123 */       }
/* 1124 */     }
/* 1125 */     if (isNull81) {
/* 1126 */       values[40] = null;
/* 1127 */     } else {
/* 1128 */       values[40] = value81;
/* 1129 */     }
/* 1130 */
/* 1131 */     boolean isNull84 = i.isNullAt(41);
/* 1132 */     Decimal value84 = isNull84 ? null : (i.getDecimal(41, 38, 0));
/* 1133 */     boolean isNull83 = true;
/* 1134 */     java.math.BigDecimal value83 = null;
/* 1135 */     if (!isNull84) {
/* 1136 */
/* 1137 */       isNull83 = false;
/* 1138 */       if (!isNull83) {
/* 1139 */
/* 1140 */         Object funcResult41 = null;
/* 1141 */         funcResult41 = value84.toJavaBigDecimal();
/* 1142 */         value83 = (java.math.BigDecimal) funcResult41;
/* 1143 */
/* 1144 */       }
/* 1145 */     }
/* 1146 */     if (isNull83) {
/* 1147 */       values[41] = null;
/* 1148 */     } else {
/* 1149 */       values[41] = value83;
/* 1150 */     }
/* 1151 */
/* 1152 */   }
/* 1153 */
/* 1154 */
/* 1155 */   private void apply_23(InternalRow i) {
/* 1156 */
/* 1157 */     boolean isNull94 = i.isNullAt(46);
/* 1158 */     Decimal value94 = isNull94 ? null : (i.getDecimal(46, 38, 0));
/* 1159 */     boolean isNull93 = true;
/* 1160 */     java.math.BigDecimal value93 = null;
/* 1161 */     if (!isNull94) {
/* 1162 */
/* 1163 */       isNull93 = false;
/* 1164 */       if (!isNull93) {
/* 1165 */
/* 1166 */         Object funcResult46 = null;
/* 1167 */         funcResult46 = value94.toJavaBigDecimal();
/* 1168 */         value93 = (java.math.BigDecimal) funcResult46;
/* 1169 */
/* 1170 */       }
/* 1171 */     }
/* 1172 */     if (isNull93) {
/* 1173 */       values[46] = null;
/* 1174 */     } else {
/* 1175 */       values[46] = value93;
/* 1176 */     }
/* 1177 */
/* 1178 */     boolean isNull96 = i.isNullAt(47);
/* 1179 */     Decimal value96 = isNull96 ? null : (i.getDecimal(47, 38, 0));
/* 1180 */     boolean isNull95 = true;
/* 1181 */     java.math.BigDecimal value95 = null;
/* 1182 */     if (!isNull96) {
/* 1183 */
/* 1184 */       isNull95 = false;
/* 1185 */       if (!isNull95) {
/* 1186 */
/* 1187 */         Object funcResult47 = null;
/* 1188 */         funcResult47 = value96.toJavaBigDecimal();
/* 1189 */         value95 = (java.math.BigDecimal) funcResult47;
/* 1190 */
/* 1191 */       }
/* 1192 */     }
/* 1193 */     if (isNull95) {
/* 1194 */       values[47] = null;
/* 1195 */     } else {
/* 1196 */       values[47] = value95;
/* 1197 */     }
/* 1198 */
/* 1199 */   }
/* 1200 */
/* 1201 */
/* 1202 */   private void apply_17(InternalRow i) {
/* 1203 */
/* 1204 */     boolean isNull70 = i.isNullAt(34);
/* 1205 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(34));
/* 1206 */     boolean isNull69 = true;
/* 1207 */     java.lang.String value69 = null;
/* 1208 */     if (!isNull70) {
/* 1209 */
/* 1210 */       isNull69 = false;
/* 1211 */       if (!isNull69) {
/* 1212 */
/* 1213 */         Object funcResult34 = null;
/* 1214 */         funcResult34 = value70.toString();
/* 1215 */         value69 = (java.lang.String) funcResult34;
/* 1216 */
/* 1217 */       }
/* 1218 */     }
/* 1219 */     if (isNull69) {
/* 1220 */       values[34] = null;
/* 1221 */     } else {
/* 1222 */       values[34] = value69;
/* 1223 */     }
/* 1224 */
/* 1225 */     boolean isNull72 = i.isNullAt(35);
/* 1226 */     Decimal value72 = isNull72 ? null : (i.getDecimal(35, 38, 0));
/* 1227 */     boolean isNull71 = true;
/* 1228 */     java.math.BigDecimal value71 = null;
/* 1229 */     if (!isNull72) {
/* 1230 */
/* 1231 */       isNull71 = false;
/* 1232 */       if (!isNull71) {
/* 1233 */
/* 1234 */         Object funcResult35 = null;
/* 1235 */         funcResult35 = value72.toJavaBigDecimal();
/* 1236 */         value71 = (java.math.BigDecimal) funcResult35;
/* 1237 */
/* 1238 */       }
/* 1239 */     }
/* 1240 */     if (isNull71) {
/* 1241 */       values[35] = null;
/* 1242 */     } else {
/* 1243 */       values[35] = value71;
/* 1244 */     }
/* 1245 */
/* 1246 */   }
/* 1247 */
/* 1248 */
/* 1249 */   private void apply_11(InternalRow i) {
/* 1250 */
/* 1251 */     boolean isNull46 = i.isNullAt(22);
/* 1252 */     Decimal value46 = isNull46 ? null : (i.getDecimal(22, 38, 0));
/* 1253 */     boolean isNull45 = true;
/* 1254 */     java.math.BigDecimal value45 = null;
/* 1255 */     if (!isNull46) {
/* 1256 */
/* 1257 */       isNull45 = false;
/* 1258 */       if (!isNull45) {
/* 1259 */
/* 1260 */         Object funcResult22 = null;
/* 1261 */         funcResult22 = value46.toJavaBigDecimal();
/* 1262 */         value45 = (java.math.BigDecimal) funcResult22;
/* 1263 */
/* 1264 */       }
/* 1265 */     }
/* 1266 */     if (isNull45) {
/* 1267 */       values[22] = null;
/* 1268 */     } else {
/* 1269 */       values[22] = value45;
/* 1270 */     }
/* 1271 */
/* 1272 */     boolean isNull48 = i.isNullAt(23);
/* 1273 */     Decimal value48 = isNull48 ? null : (i.getDecimal(23, 38, 0));
/* 1274 */     boolean isNull47 = true;
/* 1275 */     java.math.BigDecimal value47 = null;
/* 1276 */     if (!isNull48) {
/* 1277 */
/* 1278 */       isNull47 = false;
/* 1279 */       if (!isNull47) {
/* 1280 */
/* 1281 */         Object funcResult23 = null;
/* 1282 */         funcResult23 = value48.toJavaBigDecimal();
/* 1283 */         value47 = (java.math.BigDecimal) funcResult23;
/* 1284 */
/* 1285 */       }
/* 1286 */     }
/* 1287 */     if (isNull47) {
/* 1288 */       values[23] = null;
/* 1289 */     } else {
/* 1290 */       values[23] = value47;
/* 1291 */     }
/* 1292 */
/* 1293 */   }
/* 1294 */
/* 1295 */
/* 1296 */   private void apply_8(InternalRow i) {
/* 1297 */
/* 1298 */     boolean isNull34 = i.isNullAt(16);
/* 1299 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(16));
/* 1300 */     boolean isNull33 = true;
/* 1301 */     java.lang.String value33 = null;
/* 1302 */     if (!isNull34) {
/* 1303 */
/* 1304 */       isNull33 = false;
/* 1305 */       if (!isNull33) {
/* 1306 */
/* 1307 */         Object funcResult16 = null;
/* 1308 */         funcResult16 = value34.toString();
/* 1309 */         value33 = (java.lang.String) funcResult16;
/* 1310 */
/* 1311 */       }
/* 1312 */     }
/* 1313 */     if (isNull33) {
/* 1314 */       values[16] = null;
/* 1315 */     } else {
/* 1316 */       values[16] = value33;
/* 1317 */     }
/* 1318 */
/* 1319 */     boolean isNull36 = i.isNullAt(17);
/* 1320 */     Decimal value36 = isNull36 ? null : (i.getDecimal(17, 38, 0));
/* 1321 */     boolean isNull35 = true;
/* 1322 */     java.math.BigDecimal value35 = null;
/* 1323 */     if (!isNull36) {
/* 1324 */
/* 1325 */       isNull35 = false;
/* 1326 */       if (!isNull35) {
/* 1327 */
/* 1328 */         Object funcResult17 = null;
/* 1329 */         funcResult17 = value36.toJavaBigDecimal();
/* 1330 */         value35 = (java.math.BigDecimal) funcResult17;
/* 1331 */
/* 1332 */       }
/* 1333 */     }
/* 1334 */     if (isNull35) {
/* 1335 */       values[17] = null;
/* 1336 */     } else {
/* 1337 */       values[17] = value35;
/* 1338 */     }
/* 1339 */
/* 1340 */   }
/* 1341 */
/* 1342 */
/* 1343 */   private void apply_2(InternalRow i) {
/* 1344 */
/* 1345 */     boolean isNull10 = i.isNullAt(4);
/* 1346 */     Decimal value10 = isNull10 ? null : (i.getDecimal(4, 38, 0));
/* 1347 */     boolean isNull9 = true;
/* 1348 */     java.math.BigDecimal value9 = null;
/* 1349 */     if (!isNull10) {
/* 1350 */
/* 1351 */       isNull9 = false;
/* 1352 */       if (!isNull9) {
/* 1353 */
/* 1354 */         Object funcResult4 = null;
/* 1355 */         funcResult4 = value10.toJavaBigDecimal();
/* 1356 */         value9 = (java.math.BigDecimal) funcResult4;
/* 1357 */
/* 1358 */       }
/* 1359 */     }
/* 1360 */     if (isNull9) {
/* 1361 */       values[4] = null;
/* 1362 */     } else {
/* 1363 */       values[4] = value9;
/* 1364 */     }
/* 1365 */
/* 1366 */     boolean isNull12 = i.isNullAt(5);
/* 1367 */     Decimal value12 = isNull12 ? null : (i.getDecimal(5, 38, 0));
/* 1368 */     boolean isNull11 = true;
/* 1369 */     java.math.BigDecimal value11 = null;
/* 1370 */     if (!isNull12) {
/* 1371 */
/* 1372 */       isNull11 = false;
/* 1373 */       if (!isNull11) {
/* 1374 */
/* 1375 */         Object funcResult5 = null;
/* 1376 */         funcResult5 = value12.toJavaBigDecimal();
/* 1377 */         value11 = (java.math.BigDecimal) funcResult5;
/* 1378 */
/* 1379 */       }
/* 1380 */     }
/* 1381 */     if (isNull11) {
/* 1382 */       values[5] = null;
/* 1383 */     } else {
/* 1384 */       values[5] = value11;
/* 1385 */     }
/* 1386 */
/* 1387 */   }
/* 1388 */
/* 1389 */
/* 1390 */   private void apply_37(InternalRow i) {
/* 1391 */
/* 1392 */     boolean isNull150 = i.isNullAt(74);
/* 1393 */     UTF8String value150 = isNull150 ? null : (i.getUTF8String(74));
/* 1394 */     boolean isNull149 = true;
/* 1395 */     java.lang.String value149 = null;
/* 1396 */     if (!isNull150) {
/* 1397 */
/* 1398 */       isNull149 = false;
/* 1399 */       if (!isNull149) {
/* 1400 */
/* 1401 */         Object funcResult72 = null;
/* 1402 */         funcResult72 = value150.toString();
/* 1403 */         value149 = (java.lang.String) funcResult72;
/* 1404 */
/* 1405 */       }
/* 1406 */     }
/* 1407 */     if (isNull149) {
/* 1408 */       values[74] = null;
/* 1409 */     } else {
/* 1410 */       values[74] = value149;
/* 1411 */     }
/* 1412 */
/* 1413 */     boolean isNull152 = i.isNullAt(75);
/* 1414 */     UTF8String value152 = isNull152 ? null : (i.getUTF8String(75));
/* 1415 */     boolean isNull151 = true;
/* 1416 */     java.lang.String value151 = null;
/* 1417 */     if (!isNull152) {
/* 1418 */
/* 1419 */       isNull151 = false;
/* 1420 */       if (!isNull151) {
/* 1421 */
/* 1422 */         Object funcResult73 = null;
/* 1423 */         funcResult73 = value152.toString();
/* 1424 */         value151 = (java.lang.String) funcResult73;
/* 1425 */
/* 1426 */       }
/* 1427 */     }
/* 1428 */     if (isNull151) {
/* 1429 */       values[75] = null;
/* 1430 */     } else {
/* 1431 */       values[75] = value151;
/* 1432 */     }
/* 1433 */
/* 1434 */   }
/* 1435 */
/* 1436 */
/* 1437 */   private void apply_31(InternalRow i) {
/* 1438 */
/* 1439 */     boolean isNull126 = i.isNullAt(62);
/* 1440 */     UTF8String value126 = isNull126 ? null : (i.getUTF8String(62));
/* 1441 */     boolean isNull125 = true;
/* 1442 */     java.lang.String value125 = null;
/* 1443 */     if (!isNull126) {
/* 1444 */
/* 1445 */       isNull125 = false;
/* 1446 */       if (!isNull125) {
/* 1447 */
/* 1448 */         Object funcResult62 = null;
/* 1449 */         funcResult62 = value126.toString();
/* 1450 */         value125 = (java.lang.String) funcResult62;
/* 1451 */
/* 1452 */       }
/* 1453 */     }
/* 1454 */     if (isNull125) {
/* 1455 */       values[62] = null;
/* 1456 */     } else {
/* 1457 */       values[62] = value125;
/* 1458 */     }
/* 1459 */
/* 1460 */     boolean isNull128 = i.isNullAt(63);
/* 1461 */     UTF8String value128 = isNull128 ? null : (i.getUTF8String(63));
/* 1462 */     boolean isNull127 = true;
/* 1463 */     java.lang.String value127 = null;
/* 1464 */     if (!isNull128) {
/* 1465 */
/* 1466 */       isNull127 = false;
/* 1467 */       if (!isNull127) {
/* 1468 */
/* 1469 */         Object funcResult63 = null;
/* 1470 */         funcResult63 = value128.toString();
/* 1471 */         value127 = (java.lang.String) funcResult63;
/* 1472 */
/* 1473 */       }
/* 1474 */     }
/* 1475 */     if (isNull127) {
/* 1476 */       values[63] = null;
/* 1477 */     } else {
/* 1478 */       values[63] = value127;
/* 1479 */     }
/* 1480 */
/* 1481 */   }
/* 1482 */
/* 1483 */
/* 1484 */   private void apply_5(InternalRow i) {
/* 1485 */
/* 1486 */     boolean isNull22 = i.isNullAt(10);
/* 1487 */     Decimal value22 = isNull22 ? null : (i.getDecimal(10, 38, 0));
/* 1488 */     boolean isNull21 = true;
/* 1489 */     java.math.BigDecimal value21 = null;
/* 1490 */     if (!isNull22) {
/* 1491 */
/* 1492 */       isNull21 = false;
/* 1493 */       if (!isNull21) {
/* 1494 */
/* 1495 */         Object funcResult10 = null;
/* 1496 */         funcResult10 = value22.toJavaBigDecimal();
/* 1497 */         value21 = (java.math.BigDecimal) funcResult10;
/* 1498 */
/* 1499 */       }
/* 1500 */     }
/* 1501 */     if (isNull21) {
/* 1502 */       values[10] = null;
/* 1503 */     } else {
/* 1504 */       values[10] = value21;
/* 1505 */     }
/* 1506 */
/* 1507 */     boolean isNull24 = i.isNullAt(11);
/* 1508 */     Decimal value24 = isNull24 ? null : (i.getDecimal(11, 38, 0));
/* 1509 */     boolean isNull23 = true;
/* 1510 */     java.math.BigDecimal value23 = null;
/* 1511 */     if (!isNull24) {
/* 1512 */
/* 1513 */       isNull23 = false;
/* 1514 */       if (!isNull23) {
/* 1515 */
/* 1516 */         Object funcResult11 = null;
/* 1517 */         funcResult11 = value24.toJavaBigDecimal();
/* 1518 */         value23 = (java.math.BigDecimal) funcResult11;
/* 1519 */
/* 1520 */       }
/* 1521 */     }
/* 1522 */     if (isNull23) {
/* 1523 */       values[11] = null;
/* 1524 */     } else {
/* 1525 */       values[11] = value23;
/* 1526 */     }
/* 1527 */
/* 1528 */   }
/* 1529 */
/* 1530 */
/* 1531 */   private void apply_25(InternalRow i) {
/* 1532 */
/* 1533 */     boolean isNull102 = i.isNullAt(50);
/* 1534 */     UTF8String value102 = isNull102 ? null : (i.getUTF8String(50));
/* 1535 */     boolean isNull101 = true;
/* 1536 */     java.lang.String value101 = null;
/* 1537 */     if (!isNull102) {
/* 1538 */
/* 1539 */       isNull101 = false;
/* 1540 */       if (!isNull101) {
/* 1541 */
/* 1542 */         Object funcResult50 = null;
/* 1543 */         funcResult50 = value102.toString();
/* 1544 */         value101 = (java.lang.String) funcResult50;
/* 1545 */
/* 1546 */       }
/* 1547 */     }
/* 1548 */     if (isNull101) {
/* 1549 */       values[50] = null;
/* 1550 */     } else {
/* 1551 */       values[50] = value101;
/* 1552 */     }
/* 1553 */
/* 1554 */     boolean isNull104 = i.isNullAt(51);
/* 1555 */     UTF8String value104 = isNull104 ? null : (i.getUTF8String(51));
/* 1556 */     boolean isNull103 = true;
/* 1557 */     java.lang.String value103 = null;
/* 1558 */     if (!isNull104) {
/* 1559 */
/* 1560 */       isNull103 = false;
/* 1561 */       if (!isNull103) {
/* 1562 */
/* 1563 */         Object funcResult51 = null;
/* 1564 */         funcResult51 = value104.toString();
/* 1565 */         value103 = (java.lang.String) funcResult51;
/* 1566 */
/* 1567 */       }
/* 1568 */     }
/* 1569 */     if (isNull103) {
/* 1570 */       values[51] = null;
/* 1571 */     } else {
/* 1572 */       values[51] = value103;
/* 1573 */     }
/* 1574 */
/* 1575 */   }
/* 1576 */
/* 1577 */
/* 1578 */   private void apply_10(InternalRow i) {
/* 1579 */
/* 1580 */     boolean isNull42 = i.isNullAt(20);
/* 1581 */     Decimal value42 = isNull42 ? null : (i.getDecimal(20, 38, 0));
/* 1582 */     boolean isNull41 = true;
/* 1583 */     java.math.BigDecimal value41 = null;
/* 1584 */     if (!isNull42) {
/* 1585 */
/* 1586 */       isNull41 = false;
/* 1587 */       if (!isNull41) {
/* 1588 */
/* 1589 */         Object funcResult20 = null;
/* 1590 */         funcResult20 = value42.toJavaBigDecimal();
/* 1591 */         value41 = (java.math.BigDecimal) funcResult20;
/* 1592 */
/* 1593 */       }
/* 1594 */     }
/* 1595 */     if (isNull41) {
/* 1596 */       values[20] = null;
/* 1597 */     } else {
/* 1598 */       values[20] = value41;
/* 1599 */     }
/* 1600 */
/* 1601 */     boolean isNull44 = i.isNullAt(21);
/* 1602 */     Decimal value44 = isNull44 ? null : (i.getDecimal(21, 38, 0));
/* 1603 */     boolean isNull43 = true;
/* 1604 */     java.math.BigDecimal value43 = null;
/* 1605 */     if (!isNull44) {
/* 1606 */
/* 1607 */       isNull43 = false;
/* 1608 */       if (!isNull43) {
/* 1609 */
/* 1610 */         Object funcResult21 = null;
/* 1611 */         funcResult21 = value44.toJavaBigDecimal();
/* 1612 */         value43 = (java.math.BigDecimal) funcResult21;
/* 1613 */
/* 1614 */       }
/* 1615 */     }
/* 1616 */     if (isNull43) {
/* 1617 */       values[21] = null;
/* 1618 */     } else {
/* 1619 */       values[21] = value43;
/* 1620 */     }
/* 1621 */
/* 1622 */   }
/* 1623 */
/* 1624 */
/* 1625 */   private void apply_19(InternalRow i) {
/* 1626 */
/* 1627 */     boolean isNull78 = i.isNullAt(38);
/* 1628 */     Decimal value78 = isNull78 ? null : (i.getDecimal(38, 38, 0));
/* 1629 */     boolean isNull77 = true;
/* 1630 */     java.math.BigDecimal value77 = null;
/* 1631 */     if (!isNull78) {
/* 1632 */
/* 1633 */       isNull77 = false;
/* 1634 */       if (!isNull77) {
/* 1635 */
/* 1636 */         Object funcResult38 = null;
/* 1637 */         funcResult38 = value78.toJavaBigDecimal();
/* 1638 */         value77 = (java.math.BigDecimal) funcResult38;
/* 1639 */
/* 1640 */       }
/* 1641 */     }
/* 1642 */     if (isNull77) {
/* 1643 */       values[38] = null;
/* 1644 */     } else {
/* 1645 */       values[38] = value77;
/* 1646 */     }
/* 1647 */
/* 1648 */     boolean isNull80 = i.isNullAt(39);
/* 1649 */     Decimal value80 = isNull80 ? null : (i.getDecimal(39, 38, 0));
/* 1650 */     boolean isNull79 = true;
/* 1651 */     java.math.BigDecimal value79 = null;
/* 1652 */     if (!isNull80) {
/* 1653 */
/* 1654 */       isNull79 = false;
/* 1655 */       if (!isNull79) {
/* 1656 */
/* 1657 */         Object funcResult39 = null;
/* 1658 */         funcResult39 = value80.toJavaBigDecimal();
/* 1659 */         value79 = (java.math.BigDecimal) funcResult39;
/* 1660 */
/* 1661 */       }
/* 1662 */     }
/* 1663 */     if (isNull79) {
/* 1664 */       values[39] = null;
/* 1665 */     } else {
/* 1666 */       values[39] = value79;
/* 1667 */     }
/* 1668 */
/* 1669 */   }
/* 1670 */
/* 1671 */
/* 1672 */   private void apply_13(InternalRow i) {
/* 1673 */
/* 1674 */     boolean isNull54 = i.isNullAt(26);
/* 1675 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(26));
/* 1676 */     boolean isNull53 = true;
/* 1677 */     java.lang.String value53 = null;
/* 1678 */     if (!isNull54) {
/* 1679 */
/* 1680 */       isNull53 = false;
/* 1681 */       if (!isNull53) {
/* 1682 */
/* 1683 */         Object funcResult26 = null;
/* 1684 */         funcResult26 = value54.toString();
/* 1685 */         value53 = (java.lang.String) funcResult26;
/* 1686 */
/* 1687 */       }
/* 1688 */     }
/* 1689 */     if (isNull53) {
/* 1690 */       values[26] = null;
/* 1691 */     } else {
/* 1692 */       values[26] = value53;
/* 1693 */     }
/* 1694 */
/* 1695 */     boolean isNull56 = i.isNullAt(27);
/* 1696 */     UTF8String value56 = isNull56 ? null : (i.getUTF8String(27));
/* 1697 */     boolean isNull55 = true;
/* 1698 */     java.lang.String value55 = null;
/* 1699 */     if (!isNull56) {
/* 1700 */
/* 1701 */       isNull55 = false;
/* 1702 */       if (!isNull55) {
/* 1703 */
/* 1704 */         Object funcResult27 = null;
/* 1705 */         funcResult27 = value56.toString();
/* 1706 */         value55 = (java.lang.String) funcResult27;
/* 1707 */
/* 1708 */       }
/* 1709 */     }
/* 1710 */     if (isNull55) {
/* 1711 */       values[27] = null;
/* 1712 */     } else {
/* 1713 */       values[27] = value55;
/* 1714 */     }
/* 1715 */
/* 1716 */   }
/* 1717 */
/* 1718 */
/* 1719 */   private void apply_34(InternalRow i) {
/* 1720 */
/* 1721 */     boolean isNull138 = i.isNullAt(68);
/* 1722 */     UTF8String value138 = isNull138 ? null : (i.getUTF8String(68));
/* 1723 */     boolean isNull137 = true;
/* 1724 */     java.lang.String value137 = null;
/* 1725 */     if (!isNull138) {
/* 1726 */
/* 1727 */       isNull137 = false;
/* 1728 */       if (!isNull137) {
/* 1729 */
/* 1730 */         Object funcResult68 = null;
/* 1731 */         funcResult68 = value138.toString();
/* 1732 */         value137 = (java.lang.String) funcResult68;
/* 1733 */
/* 1734 */       }
/* 1735 */     }
/* 1736 */     if (isNull137) {
/* 1737 */       values[68] = null;
/* 1738 */     } else {
/* 1739 */       values[68] = value137;
/* 1740 */     }
/* 1741 */
/* 1742 */     boolean isNull140 = i.isNullAt(69);
/* 1743 */     UTF8String value140 = isNull140 ? null : (i.getUTF8String(69));
/* 1744 */     boolean isNull139 = true;
/* 1745 */     java.lang.String value139 = null;
/* 1746 */     if (!isNull140) {
/* 1747 */
/* 1748 */       isNull139 = false;
/* 1749 */       if (!isNull139) {
/* 1750 */
/* 1751 */         Object funcResult69 = null;
/* 1752 */         funcResult69 = value140.toString();
/* 1753 */         value139 = (java.lang.String) funcResult69;
/* 1754 */
/* 1755 */       }
/* 1756 */     }
/* 1757 */     if (isNull139) {
/* 1758 */       values[69] = null;
/* 1759 */     } else {
/* 1760 */       values[69] = value139;
/* 1761 */     }
/* 1762 */
/* 1763 */   }
/* 1764 */
/* 1765 */
/* 1766 */   private void apply_28(InternalRow i) {
/* 1767 */
/* 1768 */     boolean isNull114 = i.isNullAt(56);
/* 1769 */     Decimal value114 = isNull114 ? null : (i.getDecimal(56, 38, 0));
/* 1770 */     boolean isNull113 = true;
/* 1771 */     java.math.BigDecimal value113 = null;
/* 1772 */     if (!isNull114) {
/* 1773 */
/* 1774 */       isNull113 = false;
/* 1775 */       if (!isNull113) {
/* 1776 */
/* 1777 */         Object funcResult56 = null;
/* 1778 */         funcResult56 = value114.toJavaBigDecimal();
/* 1779 */         value113 = (java.math.BigDecimal) funcResult56;
/* 1780 */
/* 1781 */       }
/* 1782 */     }
/* 1783 */     if (isNull113) {
/* 1784 */       values[56] = null;
/* 1785 */     } else {
/* 1786 */       values[56] = value113;
/* 1787 */     }
/* 1788 */
/* 1789 */     boolean isNull116 = i.isNullAt(57);
/* 1790 */     Decimal value116 = isNull116 ? null : (i.getDecimal(57, 38, 0));
/* 1791 */     boolean isNull115 = true;
/* 1792 */     java.math.BigDecimal value115 = null;
/* 1793 */     if (!isNull116) {
/* 1794 */
/* 1795 */       isNull115 = false;
/* 1796 */       if (!isNull115) {
/* 1797 */
/* 1798 */         Object funcResult57 = null;
/* 1799 */         funcResult57 = value116.toJavaBigDecimal();
/* 1800 */         value115 = (java.math.BigDecimal) funcResult57;
/* 1801 */
/* 1802 */       }
/* 1803 */     }
/* 1804 */     if (isNull115) {
/* 1805 */       values[57] = null;
/* 1806 */     } else {
/* 1807 */       values[57] = value115;
/* 1808 */     }
/* 1809 */
/* 1810 */   }
/* 1811 */
/* 1812 */
/* 1813 */   public java.lang.Object apply(java.lang.Object _i) {
/* 1814 */     InternalRow i = (InternalRow) _i;
/* 1815 */
/* 1816 */     values = new Object[76];
/* 1817 */     apply_0(i);
/* 1818 */     apply_1(i);
/* 1819 */     apply_2(i);
/* 1820 */     apply_3(i);
/* 1821 */     apply_4(i);
/* 1822 */     apply_5(i);
/* 1823 */     apply_6(i);
/* 1824 */     apply_7(i);
/* 1825 */     apply_8(i);
/* 1826 */     apply_9(i);
/* 1827 */     apply_10(i);
/* 1828 */     apply_11(i);
/* 1829 */     apply_12(i);
/* 1830 */     apply_13(i);
/* 1831 */     apply_14(i);
/* 1832 */     apply_15(i);
/* 1833 */     apply_16(i);
/* 1834 */     apply_17(i);
/* 1835 */     apply_18(i);
/* 1836 */     apply_19(i);
/* 1837 */     apply_20(i);
/* 1838 */     apply_21(i);
/* 1839 */     apply_22(i);
/* 1840 */     apply_23(i);
/* 1841 */     apply_24(i);
/* 1842 */     apply_25(i);
/* 1843 */     apply_26(i);
/* 1844 */     apply_27(i);
/* 1845 */     apply_28(i);
/* 1846 */     apply_29(i);
/* 1847 */     apply_30(i);
/* 1848 */     apply_31(i);
/* 1849 */     apply_32(i);
/* 1850 */     apply_33(i);
/* 1851 */     apply_34(i);
/* 1852 */     apply_35(i);
/* 1853 */     apply_36(i);
/* 1854 */     apply_37(i);
/* 1855 */     final org.apache.spark.sql.Row value = new org.apache.spark.sql.catalyst.expressions.GenericRowWithSchema(values, schema);
/* 1856 */     if (false) {
/* 1857 */       mutableRow.setNullAt(0);
/* 1858 */     } else {
/* 1859 */
/* 1860 */       mutableRow.update(0, value);
/* 1861 */     }
/* 1862 */
/* 1863 */     return mutableRow;
/* 1864 */   }
/* 1865 */ }

17/11/03 14:41:44 DEBUG DFSClient: DFSClient writeChunk allocating new packet seqno=6, src=/spark2-history/local-1509719784165.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=49152
17/11/03 14:41:44 DEBUG DFSClient: DFSClient flush(): bytesCurBlock=49369 lastFlushOffset=49255 createNewBlock=false
17/11/03 14:41:44 DEBUG DFSClient: Queued packet 6
17/11/03 14:41:44 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: 6 offsetInBlock: 49152 lastPacketInBlock: false lastByteOffsetInBlock: 49369
17/11/03 14:41:44 DEBUG DFSClient: Waiting for ack for: 6
17/11/03 14:41:44 DEBUG DFSClient: DFSClient seqno: 6 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 812658 flag: 0 flag: 0 flag: 0
17/11/03 14:41:44 DEBUG CodeGenerator:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */   private Object[] values;
/* 010 */   private boolean resultIsNull;
/* 011 */   private long argValue;
/* 012 */   private boolean resultIsNull1;
/* 013 */   private long argValue1;
/* 014 */   private org.apache.spark.sql.types.StructType schema;
/* 015 */
/* 016 */   public SpecificSafeProjection(Object[] references) {
/* 017 */     this.references = references;
/* 018 */     mutableRow = (InternalRow) references[references.length - 1];
/* 019 */
/* 020 */
/* 021 */
/* 022 */
/* 023 */
/* 024 */     this.schema = (org.apache.spark.sql.types.StructType) references[0];
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   public void initialize(int partitionIndex) {
/* 029 */
/* 030 */   }
/* 031 */
/* 032 */
/* 033 */   private void apply_16(InternalRow i) {
/* 034 */
/* 035 */     boolean isNull66 = i.isNullAt(32);
/* 036 */     UTF8String value66 = isNull66 ? null : (i.getUTF8String(32));
/* 037 */     boolean isNull65 = true;
/* 038 */     java.lang.String value65 = null;
/* 039 */     if (!isNull66) {
/* 040 */
/* 041 */       isNull65 = false;
/* 042 */       if (!isNull65) {
/* 043 */
/* 044 */         Object funcResult32 = null;
/* 045 */         funcResult32 = value66.toString();
/* 046 */         value65 = (java.lang.String) funcResult32;
/* 047 */
/* 048 */       }
/* 049 */     }
/* 050 */     if (isNull65) {
/* 051 */       values[32] = null;
/* 052 */     } else {
/* 053 */       values[32] = value65;
/* 054 */     }
/* 055 */
/* 056 */     boolean isNull68 = i.isNullAt(33);
/* 057 */     UTF8String value68 = isNull68 ? null : (i.getUTF8String(33));
/* 058 */     boolean isNull67 = true;
/* 059 */     java.lang.String value67 = null;
/* 060 */     if (!isNull68) {
/* 061 */
/* 062 */       isNull67 = false;
/* 063 */       if (!isNull67) {
/* 064 */
/* 065 */         Object funcResult33 = null;
/* 066 */         funcResult33 = value68.toString();
/* 067 */         value67 = (java.lang.String) funcResult33;
/* 068 */
/* 069 */       }
/* 070 */     }
/* 071 */     if (isNull67) {
/* 072 */       values[33] = null;
/* 073 */     } else {
/* 074 */       values[33] = value67;
/* 075 */     }
/* 076 */
/* 077 */   }
/* 078 */
/* 079 */
/* 080 */   private void apply_22(InternalRow i) {
/* 081 */
/* 082 */     boolean isNull90 = i.isNullAt(44);
/* 083 */     UTF8String value90 = isNull90 ? null : (i.getUTF8String(44));
/* 084 */     boolean isNull89 = true;
/* 085 */     java.lang.String value89 = null;
/* 086 */     if (!isNull90) {
/* 087 */
/* 088 */       isNull89 = false;
/* 089 */       if (!isNull89) {
/* 090 */
/* 091 */         Object funcResult44 = null;
/* 092 */         funcResult44 = value90.toString();
/* 093 */         value89 = (java.lang.String) funcResult44;
/* 094 */
/* 095 */       }
/* 096 */     }
/* 097 */     if (isNull89) {
/* 098 */       values[44] = null;
/* 099 */     } else {
/* 100 */       values[44] = value89;
/* 101 */     }
/* 102 */
/* 103 */     boolean isNull92 = i.isNullAt(45);
/* 104 */     UTF8String value92 = isNull92 ? null : (i.getUTF8String(45));
/* 105 */     boolean isNull91 = true;
/* 106 */     java.lang.String value91 = null;
/* 107 */     if (!isNull92) {
/* 108 */
/* 109 */       isNull91 = false;
/* 110 */       if (!isNull91) {
/* 111 */
/* 112 */         Object funcResult45 = null;
/* 113 */         funcResult45 = value92.toString();
/* 114 */         value91 = (java.lang.String) funcResult45;
/* 115 */
/* 116 */       }
/* 117 */     }
/* 118 */     if (isNull91) {
/* 119 */       values[45] = null;
/* 120 */     } else {
/* 121 */       values[45] = value91;
/* 122 */     }
/* 123 */
/* 124 */   }
/* 125 */
/* 126 */
/* 127 */   private void apply_4(InternalRow i) {
/* 128 */
/* 129 */     boolean isNull18 = i.isNullAt(8);
/* 130 */     UTF8String value18 = isNull18 ? null : (i.getUTF8String(8));
/* 131 */     boolean isNull17 = true;
/* 132 */     java.lang.String value17 = null;
/* 133 */     if (!isNull18) {
/* 134 */
/* 135 */       isNull17 = false;
/* 136 */       if (!isNull17) {
/* 137 */
/* 138 */         Object funcResult8 = null;
/* 139 */         funcResult8 = value18.toString();
/* 140 */         value17 = (java.lang.String) funcResult8;
/* 141 */
/* 142 */       }
/* 143 */     }
/* 144 */     if (isNull17) {
/* 145 */       values[8] = null;
/* 146 */     } else {
/* 147 */       values[8] = value17;
/* 148 */     }
/* 149 */
/* 150 */     boolean isNull20 = i.isNullAt(9);
/* 151 */     UTF8String value20 = isNull20 ? null : (i.getUTF8String(9));
/* 152 */     boolean isNull19 = true;
/* 153 */     java.lang.String value19 = null;
/* 154 */     if (!isNull20) {
/* 155 */
/* 156 */       isNull19 = false;
/* 157 */       if (!isNull19) {
/* 158 */
/* 159 */         Object funcResult9 = null;
/* 160 */         funcResult9 = value20.toString();
/* 161 */         value19 = (java.lang.String) funcResult9;
/* 162 */
/* 163 */       }
/* 164 */     }
/* 165 */     if (isNull19) {
/* 166 */       values[9] = null;
/* 167 */     } else {
/* 168 */       values[9] = value19;
/* 169 */     }
/* 170 */
/* 171 */   }
/* 172 */
/* 173 */
/* 174 */   private void apply_7(InternalRow i) {
/* 175 */
/* 176 */     boolean isNull30 = i.isNullAt(14);
/* 177 */     UTF8String value30 = isNull30 ? null : (i.getUTF8String(14));
/* 178 */     boolean isNull29 = true;
/* 179 */     java.lang.String value29 = null;
/* 180 */     if (!isNull30) {
/* 181 */
/* 182 */       isNull29 = false;
/* 183 */       if (!isNull29) {
/* 184 */
/* 185 */         Object funcResult14 = null;
/* 186 */         funcResult14 = value30.toString();
/* 187 */         value29 = (java.lang.String) funcResult14;
/* 188 */
/* 189 */       }
/* 190 */     }
/* 191 */     if (isNull29) {
/* 192 */       values[14] = null;
/* 193 */     } else {
/* 194 */       values[14] = value29;
/* 195 */     }
/* 196 */
/* 197 */     boolean isNull32 = i.isNullAt(15);
/* 198 */     UTF8String value32 = isNull32 ? null : (i.getUTF8String(15));
/* 199 */     boolean isNull31 = true;
/* 200 */     java.lang.String value31 = null;
/* 201 */     if (!isNull32) {
/* 202 */
/* 203 */       isNull31 = false;
/* 204 */       if (!isNull31) {
/* 205 */
/* 206 */         Object funcResult15 = null;
/* 207 */         funcResult15 = value32.toString();
/* 208 */         value31 = (java.lang.String) funcResult15;
/* 209 */
/* 210 */       }
/* 211 */     }
/* 212 */     if (isNull31) {
/* 213 */       values[15] = null;
/* 214 */     } else {
/* 215 */       values[15] = value31;
/* 216 */     }
/* 217 */
/* 218 */   }
/* 219 */
/* 220 */
/* 221 */   private void apply_36(InternalRow i) {
/* 222 */
/* 223 */     resultIsNull = false;
/* 224 */     if (!resultIsNull) {
/* 225 */
/* 226 */       boolean isNull146 = i.isNullAt(72);
/* 227 */       long value146 = isNull146 ? -1L : (i.getLong(72));
/* 228 */       resultIsNull = isNull146;
/* 229 */       argValue = value146;
/* 230 */     }
/* 231 */
/* 232 */     boolean isNull145 = resultIsNull;
/* 233 */     final java.sql.Timestamp value145 = resultIsNull ? null : org.apache.spark.sql.catalyst.util.DateTimeUtils.toJavaTimestamp(argValue);
/* 234 */     isNull145 = value145 == null;
/* 235 */     if (isNull145) {
/* 236 */       values[72] = null;
/* 237 */     } else {
/* 238 */       values[72] = value145;
/* 239 */     }
/* 240 */
/* 241 */     resultIsNull1 = false;
/* 242 */     if (!resultIsNull1) {
/* 243 */
/* 244 */       boolean isNull148 = i.isNullAt(73);
/* 245 */       long value148 = isNull148 ? -1L : (i.getLong(73));
/* 246 */       resultIsNull1 = isNull148;
/* 247 */       argValue1 = value148;
/* 248 */     }
/* 249 */
/* 250 */     boolean isNull147 = resultIsNull1;
/* 251 */     final java.sql.Timestamp value147 = resultIsNull1 ? null : org.apache.spark.sql.catalyst.util.DateTimeUtils.toJavaTimestamp(argValue1);
/* 252 */     isNull147 = value147 == null;
/* 253 */     if (isNull147) {
/* 254 */       values[73] = null;
/* 255 */     } else {
/* 256 */       values[73] = value147;
/* 257 */     }
/* 258 */
/* 259 */   }
/* 260 */
/* 261 */
/* 262 */   private void apply_1(InternalRow i) {
/* 263 */
/* 264 */     boolean isNull6 = i.isNullAt(2);
/* 265 */     Decimal value6 = isNull6 ? null : (i.getDecimal(2, 38, 0));
/* 266 */     boolean isNull5 = true;
/* 267 */     java.math.BigDecimal value5 = null;
/* 268 */     if (!isNull6) {
/* 269 */
/* 270 */       isNull5 = false;
/* 271 */       if (!isNull5) {
/* 272 */
/* 273 */         Object funcResult2 = null;
/* 274 */         funcResult2 = value6.toJavaBigDecimal();
/* 275 */         value5 = (java.math.BigDecimal) funcResult2;
/* 276 */
/* 277 */       }
/* 278 */     }
/* 279 */     if (isNull5) {
/* 280 */       values[2] = null;
/* 281 */     } else {
/* 282 */       values[2] = value5;
/* 283 */     }
/* 284 */
/* 285 */     boolean isNull8 = i.isNullAt(3);
/* 286 */     Decimal value8 = isNull8 ? null : (i.getDecimal(3, 38, 0));
/* 287 */     boolean isNull7 = true;
/* 288 */     java.math.BigDecimal value7 = null;
/* 289 */     if (!isNull8) {
/* 290 */
/* 291 */       isNull7 = false;
/* 292 */       if (!isNull7) {
/* 293 */
/* 294 */         Object funcResult3 = null;
/* 295 */         funcResult3 = value8.toJavaBigDecimal();
/* 296 */         value7 = (java.math.BigDecimal) funcResult3;
/* 297 */
/* 298 */       }
/* 299 */     }
/* 300 */     if (isNull7) {
/* 301 */       values[3] = null;
/* 302 */     } else {
/* 303 */       values[3] = value7;
/* 304 */     }
/* 305 */
/* 306 */   }
/* 307 */
/* 308 */
/* 309 */   private void apply_21(InternalRow i) {
/* 310 */
/* 311 */     boolean isNull86 = i.isNullAt(42);
/* 312 */     UTF8String value86 = isNull86 ? null : (i.getUTF8String(42));
/* 313 */     boolean isNull85 = true;
/* 314 */     java.lang.String value85 = null;
/* 315 */     if (!isNull86) {
/* 316 */
/* 317 */       isNull85 = false;
/* 318 */       if (!isNull85) {
/* 319 */
/* 320 */         Object funcResult42 = null;
/* 321 */         funcResult42 = value86.toString();
/* 322 */         value85 = (java.lang.String) funcResult42;
/* 323 */
/* 324 */       }
/* 325 */     }
/* 326 */     if (isNull85) {
/* 327 */       values[42] = null;
/* 328 */     } else {
/* 329 */       values[42] = value85;
/* 330 */     }
/* 331 */
/* 332 */     boolean isNull88 = i.isNullAt(43);
/* 333 */     UTF8String value88 = isNull88 ? null : (i.getUTF8String(43));
/* 334 */     boolean isNull87 = true;
/* 335 */     java.lang.String value87 = null;
/* 336 */     if (!isNull88) {
/* 337 */
/* 338 */       isNull87 = false;
/* 339 */       if (!isNull87) {
/* 340 */
/* 341 */         Object funcResult43 = null;
/* 342 */         funcResult43 = value88.toString();
/* 343 */         value87 = (java.lang.String) funcResult43;
/* 344 */
/* 345 */       }
/* 346 */     }
/* 347 */     if (isNull87) {
/* 348 */       values[43] = null;
/* 349 */     } else {
/* 350 */       values[43] = value87;
/* 351 */     }
/* 352 */
/* 353 */   }
/* 354 */
/* 355 */
/* 356 */   private void apply_30(InternalRow i) {
/* 357 */
/* 358 */     boolean isNull122 = i.isNullAt(60);
/* 359 */     UTF8String value122 = isNull122 ? null : (i.getUTF8String(60));
/* 360 */     boolean isNull121 = true;
/* 361 */     java.lang.String value121 = null;
/* 362 */     if (!isNull122) {
/* 363 */
/* 364 */       isNull121 = false;
/* 365 */       if (!isNull121) {
/* 366 */
/* 367 */         Object funcResult60 = null;
/* 368 */         funcResult60 = value122.toString();
/* 369 */         value121 = (java.lang.String) funcResult60;
/* 370 */
/* 371 */       }
/* 372 */     }
/* 373 */     if (isNull121) {
/* 374 */       values[60] = null;
/* 375 */     } else {
/* 376 */       values[60] = value121;
/* 377 */     }
/* 378 */
/* 379 */     boolean isNull124 = i.isNullAt(61);
/* 380 */     UTF8String value124 = isNull124 ? null : (i.getUTF8String(61));
/* 381 */     boolean isNull123 = true;
/* 382 */     java.lang.String value123 = null;
/* 383 */     if (!isNull124) {
/* 384 */
/* 385 */       isNull123 = false;
/* 386 */       if (!isNull123) {
/* 387 */
/* 388 */         Object funcResult61 = null;
/* 389 */         funcResult61 = value124.toString();
/* 390 */         value123 = (java.lang.String) funcResult61;
/* 391 */
/* 392 */       }
/* 393 */     }
/* 394 */     if (isNull123) {
/* 395 */       values[61] = null;
/* 396 */     } else {
/* 397 */       values[61] = value123;
/* 398 */     }
/* 399 */
/* 400 */   }
/* 401 */
/* 402 */
/* 403 */   private void apply_18(InternalRow i) {
/* 404 */
/* 405 */     boolean isNull74 = i.isNullAt(36);
/* 406 */     UTF8String value74 = isNull74 ? null : (i.getUTF8String(36));
/* 407 */     boolean isNull73 = true;
/* 408 */     java.lang.String value73 = null;
/* 409 */     if (!isNull74) {
/* 410 */
/* 411 */       isNull73 = false;
/* 412 */       if (!isNull73) {
/* 413 */
/* 414 */         Object funcResult36 = null;
/* 415 */         funcResult36 = value74.toString();
/* 416 */         value73 = (java.lang.String) funcResult36;
/* 417 */
/* 418 */       }
/* 419 */     }
/* 420 */     if (isNull73) {
/* 421 */       values[36] = null;
/* 422 */     } else {
/* 423 */       values[36] = value73;
/* 424 */     }
/* 425 */
/* 426 */     boolean isNull76 = i.isNullAt(37);
/* 427 */     Decimal value76 = isNull76 ? null : (i.getDecimal(37, 38, 0));
/* 428 */     boolean isNull75 = true;
/* 429 */     java.math.BigDecimal value75 = null;
/* 430 */     if (!isNull76) {
/* 431 */
/* 432 */       isNull75 = false;
/* 433 */       if (!isNull75) {
/* 434 */
/* 435 */         Object funcResult37 = null;
/* 436 */         funcResult37 = value76.toJavaBigDecimal();
/* 437 */         value75 = (java.math.BigDecimal) funcResult37;
/* 438 */
/* 439 */       }
/* 440 */     }
/* 441 */     if (isNull75) {
/* 442 */       values[37] = null;
/* 443 */     } else {
/* 444 */       values[37] = value75;
/* 445 */     }
/* 446 */
/* 447 */   }
/* 448 */
/* 449 */
/* 450 */   private void apply_24(InternalRow i) {
/* 451 */
/* 452 */     boolean isNull98 = i.isNullAt(48);
/* 453 */     Decimal value98 = isNull98 ? null : (i.getDecimal(48, 38, 0));
/* 454 */     boolean isNull97 = true;
/* 455 */     java.math.BigDecimal value97 = null;
/* 456 */     if (!isNull98) {
/* 457 */
/* 458 */       isNull97 = false;
/* 459 */       if (!isNull97) {
/* 460 */
/* 461 */         Object funcResult48 = null;
/* 462 */         funcResult48 = value98.toJavaBigDecimal();
/* 463 */         value97 = (java.math.BigDecimal) funcResult48;
/* 464 */
/* 465 */       }
/* 466 */     }
/* 467 */     if (isNull97) {
/* 468 */       values[48] = null;
/* 469 */     } else {
/* 470 */       values[48] = value97;
/* 471 */     }
/* 472 */
/* 473 */     boolean isNull100 = i.isNullAt(49);
/* 474 */     UTF8String value100 = isNull100 ? null : (i.getUTF8String(49));
/* 475 */     boolean isNull99 = true;
/* 476 */     java.lang.String value99 = null;
/* 477 */     if (!isNull100) {
/* 478 */
/* 479 */       isNull99 = false;
/* 480 */       if (!isNull99) {
/* 481 */
/* 482 */         Object funcResult49 = null;
/* 483 */         funcResult49 = value100.toString();
/* 484 */         value99 = (java.lang.String) funcResult49;
/* 485 */
/* 486 */       }
/* 487 */     }
/* 488 */     if (isNull99) {
/* 489 */       values[49] = null;
/* 490 */     } else {
/* 491 */       values[49] = value99;
/* 492 */     }
/* 493 */
/* 494 */   }
/* 495 */
/* 496 */
/* 497 */   private void apply_27(InternalRow i) {
/* 498 */
/* 499 */     boolean isNull110 = i.isNullAt(54);
/* 500 */     UTF8String value110 = isNull110 ? null : (i.getUTF8String(54));
/* 501 */     boolean isNull109 = true;
/* 502 */     java.lang.String value109 = null;
/* 503 */     if (!isNull110) {
/* 504 */
/* 505 */       isNull109 = false;
/* 506 */       if (!isNull109) {
/* 507 */
/* 508 */         Object funcResult54 = null;
/* 509 */         funcResult54 = value110.toString();
/* 510 */         value109 = (java.lang.String) funcResult54;
/* 511 */
/* 512 */       }
/* 513 */     }
/* 514 */     if (isNull109) {
/* 515 */       values[54] = null;
/* 516 */     } else {
/* 517 */       values[54] = value109;
/* 518 */     }
/* 519 */
/* 520 */     boolean isNull112 = i.isNullAt(55);
/* 521 */     Decimal value112 = isNull112 ? null : (i.getDecimal(55, 38, 0));
/* 522 */     boolean isNull111 = true;
/* 523 */     java.math.BigDecimal value111 = null;
/* 524 */     if (!isNull112) {
/* 525 */
/* 526 */       isNull111 = false;
/* 527 */       if (!isNull111) {
/* 528 */
/* 529 */         Object funcResult55 = null;
/* 530 */         funcResult55 = value112.toJavaBigDecimal();
/* 531 */         value111 = (java.math.BigDecimal) funcResult55;
/* 532 */
/* 533 */       }
/* 534 */     }
/* 535 */     if (isNull111) {
/* 536 */       values[55] = null;
/* 537 */     } else {
/* 538 */       values[55] = value111;
/* 539 */     }
/* 540 */
/* 541 */   }
/* 542 */
/* 543 */
/* 544 */   private void apply_33(InternalRow i) {
/* 545 */
/* 546 */     boolean isNull134 = i.isNullAt(66);
/* 547 */     Decimal value134 = isNull134 ? null : (i.getDecimal(66, 38, 0));
/* 548 */     boolean isNull133 = true;
/* 549 */     java.math.BigDecimal value133 = null;
/* 550 */     if (!isNull134) {
/* 551 */
/* 552 */       isNull133 = false;
/* 553 */       if (!isNull133) {
/* 554 */
/* 555 */         Object funcResult66 = null;
/* 556 */         funcResult66 = value134.toJavaBigDecimal();
/* 557 */         value133 = (java.math.BigDecimal) funcResult66;
/* 558 */
/* 559 */       }
/* 560 */     }
/* 561 */     if (isNull133) {
/* 562 */       values[66] = null;
/* 563 */     } else {
/* 564 */       values[66] = value133;
/* 565 */     }
/* 566 */
/* 567 */     boolean isNull136 = i.isNullAt(67);
/* 568 */     UTF8String value136 = isNull136 ? null : (i.getUTF8String(67));
/* 569 */     boolean isNull135 = true;
/* 570 */     java.lang.String value135 = null;
/* 571 */     if (!isNull136) {
/* 572 */
/* 573 */       isNull135 = false;
/* 574 */       if (!isNull135) {
/* 575 */
/* 576 */         Object funcResult67 = null;
/* 577 */         funcResult67 = value136.toString();
/* 578 */         value135 = (java.lang.String) funcResult67;
/* 579 */
/* 580 */       }
/* 581 */     }
/* 582 */     if (isNull135) {
/* 583 */       values[67] = null;
/* 584 */     } else {
/* 585 */       values[67] = value135;
/* 586 */     }
/* 587 */
/* 588 */   }
/* 589 */
/* 590 */
/* 591 */   private void apply_12(InternalRow i) {
/* 592 */
/* 593 */     boolean isNull50 = i.isNullAt(24);
/* 594 */     UTF8String value50 = isNull50 ? null : (i.getUTF8String(24));
/* 595 */     boolean isNull49 = true;
/* 596 */     java.lang.String value49 = null;
/* 597 */     if (!isNull50) {
/* 598 */
/* 599 */       isNull49 = false;
/* 600 */       if (!isNull49) {
/* 601 */
/* 602 */         Object funcResult24 = null;
/* 603 */         funcResult24 = value50.toString();
/* 604 */         value49 = (java.lang.String) funcResult24;
/* 605 */
/* 606 */       }
/* 607 */     }
/* 608 */     if (isNull49) {
/* 609 */       values[24] = null;
/* 610 */     } else {
/* 611 */       values[24] = value49;
/* 612 */     }
/* 613 */
/* 614 */     boolean isNull52 = i.isNullAt(25);
/* 615 */     UTF8String value52 = isNull52 ? null : (i.getUTF8String(25));
/* 616 */     boolean isNull51 = true;
/* 617 */     java.lang.String value51 = null;
/* 618 */     if (!isNull52) {
/* 619 */
/* 620 */       isNull51 = false;
/* 621 */       if (!isNull51) {
/* 622 */
/* 623 */         Object funcResult25 = null;
/* 624 */         funcResult25 = value52.toString();
/* 625 */         value51 = (java.lang.String) funcResult25;
/* 626 */
/* 627 */       }
/* 628 */     }
/* 629 */     if (isNull51) {
/* 630 */       values[25] = null;
/* 631 */     } else {
/* 632 */       values[25] = value51;
/* 633 */     }
/* 634 */
/* 635 */   }
/* 636 */
/* 637 */
/* 638 */   private void apply_9(InternalRow i) {
/* 639 */
/* 640 */     boolean isNull38 = i.isNullAt(18);
/* 641 */     UTF8String value38 = isNull38 ? null : (i.getUTF8String(18));
/* 642 */     boolean isNull37 = true;
/* 643 */     java.lang.String value37 = null;
/* 644 */     if (!isNull38) {
/* 645 */
/* 646 */       isNull37 = false;
/* 647 */       if (!isNull37) {
/* 648 */
/* 649 */         Object funcResult18 = null;
/* 650 */         funcResult18 = value38.toString();
/* 651 */         value37 = (java.lang.String) funcResult18;
/* 652 */
/* 653 */       }
/* 654 */     }
/* 655 */     if (isNull37) {
/* 656 */       values[18] = null;
/* 657 */     } else {
/* 658 */       values[18] = value37;
/* 659 */     }
/* 660 */
/* 661 */     boolean isNull40 = i.isNullAt(19);
/* 662 */     Decimal value40 = isNull40 ? null : (i.getDecimal(19, 38, 0));
/* 663 */     boolean isNull39 = true;
/* 664 */     java.math.BigDecimal value39 = null;
/* 665 */     if (!isNull40) {
/* 666 */
/* 667 */       isNull39 = false;
/* 668 */       if (!isNull39) {
/* 669 */
/* 670 */         Object funcResult19 = null;
/* 671 */         funcResult19 = value40.toJavaBigDecimal();
/* 672 */         value39 = (java.math.BigDecimal) funcResult19;
/* 673 */
/* 674 */       }
/* 675 */     }
/* 676 */     if (isNull39) {
/* 677 */       values[19] = null;
/* 678 */     } else {
/* 679 */       values[19] = value39;
/* 680 */     }
/* 681 */
/* 682 */   }
/* 683 */
/* 684 */
/* 685 */   private void apply_15(InternalRow i) {
/* 686 */
/* 687 */     boolean isNull62 = i.isNullAt(30);
/* 688 */     Decimal value62 = isNull62 ? null : (i.getDecimal(30, 38, 0));
/* 689 */     boolean isNull61 = true;
/* 690 */     java.math.BigDecimal value61 = null;
/* 691 */     if (!isNull62) {
/* 692 */
/* 693 */       isNull61 = false;
/* 694 */       if (!isNull61) {
/* 695 */
/* 696 */         Object funcResult30 = null;
/* 697 */         funcResult30 = value62.toJavaBigDecimal();
/* 698 */         value61 = (java.math.BigDecimal) funcResult30;
/* 699 */
/* 700 */       }
/* 701 */     }
/* 702 */     if (isNull61) {
/* 703 */       values[30] = null;
/* 704 */     } else {
/* 705 */       values[30] = value61;
/* 706 */     }
/* 707 */
/* 708 */     boolean isNull64 = i.isNullAt(31);
/* 709 */     UTF8String value64 = isNull64 ? null : (i.getUTF8String(31));
/* 710 */     boolean isNull63 = true;
/* 711 */     java.lang.String value63 = null;
/* 712 */     if (!isNull64) {
/* 713 */
/* 714 */       isNull63 = false;
/* 715 */       if (!isNull63) {
/* 716 */
/* 717 */         Object funcResult31 = null;
/* 718 */         funcResult31 = value64.toString();
/* 719 */         value63 = (java.lang.String) funcResult31;
/* 720 */
/* 721 */       }
/* 722 */     }
/* 723 */     if (isNull63) {
/* 724 */       values[31] = null;
/* 725 */     } else {
/* 726 */       values[31] = value63;
/* 727 */     }
/* 728 */
/* 729 */   }
/* 730 */
/* 731 */
/* 732 */   private void apply_3(InternalRow i) {
/* 733 */
/* 734 */     boolean isNull14 = i.isNullAt(6);
/* 735 */     Decimal value14 = isNull14 ? null : (i.getDecimal(6, 38, 0));
/* 736 */     boolean isNull13 = true;
/* 737 */     java.math.BigDecimal value13 = null;
/* 738 */     if (!isNull14) {
/* 739 */
/* 740 */       isNull13 = false;
/* 741 */       if (!isNull13) {
/* 742 */
/* 743 */         Object funcResult6 = null;
/* 744 */         funcResult6 = value14.toJavaBigDecimal();
/* 745 */         value13 = (java.math.BigDecimal) funcResult6;
/* 746 */
/* 747 */       }
/* 748 */     }
/* 749 */     if (isNull13) {
/* 750 */       values[6] = null;
/* 751 */     } else {
/* 752 */       values[6] = value13;
/* 753 */     }
/* 754 */
/* 755 */     boolean isNull16 = i.isNullAt(7);
/* 756 */     UTF8String value16 = isNull16 ? null : (i.getUTF8String(7));
/* 757 */     boolean isNull15 = true;
/* 758 */     java.lang.String value15 = null;
/* 759 */     if (!isNull16) {
/* 760 */
/* 761 */       isNull15 = false;
/* 762 */       if (!isNull15) {
/* 763 */
/* 764 */         Object funcResult7 = null;
/* 765 */         funcResult7 = value16.toString();
/* 766 */         value15 = (java.lang.String) funcResult7;
/* 767 */
/* 768 */       }
/* 769 */     }
/* 770 */     if (isNull15) {
/* 771 */       values[7] = null;
/* 772 */     } else {
/* 773 */       values[7] = value15;
/* 774 */     }
/* 775 */
/* 776 */   }
/* 777 */
/* 778 */
/* 779 */   private void apply_6(InternalRow i) {
/* 780 */
/* 781 */     boolean isNull26 = i.isNullAt(12);
/* 782 */     Decimal value26 = isNull26 ? null : (i.getDecimal(12, 38, 0));
/* 783 */     boolean isNull25 = true;
/* 784 */     java.math.BigDecimal value25 = null;
/* 785 */     if (!isNull26) {
/* 786 */
/* 787 */       isNull25 = false;
/* 788 */       if (!isNull25) {
/* 789 */
/* 790 */         Object funcResult12 = null;
/* 791 */         funcResult12 = value26.toJavaBigDecimal();
/* 792 */         value25 = (java.math.BigDecimal) funcResult12;
/* 793 */
/* 794 */       }
/* 795 */     }
/* 796 */     if (isNull25) {
/* 797 */       values[12] = null;
/* 798 */     } else {
/* 799 */       values[12] = value25;
/* 800 */     }
/* 801 */
/* 802 */     boolean isNull28 = i.isNullAt(13);
/* 803 */     UTF8String value28 = isNull28 ? null : (i.getUTF8String(13));
/* 804 */     boolean isNull27 = true;
/* 805 */     java.lang.String value27 = null;
/* 806 */     if (!isNull28) {
/* 807 */
/* 808 */       isNull27 = false;
/* 809 */       if (!isNull27) {
/* 810 */
/* 811 */         Object funcResult13 = null;
/* 812 */         funcResult13 = value28.toString();
/* 813 */         value27 = (java.lang.String) funcResult13;
/* 814 */
/* 815 */       }
/* 816 */     }
/* 817 */     if (isNull27) {
/* 818 */       values[13] = null;
/* 819 */     } else {
/* 820 */       values[13] = value27;
/* 821 */     }
/* 822 */
/* 823 */   }
/* 824 */
/* 825 */
/* 826 */   private void apply_32(InternalRow i) {
/* 827 */
/* 828 */     boolean isNull130 = i.isNullAt(64);
/* 829 */     Decimal value130 = isNull130 ? null : (i.getDecimal(64, 38, 0));
/* 830 */     boolean isNull129 = true;
/* 831 */     java.math.BigDecimal value129 = null;
/* 832 */     if (!isNull130) {
/* 833 */
/* 834 */       isNull129 = false;
/* 835 */       if (!isNull129) {
/* 836 */
/* 837 */         Object funcResult64 = null;
/* 838 */         funcResult64 = value130.toJavaBigDecimal();
/* 839 */         value129 = (java.math.BigDecimal) funcResult64;
/* 840 */
/* 841 */       }
/* 842 */     }
/* 843 */     if (isNull129) {
/* 844 */       values[64] = null;
/* 845 */     } else {
/* 846 */       values[64] = value129;
/* 847 */     }
/* 848 */
/* 849 */     boolean isNull132 = i.isNullAt(65);
/* 850 */     Decimal value132 = isNull132 ? null : (i.getDecimal(65, 38, 0));
/* 851 */     boolean isNull131 = true;
/* 852 */     java.math.BigDecimal value131 = null;
/* 853 */     if (!isNull132) {
/* 854 */
/* 855 */       isNull131 = false;
/* 856 */       if (!isNull131) {
/* 857 */
/* 858 */         Object funcResult65 = null;
/* 859 */         funcResult65 = value132.toJavaBigDecimal();
/* 860 */         value131 = (java.math.BigDecimal) funcResult65;
/* 861 */
/* 862 */       }
/* 863 */     }
/* 864 */     if (isNull131) {
/* 865 */       values[65] = null;
/* 866 */     } else {
/* 867 */       values[65] = value131;
/* 868 */     }
/* 869 */
/* 870 */   }
/* 871 */
/* 872 */
/* 873 */   private void apply_26(InternalRow i) {
/* 874 */
/* 875 */     boolean isNull106 = i.isNullAt(52);
/* 876 */     UTF8String value106 = isNull106 ? null : (i.getUTF8String(52));
/* 877 */     boolean isNull105 = true;
/* 878 */     java.lang.String value105 = null;
/* 879 */     if (!isNull106) {
/* 880 */
/* 881 */       isNull105 = false;
/* 882 */       if (!isNull105) {
/* 883 */
/* 884 */         Object funcResult52 = null;
/* 885 */         funcResult52 = value106.toString();
/* 886 */         value105 = (java.lang.String) funcResult52;
/* 887 */
/* 888 */       }
/* 889 */     }
/* 890 */     if (isNull105) {
/* 891 */       values[52] = null;
/* 892 */     } else {
/* 893 */       values[52] = value105;
/* 894 */     }
/* 895 */
/* 896 */     boolean isNull108 = i.isNullAt(53);
/* 897 */     Decimal value108 = isNull108 ? null : (i.getDecimal(53, 38, 0));
/* 898 */     boolean isNull107 = true;
/* 899 */     java.math.BigDecimal value107 = null;
/* 900 */     if (!isNull108) {
/* 901 */
/* 902 */       isNull107 = false;
/* 903 */       if (!isNull107) {
/* 904 */
/* 905 */         Object funcResult53 = null;
/* 906 */         funcResult53 = value108.toJavaBigDecimal();
/* 907 */         value107 = (java.math.BigDecimal) funcResult53;
/* 908 */
/* 909 */       }
/* 910 */     }
/* 911 */     if (isNull107) {
/* 912 */       values[53] = null;
/* 913 */     } else {
/* 914 */       values[53] = value107;
/* 915 */     }
/* 916 */
/* 917 */   }
/* 918 */
/* 919 */
/* 920 */   private void apply_35(InternalRow i) {
/* 921 */
/* 922 */     boolean isNull142 = i.isNullAt(70);
/* 923 */     UTF8String value142 = isNull142 ? null : (i.getUTF8String(70));
/* 924 */     boolean isNull141 = true;
/* 925 */     java.lang.String value141 = null;
/* 926 */     if (!isNull142) {
/* 927 */
/* 928 */       isNull141 = false;
/* 929 */       if (!isNull141) {
/* 930 */
/* 931 */         Object funcResult70 = null;
/* 932 */         funcResult70 = value142.toString();
/* 933 */         value141 = (java.lang.String) funcResult70;
/* 934 */
/* 935 */       }
/* 936 */     }
/* 937 */     if (isNull141) {
/* 938 */       values[70] = null;
/* 939 */     } else {
/* 940 */       values[70] = value141;
/* 941 */     }
/* 942 */
/* 943 */     boolean isNull144 = i.isNullAt(71);
/* 944 */     UTF8String value144 = isNull144 ? null : (i.getUTF8String(71));
/* 945 */     boolean isNull143 = true;
/* 946 */     java.lang.String value143 = null;
/* 947 */     if (!isNull144) {
/* 948 */
/* 949 */       isNull143 = false;
/* 950 */       if (!isNull143) {
/* 951 */
/* 952 */         Object funcResult71 = null;
/* 953 */         funcResult71 = value144.toString();
/* 954 */         value143 = (java.lang.String) funcResult71;
/* 955 */
/* 956 */       }
/* 957 */     }
/* 958 */     if (isNull143) {
/* 959 */       values[71] = null;
/* 960 */     } else {
/* 961 */       values[71] = value143;
/* 962 */     }
/* 963 */
/* 964 */   }
/* 965 */
/* 966 */
/* 967 */   private void apply_29(InternalRow i) {
/* 968 */
/* 969 */     boolean isNull118 = i.isNullAt(58);
/* 970 */     Decimal value118 = isNull118 ? null : (i.getDecimal(58, 38, 0));
/* 971 */     boolean isNull117 = true;
/* 972 */     java.math.BigDecimal value117 = null;
/* 973 */     if (!isNull118) {
/* 974 */
/* 975 */       isNull117 = false;
/* 976 */       if (!isNull117) {
/* 977 */
/* 978 */         Object funcResult58 = null;
/* 979 */         funcResult58 = value118.toJavaBigDecimal();
/* 980 */         value117 = (java.math.BigDecimal) funcResult58;
/* 981 */
/* 982 */       }
/* 983 */     }
/* 984 */     if (isNull117) {
/* 985 */       values[58] = null;
/* 986 */     } else {
/* 987 */       values[58] = value117;
/* 988 */     }
/* 989 */
/* 990 */     boolean isNull120 = i.isNullAt(59);
/* 991 */     Decimal value120 = isNull120 ? null : (i.getDecimal(59, 38, 0));
/* 992 */     boolean isNull119 = true;
/* 993 */     java.math.BigDecimal value119 = null;
/* 994 */     if (!isNull120) {
/* 995 */
/* 996 */       isNull119 = false;
/* 997 */       if (!isNull119) {
/* 998 */
/* 999 */         Object funcResult59 = null;
/* 1000 */         funcResult59 = value120.toJavaBigDecimal();
/* 1001 */         value119 = (java.math.BigDecimal) funcResult59;
/* 1002 */
/* 1003 */       }
/* 1004 */     }
/* 1005 */     if (isNull119) {
/* 1006 */       values[59] = null;
/* 1007 */     } else {
/* 1008 */       values[59] = value119;
/* 1009 */     }
/* 1010 */
/* 1011 */   }
/* 1012 */
/* 1013 */
/* 1014 */   private void apply_14(InternalRow i) {
/* 1015 */
/* 1016 */     boolean isNull58 = i.isNullAt(28);
/* 1017 */     Decimal value58 = isNull58 ? null : (i.getDecimal(28, 38, 0));
/* 1018 */     boolean isNull57 = true;
/* 1019 */     java.math.BigDecimal value57 = null;
/* 1020 */     if (!isNull58) {
/* 1021 */
/* 1022 */       isNull57 = false;
/* 1023 */       if (!isNull57) {
/* 1024 */
/* 1025 */         Object funcResult28 = null;
/* 1026 */         funcResult28 = value58.toJavaBigDecimal();
/* 1027 */         value57 = (java.math.BigDecimal) funcResult28;
/* 1028 */
/* 1029 */       }
/* 1030 */     }
/* 1031 */     if (isNull57) {
/* 1032 */       values[28] = null;
/* 1033 */     } else {
/* 1034 */       values[28] = value57;
/* 1035 */     }
/* 1036 */
/* 1037 */     boolean isNull60 = i.isNullAt(29);
/* 1038 */     Decimal value60 = isNull60 ? null : (i.getDecimal(29, 38, 0));
/* 1039 */     boolean isNull59 = true;
/* 1040 */     java.math.BigDecimal value59 = null;
/* 1041 */     if (!isNull60) {
/* 1042 */
/* 1043 */       isNull59 = false;
/* 1044 */       if (!isNull59) {
/* 1045 */
/* 1046 */         Object funcResult29 = null;
/* 1047 */         funcResult29 = value60.toJavaBigDecimal();
/* 1048 */         value59 = (java.math.BigDecimal) funcResult29;
/* 1049 */
/* 1050 */       }
/* 1051 */     }
/* 1052 */     if (isNull59) {
/* 1053 */       values[29] = null;
/* 1054 */     } else {
/* 1055 */       values[29] = value59;
/* 1056 */     }
/* 1057 */
/* 1058 */   }
/* 1059 */
/* 1060 */
/* 1061 */   private void apply_0(InternalRow i) {
/* 1062 */
/* 1063 */     boolean isNull2 = i.isNullAt(0);
/* 1064 */     Decimal value2 = isNull2 ? null : (i.getDecimal(0, 38, 0));
/* 1065 */     boolean isNull1 = true;
/* 1066 */     java.math.BigDecimal value1 = null;
/* 1067 */     if (!isNull2) {
/* 1068 */
/* 1069 */       isNull1 = false;
/* 1070 */       if (!isNull1) {
/* 1071 */
/* 1072 */         Object funcResult = null;
/* 1073 */         funcResult = value2.toJavaBigDecimal();
/* 1074 */         value1 = (java.math.BigDecimal) funcResult;
/* 1075 */
/* 1076 */       }
/* 1077 */     }
/* 1078 */     if (isNull1) {
/* 1079 */       values[0] = null;
/* 1080 */     } else {
/* 1081 */       values[0] = value1;
/* 1082 */     }
/* 1083 */
/* 1084 */     boolean isNull4 = i.isNullAt(1);
/* 1085 */     UTF8String value4 = isNull4 ? null : (i.getUTF8String(1));
/* 1086 */     boolean isNull3 = true;
/* 1087 */     java.lang.String value3 = null;
/* 1088 */     if (!isNull4) {
/* 1089 */
/* 1090 */       isNull3 = false;
/* 1091 */       if (!isNull3) {
/* 1092 */
/* 1093 */         Object funcResult1 = null;
/* 1094 */         funcResult1 = value4.toString();
/* 1095 */         value3 = (java.lang.String) funcResult1;
/* 1096 */
/* 1097 */       }
/* 1098 */     }
/* 1099 */     if (isNull3) {
/* 1100 */       values[1] = null;
/* 1101 */     } else {
/* 1102 */       values[1] = value3;
/* 1103 */     }
/* 1104 */
/* 1105 */   }
/* 1106 */
/* 1107 */
/* 1108 */   private void apply_20(InternalRow i) {
/* 1109 */
/* 1110 */     boolean isNull82 = i.isNullAt(40);
/* 1111 */     Decimal value82 = isNull82 ? null : (i.getDecimal(40, 38, 0));
/* 1112 */     boolean isNull81 = true;
/* 1113 */     java.math.BigDecimal value81 = null;
/* 1114 */     if (!isNull82) {
/* 1115 */
/* 1116 */       isNull81 = false;
/* 1117 */       if (!isNull81) {
/* 1118 */
/* 1119 */         Object funcResult40 = null;
/* 1120 */         funcResult40 = value82.toJavaBigDecimal();
/* 1121 */         value81 = (java.math.BigDecimal) funcResult40;
/* 1122 */
/* 1123 */       }
/* 1124 */     }
/* 1125 */     if (isNull81) {
/* 1126 */       values[40] = null;
/* 1127 */     } else {
/* 1128 */       values[40] = value81;
/* 1129 */     }
/* 1130 */
/* 1131 */     boolean isNull84 = i.isNullAt(41);
/* 1132 */     Decimal value84 = isNull84 ? null : (i.getDecimal(41, 38, 0));
/* 1133 */     boolean isNull83 = true;
/* 1134 */     java.math.BigDecimal value83 = null;
/* 1135 */     if (!isNull84) {
/* 1136 */
/* 1137 */       isNull83 = false;
/* 1138 */       if (!isNull83) {
/* 1139 */
/* 1140 */         Object funcResult41 = null;
/* 1141 */         funcResult41 = value84.toJavaBigDecimal();
/* 1142 */         value83 = (java.math.BigDecimal) funcResult41;
/* 1143 */
/* 1144 */       }
/* 1145 */     }
/* 1146 */     if (isNull83) {
/* 1147 */       values[41] = null;
/* 1148 */     } else {
/* 1149 */       values[41] = value83;
/* 1150 */     }
/* 1151 */
/* 1152 */   }
/* 1153 */
/* 1154 */
/* 1155 */   private void apply_23(InternalRow i) {
/* 1156 */
/* 1157 */     boolean isNull94 = i.isNullAt(46);
/* 1158 */     Decimal value94 = isNull94 ? null : (i.getDecimal(46, 38, 0));
/* 1159 */     boolean isNull93 = true;
/* 1160 */     java.math.BigDecimal value93 = null;
/* 1161 */     if (!isNull94) {
/* 1162 */
/* 1163 */       isNull93 = false;
/* 1164 */       if (!isNull93) {
/* 1165 */
/* 1166 */         Object funcResult46 = null;
/* 1167 */         funcResult46 = value94.toJavaBigDecimal();
/* 1168 */         value93 = (java.math.BigDecimal) funcResult46;
/* 1169 */
/* 1170 */       }
/* 1171 */     }
/* 1172 */     if (isNull93) {
/* 1173 */       values[46] = null;
/* 1174 */     } else {
/* 1175 */       values[46] = value93;
/* 1176 */     }
/* 1177 */
/* 1178 */     boolean isNull96 = i.isNullAt(47);
/* 1179 */     Decimal value96 = isNull96 ? null : (i.getDecimal(47, 38, 0));
/* 1180 */     boolean isNull95 = true;
/* 1181 */     java.math.BigDecimal value95 = null;
/* 1182 */     if (!isNull96) {
/* 1183 */
/* 1184 */       isNull95 = false;
/* 1185 */       if (!isNull95) {
/* 1186 */
/* 1187 */         Object funcResult47 = null;
/* 1188 */         funcResult47 = value96.toJavaBigDecimal();
/* 1189 */         value95 = (java.math.BigDecimal) funcResult47;
/* 1190 */
/* 1191 */       }
/* 1192 */     }
/* 1193 */     if (isNull95) {
/* 1194 */       values[47] = null;
/* 1195 */     } else {
/* 1196 */       values[47] = value95;
/* 1197 */     }
/* 1198 */
/* 1199 */   }
/* 1200 */
/* 1201 */
/* 1202 */   private void apply_17(InternalRow i) {
/* 1203 */
/* 1204 */     boolean isNull70 = i.isNullAt(34);
/* 1205 */     UTF8String value70 = isNull70 ? null : (i.getUTF8String(34));
/* 1206 */     boolean isNull69 = true;
/* 1207 */     java.lang.String value69 = null;
/* 1208 */     if (!isNull70) {
/* 1209 */
/* 1210 */       isNull69 = false;
/* 1211 */       if (!isNull69) {
/* 1212 */
/* 1213 */         Object funcResult34 = null;
/* 1214 */         funcResult34 = value70.toString();
/* 1215 */         value69 = (java.lang.String) funcResult34;
/* 1216 */
/* 1217 */       }
/* 1218 */     }
/* 1219 */     if (isNull69) {
/* 1220 */       values[34] = null;
/* 1221 */     } else {
/* 1222 */       values[34] = value69;
/* 1223 */     }
/* 1224 */
/* 1225 */     boolean isNull72 = i.isNullAt(35);
/* 1226 */     Decimal value72 = isNull72 ? null : (i.getDecimal(35, 38, 0));
/* 1227 */     boolean isNull71 = true;
/* 1228 */     java.math.BigDecimal value71 = null;
/* 1229 */     if (!isNull72) {
/* 1230 */
/* 1231 */       isNull71 = false;
/* 1232 */       if (!isNull71) {
/* 1233 */
/* 1234 */         Object funcResult35 = null;
/* 1235 */         funcResult35 = value72.toJavaBigDecimal();
/* 1236 */         value71 = (java.math.BigDecimal) funcResult35;
/* 1237 */
/* 1238 */       }
/* 1239 */     }
/* 1240 */     if (isNull71) {
/* 1241 */       values[35] = null;
/* 1242 */     } else {
/* 1243 */       values[35] = value71;
/* 1244 */     }
/* 1245 */
/* 1246 */   }
/* 1247 */
/* 1248 */
/* 1249 */   private void apply_11(InternalRow i) {
/* 1250 */
/* 1251 */     boolean isNull46 = i.isNullAt(22);
/* 1252 */     Decimal value46 = isNull46 ? null : (i.getDecimal(22, 38, 0));
/* 1253 */     boolean isNull45 = true;
/* 1254 */     java.math.BigDecimal value45 = null;
/* 1255 */     if (!isNull46) {
/* 1256 */
/* 1257 */       isNull45 = false;
/* 1258 */       if (!isNull45) {
/* 1259 */
/* 1260 */         Object funcResult22 = null;
/* 1261 */         funcResult22 = value46.toJavaBigDecimal();
/* 1262 */         value45 = (java.math.BigDecimal) funcResult22;
/* 1263 */
/* 1264 */       }
/* 1265 */     }
/* 1266 */     if (isNull45) {
/* 1267 */       values[22] = null;
/* 1268 */     } else {
/* 1269 */       values[22] = value45;
/* 1270 */     }
/* 1271 */
/* 1272 */     boolean isNull48 = i.isNullAt(23);
/* 1273 */     Decimal value48 = isNull48 ? null : (i.getDecimal(23, 38, 0));
/* 1274 */     boolean isNull47 = true;
/* 1275 */     java.math.BigDecimal value47 = null;
/* 1276 */     if (!isNull48) {
/* 1277 */
/* 1278 */       isNull47 = false;
/* 1279 */       if (!isNull47) {
/* 1280 */
/* 1281 */         Object funcResult23 = null;
/* 1282 */         funcResult23 = value48.toJavaBigDecimal();
/* 1283 */         value47 = (java.math.BigDecimal) funcResult23;
/* 1284 */
/* 1285 */       }
/* 1286 */     }
/* 1287 */     if (isNull47) {
/* 1288 */       values[23] = null;
/* 1289 */     } else {
/* 1290 */       values[23] = value47;
/* 1291 */     }
/* 1292 */
/* 1293 */   }
/* 1294 */
/* 1295 */
/* 1296 */   private void apply_8(InternalRow i) {
/* 1297 */
/* 1298 */     boolean isNull34 = i.isNullAt(16);
/* 1299 */     UTF8String value34 = isNull34 ? null : (i.getUTF8String(16));
/* 1300 */     boolean isNull33 = true;
/* 1301 */     java.lang.String value33 = null;
/* 1302 */     if (!isNull34) {
/* 1303 */
/* 1304 */       isNull33 = false;
/* 1305 */       if (!isNull33) {
/* 1306 */
/* 1307 */         Object funcResult16 = null;
/* 1308 */         funcResult16 = value34.toString();
/* 1309 */         value33 = (java.lang.String) funcResult16;
/* 1310 */
/* 1311 */       }
/* 1312 */     }
/* 1313 */     if (isNull33) {
/* 1314 */       values[16] = null;
/* 1315 */     } else {
/* 1316 */       values[16] = value33;
/* 1317 */     }
/* 1318 */
/* 1319 */     boolean isNull36 = i.isNullAt(17);
/* 1320 */     Decimal value36 = isNull36 ? null : (i.getDecimal(17, 38, 0));
/* 1321 */     boolean isNull35 = true;
/* 1322 */     java.math.BigDecimal value35 = null;
/* 1323 */     if (!isNull36) {
/* 1324 */
/* 1325 */       isNull35 = false;
/* 1326 */       if (!isNull35) {
/* 1327 */
/* 1328 */         Object funcResult17 = null;
/* 1329 */         funcResult17 = value36.toJavaBigDecimal();
/* 1330 */         value35 = (java.math.BigDecimal) funcResult17;
/* 1331 */
/* 1332 */       }
/* 1333 */     }
/* 1334 */     if (isNull35) {
/* 1335 */       values[17] = null;
/* 1336 */     } else {
/* 1337 */       values[17] = value35;
/* 1338 */     }
/* 1339 */
/* 1340 */   }
/* 1341 */
/* 1342 */
/* 1343 */   private void apply_2(InternalRow i) {
/* 1344 */
/* 1345 */     boolean isNull10 = i.isNullAt(4);
/* 1346 */     Decimal value10 = isNull10 ? null : (i.getDecimal(4, 38, 0));
/* 1347 */     boolean isNull9 = true;
/* 1348 */     java.math.BigDecimal value9 = null;
/* 1349 */     if (!isNull10) {
/* 1350 */
/* 1351 */       isNull9 = false;
/* 1352 */       if (!isNull9) {
/* 1353 */
/* 1354 */         Object funcResult4 = null;
/* 1355 */         funcResult4 = value10.toJavaBigDecimal();
/* 1356 */         value9 = (java.math.BigDecimal) funcResult4;
/* 1357 */
/* 1358 */       }
/* 1359 */     }
/* 1360 */     if (isNull9) {
/* 1361 */       values[4] = null;
/* 1362 */     } else {
/* 1363 */       values[4] = value9;
/* 1364 */     }
/* 1365 */
/* 1366 */     boolean isNull12 = i.isNullAt(5);
/* 1367 */     Decimal value12 = isNull12 ? null : (i.getDecimal(5, 38, 0));
/* 1368 */     boolean isNull11 = true;
/* 1369 */     java.math.BigDecimal value11 = null;
/* 1370 */     if (!isNull12) {
/* 1371 */
/* 1372 */       isNull11 = false;
/* 1373 */       if (!isNull11) {
/* 1374 */
/* 1375 */         Object funcResult5 = null;
/* 1376 */         funcResult5 = value12.toJavaBigDecimal();
/* 1377 */         value11 = (java.math.BigDecimal) funcResult5;
/* 1378 */
/* 1379 */       }
/* 1380 */     }
/* 1381 */     if (isNull11) {
/* 1382 */       values[5] = null;
/* 1383 */     } else {
/* 1384 */       values[5] = value11;
/* 1385 */     }
/* 1386 */
/* 1387 */   }
/* 1388 */
/* 1389 */
/* 1390 */   private void apply_37(InternalRow i) {
/* 1391 */
/* 1392 */     boolean isNull150 = i.isNullAt(74);
/* 1393 */     UTF8String value150 = isNull150 ? null : (i.getUTF8String(74));
/* 1394 */     boolean isNull149 = true;
/* 1395 */     java.lang.String value149 = null;
/* 1396 */     if (!isNull150) {
/* 1397 */
/* 1398 */       isNull149 = false;
/* 1399 */       if (!isNull149) {
/* 1400 */
/* 1401 */         Object funcResult72 = null;
/* 1402 */         funcResult72 = value150.toString();
/* 1403 */         value149 = (java.lang.String) funcResult72;
/* 1404 */
/* 1405 */       }
/* 1406 */     }
/* 1407 */     if (isNull149) {
/* 1408 */       values[74] = null;
/* 1409 */     } else {
/* 1410 */       values[74] = value149;
/* 1411 */     }
/* 1412 */
/* 1413 */     boolean isNull152 = i.isNullAt(75);
/* 1414 */     UTF8String value152 = isNull152 ? null : (i.getUTF8String(75));
/* 1415 */     boolean isNull151 = true;
/* 1416 */     java.lang.String value151 = null;
/* 1417 */     if (!isNull152) {
/* 1418 */
/* 1419 */       isNull151 = false;
/* 1420 */       if (!isNull151) {
/* 1421 */
/* 1422 */         Object funcResult73 = null;
/* 1423 */         funcResult73 = value152.toString();
/* 1424 */         value151 = (java.lang.String) funcResult73;
/* 1425 */
/* 1426 */       }
/* 1427 */     }
/* 1428 */     if (isNull151) {
/* 1429 */       values[75] = null;
/* 1430 */     } else {
/* 1431 */       values[75] = value151;
/* 1432 */     }
/* 1433 */
/* 1434 */   }
/* 1435 */
/* 1436 */
/* 1437 */   private void apply_31(InternalRow i) {
/* 1438 */
/* 1439 */     boolean isNull126 = i.isNullAt(62);
/* 1440 */     UTF8String value126 = isNull126 ? null : (i.getUTF8String(62));
/* 1441 */     boolean isNull125 = true;
/* 1442 */     java.lang.String value125 = null;
/* 1443 */     if (!isNull126) {
/* 1444 */
/* 1445 */       isNull125 = false;
/* 1446 */       if (!isNull125) {
/* 1447 */
/* 1448 */         Object funcResult62 = null;
/* 1449 */         funcResult62 = value126.toString();
/* 1450 */         value125 = (java.lang.String) funcResult62;
/* 1451 */
/* 1452 */       }
/* 1453 */     }
/* 1454 */     if (isNull125) {
/* 1455 */       values[62] = null;
/* 1456 */     } else {
/* 1457 */       values[62] = value125;
/* 1458 */     }
/* 1459 */
/* 1460 */     boolean isNull128 = i.isNullAt(63);
/* 1461 */     UTF8String value128 = isNull128 ? null : (i.getUTF8String(63));
/* 1462 */     boolean isNull127 = true;
/* 1463 */     java.lang.String value127 = null;
/* 1464 */     if (!isNull128) {
/* 1465 */
/* 1466 */       isNull127 = false;
/* 1467 */       if (!isNull127) {
/* 1468 */
/* 1469 */         Object funcResult63 = null;
/* 1470 */         funcResult63 = value128.toString();
/* 1471 */         value127 = (java.lang.String) funcResult63;
/* 1472 */
/* 1473 */       }
/* 1474 */     }
/* 1475 */     if (isNull127) {
/* 1476 */       values[63] = null;
/* 1477 */     } else {
/* 1478 */       values[63] = value127;
/* 1479 */     }
/* 1480 */
/* 1481 */   }
/* 1482 */
/* 1483 */
/* 1484 */   private void apply_5(InternalRow i) {
/* 1485 */
/* 1486 */     boolean isNull22 = i.isNullAt(10);
/* 1487 */     Decimal value22 = isNull22 ? null : (i.getDecimal(10, 38, 0));
/* 1488 */     boolean isNull21 = true;
/* 1489 */     java.math.BigDecimal value21 = null;
/* 1490 */     if (!isNull22) {
/* 1491 */
/* 1492 */       isNull21 = false;
/* 1493 */       if (!isNull21) {
/* 1494 */
/* 1495 */         Object funcResult10 = null;
/* 1496 */         funcResult10 = value22.toJavaBigDecimal();
/* 1497 */         value21 = (java.math.BigDecimal) funcResult10;
/* 1498 */
/* 1499 */       }
/* 1500 */     }
/* 1501 */     if (isNull21) {
/* 1502 */       values[10] = null;
/* 1503 */     } else {
/* 1504 */       values[10] = value21;
/* 1505 */     }
/* 1506 */
/* 1507 */     boolean isNull24 = i.isNullAt(11);
/* 1508 */     Decimal value24 = isNull24 ? null : (i.getDecimal(11, 38, 0));
/* 1509 */     boolean isNull23 = true;
/* 1510 */     java.math.BigDecimal value23 = null;
/* 1511 */     if (!isNull24) {
/* 1512 */
/* 1513 */       isNull23 = false;
/* 1514 */       if (!isNull23) {
/* 1515 */
/* 1516 */         Object funcResult11 = null;
/* 1517 */         funcResult11 = value24.toJavaBigDecimal();
/* 1518 */         value23 = (java.math.BigDecimal) funcResult11;
/* 1519 */
/* 1520 */       }
/* 1521 */     }
/* 1522 */     if (isNull23) {
/* 1523 */       values[11] = null;
/* 1524 */     } else {
/* 1525 */       values[11] = value23;
/* 1526 */     }
/* 1527 */
/* 1528 */   }
/* 1529 */
/* 1530 */
/* 1531 */   private void apply_25(InternalRow i) {
/* 1532 */
/* 1533 */     boolean isNull102 = i.isNullAt(50);
/* 1534 */     UTF8String value102 = isNull102 ? null : (i.getUTF8String(50));
/* 1535 */     boolean isNull101 = true;
/* 1536 */     java.lang.String value101 = null;
/* 1537 */     if (!isNull102) {
/* 1538 */
/* 1539 */       isNull101 = false;
/* 1540 */       if (!isNull101) {
/* 1541 */
/* 1542 */         Object funcResult50 = null;
/* 1543 */         funcResult50 = value102.toString();
/* 1544 */         value101 = (java.lang.String) funcResult50;
/* 1545 */
/* 1546 */       }
/* 1547 */     }
/* 1548 */     if (isNull101) {
/* 1549 */       values[50] = null;
/* 1550 */     } else {
/* 1551 */       values[50] = value101;
/* 1552 */     }
/* 1553 */
/* 1554 */     boolean isNull104 = i.isNullAt(51);
/* 1555 */     UTF8String value104 = isNull104 ? null : (i.getUTF8String(51));
/* 1556 */     boolean isNull103 = true;
/* 1557 */     java.lang.String value103 = null;
/* 1558 */     if (!isNull104) {
/* 1559 */
/* 1560 */       isNull103 = false;
/* 1561 */       if (!isNull103) {
/* 1562 */
/* 1563 */         Object funcResult51 = null;
/* 1564 */         funcResult51 = value104.toString();
/* 1565 */         value103 = (java.lang.String) funcResult51;
/* 1566 */
/* 1567 */       }
/* 1568 */     }
/* 1569 */     if (isNull103) {
/* 1570 */       values[51] = null;
/* 1571 */     } else {
/* 1572 */       values[51] = value103;
/* 1573 */     }
/* 1574 */
/* 1575 */   }
/* 1576 */
/* 1577 */
/* 1578 */   private void apply_10(InternalRow i) {
/* 1579 */
/* 1580 */     boolean isNull42 = i.isNullAt(20);
/* 1581 */     Decimal value42 = isNull42 ? null : (i.getDecimal(20, 38, 0));
/* 1582 */     boolean isNull41 = true;
/* 1583 */     java.math.BigDecimal value41 = null;
/* 1584 */     if (!isNull42) {
/* 1585 */
/* 1586 */       isNull41 = false;
/* 1587 */       if (!isNull41) {
/* 1588 */
/* 1589 */         Object funcResult20 = null;
/* 1590 */         funcResult20 = value42.toJavaBigDecimal();
/* 1591 */         value41 = (java.math.BigDecimal) funcResult20;
/* 1592 */
/* 1593 */       }
/* 1594 */     }
/* 1595 */     if (isNull41) {
/* 1596 */       values[20] = null;
/* 1597 */     } else {
/* 1598 */       values[20] = value41;
/* 1599 */     }
/* 1600 */
/* 1601 */     boolean isNull44 = i.isNullAt(21);
/* 1602 */     Decimal value44 = isNull44 ? null : (i.getDecimal(21, 38, 0));
/* 1603 */     boolean isNull43 = true;
/* 1604 */     java.math.BigDecimal value43 = null;
/* 1605 */     if (!isNull44) {
/* 1606 */
/* 1607 */       isNull43 = false;
/* 1608 */       if (!isNull43) {
/* 1609 */
/* 1610 */         Object funcResult21 = null;
/* 1611 */         funcResult21 = value44.toJavaBigDecimal();
/* 1612 */         value43 = (java.math.BigDecimal) funcResult21;
/* 1613 */
/* 1614 */       }
/* 1615 */     }
/* 1616 */     if (isNull43) {
/* 1617 */       values[21] = null;
/* 1618 */     } else {
/* 1619 */       values[21] = value43;
/* 1620 */     }
/* 1621 */
/* 1622 */   }
/* 1623 */
/* 1624 */
/* 1625 */   private void apply_19(InternalRow i) {
/* 1626 */
/* 1627 */     boolean isNull78 = i.isNullAt(38);
/* 1628 */     Decimal value78 = isNull78 ? null : (i.getDecimal(38, 38, 0));
/* 1629 */     boolean isNull77 = true;
/* 1630 */     java.math.BigDecimal value77 = null;
/* 1631 */     if (!isNull78) {
/* 1632 */
/* 1633 */       isNull77 = false;
/* 1634 */       if (!isNull77) {
/* 1635 */
/* 1636 */         Object funcResult38 = null;
/* 1637 */         funcResult38 = value78.toJavaBigDecimal();
/* 1638 */         value77 = (java.math.BigDecimal) funcResult38;
/* 1639 */
/* 1640 */       }
/* 1641 */     }
/* 1642 */     if (isNull77) {
/* 1643 */       values[38] = null;
/* 1644 */     } else {
/* 1645 */       values[38] = value77;
/* 1646 */     }
/* 1647 */
/* 1648 */     boolean isNull80 = i.isNullAt(39);
/* 1649 */     Decimal value80 = isNull80 ? null : (i.getDecimal(39, 38, 0));
/* 1650 */     boolean isNull79 = true;
/* 1651 */     java.math.BigDecimal value79 = null;
/* 1652 */     if (!isNull80) {
/* 1653 */
/* 1654 */       isNull79 = false;
/* 1655 */       if (!isNull79) {
/* 1656 */
/* 1657 */         Object funcResult39 = null;
/* 1658 */         funcResult39 = value80.toJavaBigDecimal();
/* 1659 */         value79 = (java.math.BigDecimal) funcResult39;
/* 1660 */
/* 1661 */       }
/* 1662 */     }
/* 1663 */     if (isNull79) {
/* 1664 */       values[39] = null;
/* 1665 */     } else {
/* 1666 */       values[39] = value79;
/* 1667 */     }
/* 1668 */
/* 1669 */   }
/* 1670 */
/* 1671 */
/* 1672 */   private void apply_13(InternalRow i) {
/* 1673 */
/* 1674 */     boolean isNull54 = i.isNullAt(26);
/* 1675 */     UTF8String value54 = isNull54 ? null : (i.getUTF8String(26));
/* 1676 */     boolean isNull53 = true;
/* 1677 */     java.lang.String value53 = null;
/* 1678 */     if (!isNull54) {
/* 1679 */
/* 1680 */       isNull53 = false;
/* 1681 */       if (!isNull53) {
/* 1682 */
/* 1683 */         Object funcResult26 = null;
/* 1684 */         funcResult26 = value54.toString();
/* 1685 */         value53 = (java.lang.String) funcResult26;
/* 1686 */
/* 1687 */       }
/* 1688 */     }
/* 1689 */     if (isNull53) {
/* 1690 */       values[26] = null;
/* 1691 */     } else {
/* 1692 */       values[26] = value53;
/* 1693 */     }
/* 1694 */
/* 1695 */     boolean isNull56 = i.isNullAt(27);
/* 1696 */     UTF8String value56 = isNull56 ? null : (i.getUTF8String(27));
/* 1697 */     boolean isNull55 = true;
/* 1698 */     java.lang.String value55 = null;
/* 1699 */     if (!isNull56) {
/* 1700 */
/* 1701 */       isNull55 = false;
/* 1702 */       if (!isNull55) {
/* 1703 */
/* 1704 */         Object funcResult27 = null;
/* 1705 */         funcResult27 = value56.toString();
/* 1706 */         value55 = (java.lang.String) funcResult27;
/* 1707 */
/* 1708 */       }
/* 1709 */     }
/* 1710 */     if (isNull55) {
/* 1711 */       values[27] = null;
/* 1712 */     } else {
/* 1713 */       values[27] = value55;
/* 1714 */     }
/* 1715 */
/* 1716 */   }
/* 1717 */
/* 1718 */
/* 1719 */   private void apply_34(InternalRow i) {
/* 1720 */
/* 1721 */     boolean isNull138 = i.isNullAt(68);
/* 1722 */     UTF8String value138 = isNull138 ? null : (i.getUTF8String(68));
/* 1723 */     boolean isNull137 = true;
/* 1724 */     java.lang.String value137 = null;
/* 1725 */     if (!isNull138) {
/* 1726 */
/* 1727 */       isNull137 = false;
/* 1728 */       if (!isNull137) {
/* 1729 */
/* 1730 */         Object funcResult68 = null;
/* 1731 */         funcResult68 = value138.toString();
/* 1732 */         value137 = (java.lang.String) funcResult68;
/* 1733 */
/* 1734 */       }
/* 1735 */     }
/* 1736 */     if (isNull137) {
/* 1737 */       values[68] = null;
/* 1738 */     } else {
/* 1739 */       values[68] = value137;
/* 1740 */     }
/* 1741 */
/* 1742 */     boolean isNull140 = i.isNullAt(69);
/* 1743 */     UTF8String value140 = isNull140 ? null : (i.getUTF8String(69));
/* 1744 */     boolean isNull139 = true;
/* 1745 */     java.lang.String value139 = null;
/* 1746 */     if (!isNull140) {
/* 1747 */
/* 1748 */       isNull139 = false;
/* 1749 */       if (!isNull139) {
/* 1750 */
/* 1751 */         Object funcResult69 = null;
/* 1752 */         funcResult69 = value140.toString();
/* 1753 */         value139 = (java.lang.String) funcResult69;
/* 1754 */
/* 1755 */       }
/* 1756 */     }
/* 1757 */     if (isNull139) {
/* 1758 */       values[69] = null;
/* 1759 */     } else {
/* 1760 */       values[69] = value139;
/* 1761 */     }
/* 1762 */
/* 1763 */   }
/* 1764 */
/* 1765 */
/* 1766 */   private void apply_28(InternalRow i) {
/* 1767 */
/* 1768 */     boolean isNull114 = i.isNullAt(56);
/* 1769 */     Decimal value114 = isNull114 ? null : (i.getDecimal(56, 38, 0));
/* 1770 */     boolean isNull113 = true;
/* 1771 */     java.math.BigDecimal value113 = null;
/* 1772 */     if (!isNull114) {
/* 1773 */
/* 1774 */       isNull113 = false;
/* 1775 */       if (!isNull113) {
/* 1776 */
/* 1777 */         Object funcResult56 = null;
/* 1778 */         funcResult56 = value114.toJavaBigDecimal();
/* 1779 */         value113 = (java.math.BigDecimal) funcResult56;
/* 1780 */
/* 1781 */       }
/* 1782 */     }
/* 1783 */     if (isNull113) {
/* 1784 */       values[56] = null;
/* 1785 */     } else {
/* 1786 */       values[56] = value113;
/* 1787 */     }
/* 1788 */
/* 1789 */     boolean isNull116 = i.isNullAt(57);
/* 1790 */     Decimal value116 = isNull116 ? null : (i.getDecimal(57, 38, 0));
/* 1791 */     boolean isNull115 = true;
/* 1792 */     java.math.BigDecimal value115 = null;
/* 1793 */     if (!isNull116) {
/* 1794 */
/* 1795 */       isNull115 = false;
/* 1796 */       if (!isNull115) {
/* 1797 */
/* 1798 */         Object funcResult57 = null;
/* 1799 */         funcResult57 = value116.toJavaBigDecimal();
/* 1800 */         value115 = (java.math.BigDecimal) funcResult57;
/* 1801 */
/* 1802 */       }
/* 1803 */     }
/* 1804 */     if (isNull115) {
/* 1805 */       values[57] = null;
/* 1806 */     } else {
/* 1807 */       values[57] = value115;
/* 1808 */     }
/* 1809 */
/* 1810 */   }
/* 1811 */
/* 1812 */
/* 1813 */   public java.lang.Object apply(java.lang.Object _i) {
/* 1814 */     InternalRow i = (InternalRow) _i;
/* 1815 */
/* 1816 */     values = new Object[76];
/* 1817 */     apply_0(i);
/* 1818 */     apply_1(i);
/* 1819 */     apply_2(i);
/* 1820 */     apply_3(i);
/* 1821 */     apply_4(i);
/* 1822 */     apply_5(i);
/* 1823 */     apply_6(i);
/* 1824 */     apply_7(i);
/* 1825 */     apply_8(i);
/* 1826 */     apply_9(i);
/* 1827 */     apply_10(i);
/* 1828 */     apply_11(i);
/* 1829 */     apply_12(i);
/* 1830 */     apply_13(i);
/* 1831 */     apply_14(i);
/* 1832 */     apply_15(i);
/* 1833 */     apply_16(i);
/* 1834 */     apply_17(i);
/* 1835 */     apply_18(i);
/* 1836 */     apply_19(i);
/* 1837 */     apply_20(i);
/* 1838 */     apply_21(i);
/* 1839 */     apply_22(i);
/* 1840 */     apply_23(i);
/* 1841 */     apply_24(i);
/* 1842 */     apply_25(i);
/* 1843 */     apply_26(i);
/* 1844 */     apply_27(i);
/* 1845 */     apply_28(i);
/* 1846 */     apply_29(i);
/* 1847 */     apply_30(i);
/* 1848 */     apply_31(i);
/* 1849 */     apply_32(i);
/* 1850 */     apply_33(i);
/* 1851 */     apply_34(i);
/* 1852 */     apply_35(i);
/* 1853 */     apply_36(i);
/* 1854 */     apply_37(i);
/* 1855 */     final org.apache.spark.sql.Row value = new org.apache.spark.sql.catalyst.expressions.GenericRowWithSchema(values, schema);
/* 1856 */     if (false) {
/* 1857 */       mutableRow.setNullAt(0);
/* 1858 */     } else {
/* 1859 */
/* 1860 */       mutableRow.update(0, value);
/* 1861 */     }
/* 1862 */
/* 1863 */     return mutableRow;
/* 1864 */   }
/* 1865 */ }

17/11/03 14:41:44 INFO CodeGenerator: Code generated in 185.403029 ms
17/11/03 14:41:44 DEBUG DFSClient: DFSClient writeChunk allocating new packet seqno=7, src=/spark2-history/local-1509719784165.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=49152
17/11/03 14:41:44 DEBUG DFSClient: DFSClient flush(): bytesCurBlock=49481 lastFlushOffset=49369 createNewBlock=false
17/11/03 14:41:44 DEBUG DFSClient: Queued packet 7
17/11/03 14:41:44 DEBUG DFSClient: Waiting for ack for: 7
17/11/03 14:41:44 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: 7 offsetInBlock: 49152 lastPacketInBlock: false lastByteOffsetInBlock: 49481
17/11/03 14:41:44 DEBUG DFSClient: DFSClient seqno: 7 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 935499 flag: 0 flag: 0 flag: 0
res1: Array[org.apache.spark.sql.Row] = Array([99952,AAAAAAAAAHGIBAAA,751340,4370,8153,2451505,2451475,Steven              ,Finley                        ,N,2,10,1955,TUNISIA,null,Steven.Finley@9.edu                               ,2452398   ,99999,AAAAAAAAPJGIBAAA,1641963,292,15421,2452000,2451970,Mr.       ,Rex                 ,Reyes                         ,N,9,7,1981,GREECE,null,Rex.Reyes@saLGsYab.org                            ,2452297   ,99999,AAAAAAAAPJGIBAAA,1641963,292,15421,2452000,2451970,Mr.       ,Rex                 ,Reyes                         ,N,9,7,1981,GREECE,null,Rex.Reyes@saLGsYab.org                            ,2452297   ,99999,AAAAAAAAPJGIBAAA,1641963,292,15421,2452000,2451970,Mr.       ,Rex                 ,Reyes                         ,N,9,7,1981,GREECE,null,Re...
scala> 17/11/03 14:41:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #130
17/11/03 14:41:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #130
17/11/03 14:41:55 DEBUG ProtobufRpcEngine: Call: renewLease took 1ms
17/11/03 14:41:55 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:41:55 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:42:14 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:42:14 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 873790 flag: 0 flag: 0 flag: 0
17/11/03 14:42:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:42:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:42:25 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:42:25 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:42:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:42:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #131
17/11/03 14:42:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #131
17/11/03 14:42:25 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:42:25 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:42:25 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:42:44 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:42:44 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 880167 flag: 0 flag: 0 flag: 0
17/11/03 14:42:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:42:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:42:55 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:42:55 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:42:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:42:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #132
17/11/03 14:42:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #132
17/11/03 14:42:55 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:42:55 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:42:55 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:43:14 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:43:14 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 926968 flag: 0 flag: 0 flag: 0
17/11/03 14:43:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:43:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:43:25 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:43:25 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:43:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:43:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #133
17/11/03 14:43:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #133
17/11/03 14:43:25 DEBUG ProtobufRpcEngine: Call: renewLease took 3ms
17/11/03 14:43:25 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:43:25 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:43:44 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:43:44 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 814346 flag: 0 flag: 0 flag: 0
17/11/03 14:43:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:43:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:43:55 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:43:55 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:43:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #134
17/11/03 14:43:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:43:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #134
17/11/03 14:43:55 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:43:55 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:43:55 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:44:14 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:44:14 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 951067 flag: 0 flag: 0 flag: 0
17/11/03 14:44:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:44:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:44:25 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:44:25 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:44:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #135
17/11/03 14:44:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:44:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #135
17/11/03 14:44:25 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:44:25 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:44:25 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:44:44 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:44:44 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 836491 flag: 0 flag: 0 flag: 0
17/11/03 14:44:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:44:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:44:55 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:44:55 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:44:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:44:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #136
17/11/03 14:44:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #136
17/11/03 14:44:55 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:44:55 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:44:55 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:45:14 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:45:14 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 777437 flag: 0 flag: 0 flag: 0
17/11/03 14:45:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:45:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:45:25 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:45:25 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:45:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:45:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #137
17/11/03 14:45:25 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #137
17/11/03 14:45:25 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:45:25 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:45:25 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$Accept@30ff18b4 on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=0 selected=0
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 0/0 selected
17/11/03 14:45:40 DEBUG ManagedSelector: Running change org.spark_project.jetty.io.ManagedSelector$Accept@30ff18b4
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@25535af3 on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@25535af3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:40 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@25535af3
17/11/03 14:45:40 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG AbstractEndPoint: onOpen SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0}
17/11/03 14:45:40 DEBUG IdleTimeout: SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0} idle timeout check, elapsed: 0 ms, remaining: 30000 ms
17/11/03 14:45:40 DEBUG HttpChannel: new HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null} -> SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0},null,HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false}
17/11/03 14:45:40 DEBUG HttpConnection: New HTTP Connection HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG AbstractConnection: onOpen HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=0}
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=0}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:40 DEBUG ManagedSelector: Created SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=0}
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@25535af3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:40 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:40 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=0}:runUpdateKey
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=0}
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:40 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,2/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:40 DEBUG ChannelEndPoint: filled 432 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,2/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}] filled 432 HeapByteBuffer@3863f7f0[p=0,l=432,c=8192,r=432]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=0,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=432,c=8192,r=432]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:40 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=432,c=8192,r=432]={<<<GET /SQL/ HTTP/1.....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpParser: START --> SPACE1
17/11/03 14:45:40 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:45:40 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:45:40 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:45:40 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_NAME
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_NAME --> HEADER_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> END
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/} onRequestComplete
17/11/03 14:45:40 DEBUG HttpInput: HttpInputOverHTTP@69a6b6e1[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/}] parsed true HttpParser{s=END,0 of 0}
17/11/03 14:45:40 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of 0},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/}]
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=//dev2:4040/SQL/} handle //dev2:4040/SQL/
17/11/03 14:45:40 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=1,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/} action DISPATCH
17/11/03 14:45:40 DEBUG Server: REQUEST on HttpChannelOverHttp@74a2d306{r=1,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/}
GET /SQL/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:45:40 DEBUG ContextHandler: scope null||/SQL/ @ o.s.j.s.ServletContextHandler@55e42684{/SQL,null,AVAILABLE,@Spark}
17/11/03 14:45:40 DEBUG ContextHandler: context=/SQL||/ @ o.s.j.s.ServletContextHandler@55e42684{/SQL,null,AVAILABLE,@Spark}
17/11/03 14:45:40 DEBUG ServletHandler: servlet /SQL|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-3feebf9c@f89c896d==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:45:40 DEBUG ServletHandler: chain=null
17/11/03 14:45:40 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:45:40 DEBUG Server: RESPONSE for /SQL/ h=true
200 null
Date: Fri, 03 Nov 2017 14:45:40 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:45:40 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=1,c=false,a=COMPLETING,uri=//dev2:4040/SQL/} action COMPLETE
17/11/03 14:45:40 DEBUG HttpChannel: sendResponse info=null content=DirectByteBuffer@73e9ef20[p=0,l=4513,c=32768,r=4513]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>ntNode.querySelec...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=Blocker@61a0d15{null}
17/11/03 14:45:40 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=4} to HttpChannelOverHttp@74a2d306{r=1,c=true,a=COMPLETING,uri=//dev2:4040/SQL/}
17/11/03 14:45:40 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@715ff332] generate: NEED_HEADER (null,[p=0,l=4513,c=32768,r=4513],true)@START
17/11/03 14:45:40 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@715ff332] generate: FLUSH ([p=0,l=229,c=8192,r=229],[p=0,l=4513,c=32768,r=4513],true)@COMPLETING
17/11/03 14:45:40 DEBUG WriteFlusher: write: WriteFlusher@31b779cd{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=229,c=8192,r=229]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>ept: text/html,ap...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},DirectByteBuffer@73e9ef20[p=0,l=4513,c=32768,r=4513]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>ntNode.querySelec...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:45:40 DEBUG WriteFlusher: update WriteFlusher@31b779cd{WRITING}:IDLE-->WRITING
17/11/03 14:45:40 DEBUG ChannelEndPoint: flushed 4742 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,W,7/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG WriteFlusher: Flushed=true 229/229+1 WriteFlusher@31b779cd{WRITING}
17/11/03 14:45:40 DEBUG WriteFlusher: update WriteFlusher@31b779cd{IDLE}:WRITING-->IDLE
17/11/03 14:45:40 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@715ff332] generate: DONE ([p=229,l=229,c=8192,r=0],[p=4513,l=4513,c=32768,r=0],true)@END
17/11/03 14:45:40 DEBUG HttpParser: reset HttpParser{s=END,0 of 0}
17/11/03 14:45:40 DEBUG HttpParser: END --> START
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:45:40 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:40 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:45:40 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:40 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runFillable
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:40 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$Accept@4bb13618 on org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=0 selected=0
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 0/0 selected
17/11/03 14:45:40 DEBUG ManagedSelector: Running change org.spark_project.jetty.io.ManagedSelector$Accept@4bb13618
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@6e11f0b1 on org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=1 selected=0
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produced org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@6e11f0b1
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 dispatch
17/11/03 14:45:40 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@6e11f0b1
17/11/03 14:45:40 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 run
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce enter
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 producing
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG AbstractEndPoint: onOpen SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0}
17/11/03 14:45:40 DEBUG IdleTimeout: SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0} idle timeout check, elapsed: 0 ms, remaining: 30000 ms
17/11/03 14:45:40 DEBUG HttpChannel: new HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null} -> SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0},null,HttpChannelState@4d0147d1{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false}
17/11/03 14:45:40 DEBUG HttpConnection: New HTTP Connection HttpConnection@2cf4b2b8[SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,-,-,0/30000,null@0}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@14d2d0a{s=START},c=HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG AbstractConnection: onOpen HttpConnection@2cf4b2b8[SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,-,-,0/30000,HttpConnection@2cf4b2b8}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@14d2d0a{s=START},c=HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG AbstractConnection: fillInterested HttpConnection@2cf4b2b8[SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,-,-,0/30000,HttpConnection@2cf4b2b8}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@14d2d0a{s=START},c=HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@51e2ae7c{true,AC.ReadCB@2cf4b2b8{HttpConnection@2cf4b2b8[SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,0/30000,HttpConnection@2cf4b2b8}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@14d2d0a{s=START},c=HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@2cf4b2b8{HttpConnection@2cf4b2b8[SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,0/30000,HttpConnection@2cf4b2b8}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@14d2d0a{s=START},c=HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@51e2ae7c{true,AC.ReadCB@2cf4b2b8{HttpConnection@2cf4b2b8[SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,1/30000,HttpConnection@2cf4b2b8}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@14d2d0a{s=START},c=HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@2cf4b2b8{HttpConnection@2cf4b2b8[SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,1/30000,HttpConnection@2cf4b2b8}{io=0/0,kio=0,kro=0}][p=HttpParser{s=START,0 of 0},g=HttpGenerator@14d2d0a{s=START},c=HttpChannelOverHttp@75ae4a3{r=0,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,1/30000,HttpConnection@2cf4b2b8}{io=0/1,kio=0,kro=0}
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,1/30000,HttpConnection@2cf4b2b8}{io=0/1,kio=0,kro=0}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@4d14fb52 id=1 keys=1 selected=0
17/11/03 14:45:40 DEBUG ManagedSelector: Created SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,1/30000,HttpConnection@2cf4b2b8}{io=0/1,kio=0,kro=0}
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 ran org.spark_project.jetty.io.ManagedSelector$CreateEndPoint@6e11f0b1
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085 produce exit
17/11/03 14:45:40 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@47935085
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:40 DEBUG ManagedSelector: Running change SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,1/30000,HttpConnection@2cf4b2b8}{io=0/1,kio=0,kro=0}:runUpdateKey
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@25610eb2{/122.178.219.222:58854<->4040,Open,in,out,FI,-,1/30000,HttpConnection@2cf4b2b8}{io=1/1,kio=1,kro=0}
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,663/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,663/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,663/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:40 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,663/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:40 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,663/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,663/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,663/30000,HttpConnection@19474a32}{io=0/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,663/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:40 DEBUG ChannelEndPoint: filled 363 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,663/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}] filled 363 HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=1,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:40 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=363,c=8192,r=363]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpParser: START --> SPACE1
17/11/03 14:45:40 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:45:40 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:45:40 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:45:40 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:40 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:40 DEBUG HttpParser: HEADER --> END
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} onRequestComplete
17/11/03 14:45:40 DEBUG HttpInput: HttpInputOverHTTP@69a6b6e1[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:45:40 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}]
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} handle //dev2:4040/favicon.ico
17/11/03 14:45:40 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=2,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico} action DISPATCH
17/11/03 14:45:40 DEBUG Server: REQUEST on HttpChannelOverHttp@74a2d306{r=2,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
GET /favicon.ico HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:45:40 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@13a89dbf handle Request(GET //dev2:4040/favicon.ico)@71936ec8 in null
17/11/03 14:45:40 DEBUG ContextHandler: scope null||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:45:40 DEBUG ContextHandler: context=||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:45:40 DEBUG ServletHandler: servlet |/favicon.ico|null -> org.apache.spark.ui.JettyUtils$$anon$4-310a7859@9e7e45df==org.apache.spark.ui.JettyUtils$$anon$4,-1,true
17/11/03 14:45:40 DEBUG ServletHandler: chain=null
17/11/03 14:45:40 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@1bf1213f exclude by status 302
17/11/03 14:45:40 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@1950f6cf[p=0,l=0,c=0,r=0]={<<<>>>} complete=true committing=true callback=Blocker@61a0d15{null}
17/11/03 14:45:40 DEBUG HttpChannel: Commit HTTP/1.1{s=302,h=2} to HttpChannelOverHttp@74a2d306{r=2,c=true,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
17/11/03 14:45:40 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@3a890ee4] generate: NEED_HEADER (null,[p=0,l=0,c=0,r=0],true)@START
17/11/03 14:45:40 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@3a890ee4] generate: FLUSH ([p=0,l=143,c=8192,r=143],[p=0,l=0,c=0,r=0],true)@COMPLETING
17/11/03 14:45:40 DEBUG WriteFlusher: write: WriteFlusher@31b779cd{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=143,c=8192,r=143]={<<<HTTP/1.1 302 Foun...z-SNAPSHOT)\r\n\r\n>>>.36 (KHTML, like ...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:45:40 DEBUG WriteFlusher: update WriteFlusher@31b779cd{WRITING}:IDLE-->WRITING
17/11/03 14:45:40 DEBUG ChannelEndPoint: flushed 143 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,W,2/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG WriteFlusher: Flushed=true 143/143+0 WriteFlusher@31b779cd{WRITING}
17/11/03 14:45:40 DEBUG WriteFlusher: update WriteFlusher@31b779cd{IDLE}:WRITING-->IDLE
17/11/03 14:45:40 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@3a890ee4] generate: DONE ([p=143,l=143,c=8192,r=0],[p=0,l=0,c=0,r=0],true)@END
17/11/03 14:45:40 DEBUG Server: RESPONSE for /favicon.ico h=true
302 null
Date: Fri, 03 Nov 2017 14:45:40 GMT
Location: http://dev2:4040/jobs/


17/11/03 14:45:40 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=2,c=true,a=COMPLETING,uri=//dev2:4040/favicon.ico} action COMPLETE
17/11/03 14:45:40 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:45:40 DEBUG HttpParser: END --> START
17/11/03 14:45:40 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:45:40 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:40 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:45:40 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,2/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}
17/11/03 14:45:40 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:40 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:45:40 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}
17/11/03 14:45:40 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:40 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:45:40 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:40 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:41 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:45:41 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,471/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:41 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,471/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,471/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:41 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:41 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:41 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,471/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:41 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,471/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:41 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,471/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,471/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,471/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:41 DEBUG ChannelEndPoint: filled 357 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,472/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}] filled 357 HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=2,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:41 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=357,c=8192,r=357]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:41 DEBUG HttpParser: START --> SPACE1
17/11/03 14:45:41 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:45:41 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:45:41 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:45:41 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:41 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:41 DEBUG HttpParser: HEADER --> END
17/11/03 14:45:41 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=//dev2:4040/jobs/} onRequestComplete
17/11/03 14:45:41 DEBUG HttpInput: HttpInputOverHTTP@69a6b6e1[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=//dev2:4040/jobs/}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:45:41 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=//dev2:4040/jobs/}]
17/11/03 14:45:41 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=//dev2:4040/jobs/} handle //dev2:4040/jobs/
17/11/03 14:45:41 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:45:41 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=3,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/} action DISPATCH
17/11/03 14:45:41 DEBUG Server: REQUEST on HttpChannelOverHttp@74a2d306{r=3,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/}
GET /jobs/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:45:41 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@7c8cea75 handle Request(GET //dev2:4040/jobs/)@71936ec8 in null
17/11/03 14:45:41 DEBUG ContextHandler: scope null||/jobs/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:45:41 DEBUG ContextHandler: context=/jobs||/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:45:41 DEBUG ServletHandler: servlet /jobs|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-1283ca23@1a8bdbe7==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:45:41 DEBUG ServletHandler: chain=null
17/11/03 14:45:41 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:45:41 DEBUG Server: RESPONSE for /jobs/ h=true
200 null
Date: Fri, 03 Nov 2017 14:45:41 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:45:41 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:45:41 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=3,c=false,a=COMPLETING,uri=//dev2:4040/jobs/} action COMPLETE
17/11/03 14:45:41 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@33089fe5 compressing java.util.zip.Deflater@f10e41f
17/11/03 14:45:41 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@48b9ed77[p=0,l=2139,c=32768,r=2139]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19io\xE36\xF6...\x8e\xCcG\xD3\xC9\xFf\x00\x1fEy\xE0\x93\x1d\x00\x00>>>="tooltip" data-p...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=GzipBufferCB@5a0fad21
17/11/03 14:45:41 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=6} to HttpChannelOverHttp@74a2d306{r=3,c=true,a=COMPLETING,uri=//dev2:4040/jobs/}
17/11/03 14:45:41 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@d317a2b] generate: NEED_HEADER (null,[p=0,l=2139,c=32768,r=2139],true)@START
17/11/03 14:45:41 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@d317a2b] generate: FLUSH ([p=0,l=288,c=8192,r=288],[p=0,l=2139,c=32768,r=2139],true)@COMPLETING
17/11/03 14:45:41 DEBUG WriteFlusher: write: WriteFlusher@31b779cd{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=288,c=8192,r=288]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},HeapByteBuffer@48b9ed77[p=0,l=2139,c=32768,r=2139]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19io\xE36\xF6...\x8e\xCcG\xD3\xC9\xFf\x00\x1fEy\xE0\x93\x1d\x00\x00>>>="tooltip" data-p...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:45:41 DEBUG WriteFlusher: update WriteFlusher@31b779cd{WRITING}:IDLE-->WRITING
17/11/03 14:45:41 DEBUG ChannelEndPoint: flushed 2427 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,W,11/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:41 DEBUG WriteFlusher: Flushed=true 288/288+1 WriteFlusher@31b779cd{WRITING}
17/11/03 14:45:41 DEBUG WriteFlusher: update WriteFlusher@31b779cd{IDLE}:WRITING-->IDLE
17/11/03 14:45:41 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@d317a2b] generate: DONE ([p=288,l=288,c=8192,r=0],[p=2139,l=2139,c=32768,r=0],true)@END
17/11/03 14:45:41 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:45:41 DEBUG HttpParser: END --> START
17/11/03 14:45:41 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:45:41 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:41 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:41 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:45:41 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]
17/11/03 14:45:41 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]
17/11/03 14:45:41 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:41 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:41 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}
17/11/03 14:45:41 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:41 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:41 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:45:41 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:41 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}
17/11/03 14:45:41 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:45:41 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:41 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:43 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1740/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1740/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 446 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1741/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}] filled 446 HeapByteBuffer@3863f7f0[p=0,l=446,c=8192,r=446]={<<<GET /SQL/executio....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=3,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=446,c=8192,r=446]={<<<GET /SQL/executio....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:43 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=446,c=8192,r=446]={<<<GET /SQL/executio....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpParser: START --> SPACE1
17/11/03 14:45:43 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:45:43 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:45:43 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:45:43 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_NAME
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_NAME --> HEADER_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> END
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=//dev2:4040/SQL/execution?id=0} onRequestComplete
17/11/03 14:45:43 DEBUG HttpInput: HttpInputOverHTTP@69a6b6e1[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=//dev2:4040/SQL/execution?id=0}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:45:43 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=//dev2:4040/SQL/execution?id=0}]
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=//dev2:4040/SQL/execution?id=0} handle //dev2:4040/SQL/execution?id=0
17/11/03 14:45:43 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=4,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/execution?id=0} action DISPATCH
17/11/03 14:45:43 DEBUG Server: REQUEST on HttpChannelOverHttp@74a2d306{r=4,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/execution?id=0}
GET /SQL/execution HTTP/1.1
Host: dev2:4040
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:45:43 DEBUG ContextHandler: scope null||/SQL/execution @ o.s.j.s.ServletContextHandler@34cf0e80{/SQL/execution,null,AVAILABLE,@Spark}
17/11/03 14:45:43 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@1950f6cf[p=0,l=0,c=0,r=0]={<<<>>>} complete=true committing=true callback=Blocker@61a0d15{null}
17/11/03 14:45:43 DEBUG HttpChannel: Commit HTTP/1.1{s=302,h=2} to HttpChannelOverHttp@74a2d306{r=4,c=true,a=DISPATCHED,uri=//dev2:4040/SQL/execution?id=0}
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@bc050d1] generate: NEED_HEADER (null,[p=0,l=0,c=0,r=0],true)@START
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@bc050d1] generate: FLUSH ([p=0,l=157,c=8192,r=157],[p=0,l=0,c=0,r=0],true)@COMPLETING
17/11/03 14:45:43 DEBUG WriteFlusher: write: WriteFlusher@31b779cd{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=157,c=8192,r=157]={<<<HTTP/1.1 302 Foun...z-SNAPSHOT)\r\n\r\n>>>0_12_6) AppleWebK...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:45:43 DEBUG WriteFlusher: update WriteFlusher@31b779cd{WRITING}:IDLE-->WRITING
17/11/03 14:45:43 DEBUG ChannelEndPoint: flushed 157 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,W,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG WriteFlusher: Flushed=true 157/157+0 WriteFlusher@31b779cd{WRITING}
17/11/03 14:45:43 DEBUG WriteFlusher: update WriteFlusher@31b779cd{IDLE}:WRITING-->IDLE
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@bc050d1] generate: DONE ([p=157,l=157,c=8192,r=0],[p=0,l=0,c=0,r=0],true)@END
17/11/03 14:45:43 DEBUG Server: RESPONSE for /SQL/execution h=true
302 null
Date: Fri, 03 Nov 2017 14:45:43 GMT
Location: http://dev2:4040/SQL/execution/?id=0


17/11/03 14:45:43 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=4,c=true,a=COMPLETING,uri=//dev2:4040/SQL/execution?id=0} action COMPLETE
17/11/03 14:45:43 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:45:43 DEBUG HttpParser: END --> START
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:43 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:45:43 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]
17/11/03 14:45:43 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:43 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:43 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,317/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,317/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,317/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:43 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,317/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,317/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,317/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,317/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,317/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 447 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,317/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}] filled 447 HeapByteBuffer@3863f7f0[p=0,l=447,c=8192,r=447]={<<<GET /SQL/executio....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=4,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=447,c=8192,r=447]={<<<GET /SQL/executio....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:43 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=447,c=8192,r=447]={<<<GET /SQL/executio....8,en;q=0.6\r\n\r\n>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpParser: START --> SPACE1
17/11/03 14:45:43 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:45:43 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:45:43 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:45:43 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_NAME
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_NAME --> HEADER_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> END
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/execution/?id=0} onRequestComplete
17/11/03 14:45:43 DEBUG HttpInput: HttpInputOverHTTP@69a6b6e1[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/execution/?id=0}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:45:43 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/execution/?id=0}]
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=//dev2:4040/SQL/execution/?id=0} handle //dev2:4040/SQL/execution/?id=0
17/11/03 14:45:43 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=5,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/execution/?id=0} action DISPATCH
17/11/03 14:45:43 DEBUG Server: REQUEST on HttpChannelOverHttp@74a2d306{r=5,c=false,a=DISPATCHED,uri=//dev2:4040/SQL/execution/?id=0}
GET /SQL/execution/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Referer: http://dev2:4040/SQL/
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:45:43 DEBUG ContextHandler: scope null||/SQL/execution/ @ o.s.j.s.ServletContextHandler@34cf0e80{/SQL/execution,null,AVAILABLE,@Spark}
17/11/03 14:45:43 DEBUG ContextHandler: context=/SQL/execution||/ @ o.s.j.s.ServletContextHandler@34cf0e80{/SQL/execution,null,AVAILABLE,@Spark}
17/11/03 14:45:43 DEBUG ServletHandler: servlet /SQL/execution|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-4ae49387@5538ab61==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:45:43 DEBUG ServletHandler: chain=null
17/11/03 14:45:43 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:45:43 DEBUG Server: RESPONSE for /SQL/execution/ h=true
200 null
Date: Fri, 03 Nov 2017 14:45:43 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:45:43 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=5,c=false,a=COMPLETING,uri=//dev2:4040/SQL/execution/?id=0} action COMPLETE
17/11/03 14:45:43 DEBUG HttpChannel: sendResponse info=null content=DirectByteBuffer@73e9ef20[p=0,l=11930,c=32768,r=11930]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=Blocker@61a0d15{null}
17/11/03 14:45:43 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=4} to HttpChannelOverHttp@74a2d306{r=5,c=true,a=COMPLETING,uri=//dev2:4040/SQL/execution/?id=0}
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@620d3120] generate: NEED_HEADER (null,[p=0,l=11930,c=32768,r=11930],true)@START
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@620d3120] generate: FLUSH ([p=0,l=230,c=8192,r=230],[p=0,l=11930,c=32768,r=11930],true)@COMPLETING
17/11/03 14:45:43 DEBUG WriteFlusher: write: WriteFlusher@31b779cd{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=230,c=8192,r=230]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>ri/537.36\r\nAccept...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},DirectByteBuffer@73e9ef20[p=0,l=11930,c=32768,r=11930]={<<<<!DOCTYPE html><h...dy>\n    </html>>>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:45:43 DEBUG WriteFlusher: update WriteFlusher@31b779cd{WRITING}:IDLE-->WRITING
17/11/03 14:45:43 DEBUG ChannelEndPoint: flushed 12160 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,W,23/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG WriteFlusher: Flushed=true 230/230+1 WriteFlusher@31b779cd{WRITING}
17/11/03 14:45:43 DEBUG WriteFlusher: update WriteFlusher@31b779cd{IDLE}:WRITING-->IDLE
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=4},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@620d3120] generate: DONE ([p=230,l=230,c=8192,r=0],[p=11930,l=11930,c=32768,r=0],true)@END
17/11/03 14:45:43 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:45:43 DEBUG HttpParser: END --> START
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:43 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:45:43 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]
17/11/03 14:45:43 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:43 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/1,kio=0,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}
17/11/03 14:45:43 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,593/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,593/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,593/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:43 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,593/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,593/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,593/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,593/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,593/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 378 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,593/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}] filled 378 HeapByteBuffer@3863f7f0[p=0,l=378,c=8192,r=378]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=5,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=378,c=8192,r=378]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:43 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=378,c=8192,r=378]={<<<GET /favicon.ico ....8,en;q=0.6\r\n\r\n>>>oding: gzip, defl...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpParser: START --> SPACE1
17/11/03 14:45:43 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:45:43 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:45:43 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:45:43 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:43 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:43 DEBUG HttpParser: HEADER --> END
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} onRequestComplete
17/11/03 14:45:43 DEBUG HttpInput: HttpInputOverHTTP@69a6b6e1[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:45:43 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico}]
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=//dev2:4040/favicon.ico} handle //dev2:4040/favicon.ico
17/11/03 14:45:43 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=6,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico} action DISPATCH
17/11/03 14:45:43 DEBUG Server: REQUEST on HttpChannelOverHttp@74a2d306{r=6,c=false,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
GET /favicon.ico HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/execution/?id=0
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:45:43 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@13a89dbf handle Request(GET //dev2:4040/favicon.ico)@71936ec8 in null
17/11/03 14:45:43 DEBUG ContextHandler: scope null||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:45:43 DEBUG ContextHandler: context=||/favicon.ico @ o.s.j.s.ServletContextHandler@6f731759{/,null,AVAILABLE,@Spark}
17/11/03 14:45:43 DEBUG ServletHandler: servlet |/favicon.ico|null -> org.apache.spark.ui.JettyUtils$$anon$4-310a7859@9e7e45df==org.apache.spark.ui.JettyUtils$$anon$4,-1,true
17/11/03 14:45:43 DEBUG ServletHandler: chain=null
17/11/03 14:45:43 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@6713b84b exclude by status 302
17/11/03 14:45:43 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@1950f6cf[p=0,l=0,c=0,r=0]={<<<>>>} complete=true committing=true callback=Blocker@61a0d15{null}
17/11/03 14:45:43 DEBUG HttpChannel: Commit HTTP/1.1{s=302,h=2} to HttpChannelOverHttp@74a2d306{r=6,c=true,a=DISPATCHED,uri=//dev2:4040/favicon.ico}
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@51931aa9] generate: NEED_HEADER (null,[p=0,l=0,c=0,r=0],true)@START
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@51931aa9] generate: FLUSH ([p=0,l=143,c=8192,r=143],[p=0,l=0,c=0,r=0],true)@COMPLETING
17/11/03 14:45:43 DEBUG WriteFlusher: write: WriteFlusher@31b779cd{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=143,c=8192,r=143]={<<<HTTP/1.1 302 Foun...z-SNAPSHOT)\r\n\r\n>>>.36 (KHTML, like ...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:45:43 DEBUG WriteFlusher: update WriteFlusher@31b779cd{WRITING}:IDLE-->WRITING
17/11/03 14:45:43 DEBUG ChannelEndPoint: flushed 143 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,W,2/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG WriteFlusher: Flushed=true 143/143+0 WriteFlusher@31b779cd{WRITING}
17/11/03 14:45:43 DEBUG WriteFlusher: update WriteFlusher@31b779cd{IDLE}:WRITING-->IDLE
17/11/03 14:45:43 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=302,h=2},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@51931aa9] generate: DONE ([p=143,l=143,c=8192,r=0],[p=0,l=0,c=0,r=0],true)@END
17/11/03 14:45:43 DEBUG Server: RESPONSE for /favicon.ico h=true
302 null
Date: Fri, 03 Nov 2017 14:45:43 GMT
Location: http://dev2:4040/jobs/


17/11/03 14:45:43 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=6,c=true,a=COMPLETING,uri=//dev2:4040/favicon.ico} action COMPLETE
17/11/03 14:45:43 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:45:43 DEBUG HttpParser: END --> START
17/11/03 14:45:43 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:43 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 302 Foun...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:45:43 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]
17/11/03 14:45:43 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:43 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:45:43 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}
17/11/03 14:45:43 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:43 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}:runFillable
17/11/03 14:45:43 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:43 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:44 DEBUG ManagedSelector: Selector loop woken up from select, 1/1 selected
17/11/03 14:45:44 DEBUG SelectChannelEndPoint: onSelected 1->0 r=true w=false for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,303/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}
17/11/03 14:45:44 DEBUG SelectChannelEndPoint: task SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,303/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produced SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,303/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 dispatch
17/11/03 14:45:44 DEBUG QueuedThreadPool: queue EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,303/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}:runFillable
17/11/03 14:45:44 DEBUG QueuedThreadPool: run EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Pend/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 run
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce enter
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 producing
17/11/03 14:45:44 DEBUG SelectChannelEndPoint: Key interests updated 1 -> 0 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,303/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:44 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,303/30000,HttpConnection@19474a32}{io=1/0,kio=1,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]}} fillable AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,303/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:44 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,304/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}] onFillable enter HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:44 DEBUG ChannelEndPoint: filled 372 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,304/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}] filled 372 HeapByteBuffer@3863f7f0[p=0,l=372,c=8192,r=372]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=6,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=372,c=8192,r=372]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:44 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=372,c=8192,r=372]={<<<GET /jobs/ HTTP/1....8,en;q=0.6\r\n\r\n>>>.6\r\n\r\noding: gzip...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:44 DEBUG HttpParser: START --> SPACE1
17/11/03 14:45:44 DEBUG HttpParser: SPACE1 --> URI
17/11/03 14:45:44 DEBUG HttpParser: URI --> SPACE2
17/11/03 14:45:44 DEBUG HttpParser: SPACE2 --> REQUEST_VERSION
17/11/03 14:45:44 DEBUG HttpParser: REQUEST_VERSION --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> HEADER_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_VALUE --> HEADER_IN_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> HEADER_IN_VALUE
17/11/03 14:45:44 DEBUG HttpParser: HEADER_IN_VALUE --> HEADER
17/11/03 14:45:44 DEBUG HttpParser: HEADER --> END
17/11/03 14:45:44 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/} onRequestComplete
17/11/03 14:45:44 DEBUG HttpInput: HttpInputOverHTTP@69a6b6e1[c=0,q=1,[0]=EOF,s=STREAM] addContent EOF
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/}] parsed true HttpParser{s=END,0 of -1}
17/11/03 14:45:44 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=END,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/}]
17/11/03 14:45:44 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=//dev2:4040/jobs/} handle //dev2:4040/jobs/
17/11/03 14:45:44 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} handling IDLE
17/11/03 14:45:44 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=7,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/} action DISPATCH
17/11/03 14:45:44 DEBUG Server: REQUEST on HttpChannelOverHttp@74a2d306{r=7,c=false,a=DISPATCHED,uri=//dev2:4040/jobs/}
GET /jobs/ HTTP/1.1
Host: dev2:4040
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://dev2:4040/SQL/execution/?id=0
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.8,en;q=0.6


17/11/03 14:45:44 DEBUG GzipHandler: org.spark_project.jetty.server.handler.gzip.GzipHandler@7c8cea75 handle Request(GET //dev2:4040/jobs/)@71936ec8 in null
17/11/03 14:45:44 DEBUG ContextHandler: scope null||/jobs/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:45:44 DEBUG ContextHandler: context=/jobs||/ @ o.s.j.s.ServletContextHandler@1f10fec6{/jobs,null,AVAILABLE,@Spark}
17/11/03 14:45:44 DEBUG ServletHandler: servlet /jobs|/|null -> org.apache.spark.ui.JettyUtils$$anon$3-1283ca23@1a8bdbe7==org.apache.spark.ui.JettyUtils$$anon$3,-1,true
17/11/03 14:45:44 DEBUG ServletHandler: chain=null
17/11/03 14:45:44 DEBUG SecurityManager: user=null aclsEnabled=false viewAcls=ec2-user viewAclsGroups=
17/11/03 14:45:44 DEBUG Server: RESPONSE for /jobs/ h=true
200 null
Date: Fri, 03 Nov 2017 14:45:44 GMT
Content-Type: text/html;charset=utf-8
Cache-Control: no-cache, no-store, must-revalidate
X-Frame-Options: SAMEORIGIN


17/11/03 14:45:44 DEBUG HttpChannelState: HttpChannelState@267c08cc{s=DISPATCHED a=NOT_ASYNC i=true r=!P!U w=false} unhandle DISPATCHED
17/11/03 14:45:44 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=7,c=false,a=COMPLETING,uri=//dev2:4040/jobs/} action COMPLETE
17/11/03 14:45:44 DEBUG GzipHttpOutputInterceptor: org.spark_project.jetty.server.handler.gzip.GzipHttpOutputInterceptor@7796459c compressing java.util.zip.Deflater@2fcb2bce
17/11/03 14:45:44 DEBUG HttpChannel: sendResponse info=null content=HeapByteBuffer@d1c8628[p=0,l=2138,c=32768,r=2138]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19io\xE36\xF6...PG\xE6\xA3\xE9\xE4}ay\x82\x93\x1d\x00\x00>>>e="tooltip" data-...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} complete=true committing=true callback=GzipBufferCB@7ac37ed4
17/11/03 14:45:44 DEBUG HttpChannel: Commit HTTP/1.1{s=200,h=6} to HttpChannelOverHttp@74a2d306{r=7,c=true,a=COMPLETING,uri=//dev2:4040/jobs/}
17/11/03 14:45:44 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@7505563c] generate: NEED_HEADER (null,[p=0,l=2138,c=32768,r=2138],true)@START
17/11/03 14:45:44 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@7505563c] generate: FLUSH ([p=0,l=288,c=8192,r=288],[p=0,l=2138,c=32768,r=2138],true)@COMPLETING
17/11/03 14:45:44 DEBUG WriteFlusher: write: WriteFlusher@31b779cd{IDLE} [HeapByteBuffer@3863f7f0[p=0,l=288,c=8192,r=288]={<<<HTTP/1.1 200 OK\r\n...z-SNAPSHOT)\r\n\r\n>>>d=0\r\nAccept-Encod...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00},HeapByteBuffer@d1c8628[p=0,l=2138,c=32768,r=2138]={<<<\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\xBd\x19io\xE36\xF6...PG\xE6\xA3\xE9\xE4}ay\x82\x93\x1d\x00\x00>>>e="tooltip" data-...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}]
17/11/03 14:45:44 DEBUG WriteFlusher: update WriteFlusher@31b779cd{WRITING}:IDLE-->WRITING
17/11/03 14:45:44 DEBUG ChannelEndPoint: flushed 2426 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,W,9/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:44 DEBUG WriteFlusher: Flushed=true 288/288+1 WriteFlusher@31b779cd{WRITING}
17/11/03 14:45:44 DEBUG WriteFlusher: update WriteFlusher@31b779cd{IDLE}:WRITING-->IDLE
17/11/03 14:45:44 DEBUG HttpConnection: org.spark_project.jetty.server.HttpConnection$SendCallback@76d818[PROCESSING][i=HTTP/1.1{s=200,h=6},cb=org.spark_project.jetty.server.HttpChannel$CommitCallback@7505563c] generate: DONE ([p=288,l=288,c=8192,r=0],[p=2138,l=2138,c=32768,r=0],true)@END
17/11/03 14:45:44 DEBUG HttpParser: reset HttpParser{s=END,0 of -1}
17/11/03 14:45:44 DEBUG HttpParser: END --> START
17/11/03 14:45:44 DEBUG HttpChannel: HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null} handle exit, result COMPLETE
17/11/03 14:45:44 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:44 DEBUG ChannelEndPoint: filled 0 SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}] filled 0 HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}] parse HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00} {}
17/11/03 14:45:44 DEBUG HttpParser: parseNext s=START HeapByteBuffer@3863f7f0[p=0,l=0,c=8192,r=0]={<<<>>>HTTP/1.1 200 OK\r\n...\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}] parsed false HttpParser{s=START,0 of -1}
17/11/03 14:45:44 DEBUG HttpConnection: releaseRequestBuffer HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}]
17/11/03 14:45:44 DEBUG AbstractConnection: fillInterested HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,-,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}]
17/11/03 14:45:44 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:44 DEBUG FillInterest: FillInterest@70eccb15{true,AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,0/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}]}} register AC.ReadCB@19474a32{HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/0,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}]}
17/11/03 14:45:44 DEBUG SelectChannelEndPoint: changeInterests p=false 0->1 for SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}
17/11/03 14:45:44 DEBUG ManagedSelector: Queued change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey on org.spark_project.jetty.io.ManagedSelector@1cdced2e id=0 keys=1 selected=0
17/11/03 14:45:44 DEBUG HttpConnection: HttpConnection@19474a32[SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}][p=HttpParser{s=START,0 of -1},g=HttpGenerator@12b400a6{s=START},c=HttpChannelOverHttp@74a2d306{r=7,c=false,a=IDLE,uri=null}] onFillable exit HttpChannelState@267c08cc{s=IDLE a=NOT_ASYNC i=true r=!P!U w=false} null
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 ran SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,1/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runFillable
17/11/03 14:45:44 DEBUG ExecuteProduceConsume: EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3 produce exit
17/11/03 14:45:44 DEBUG QueuedThreadPool: ran EPC Prod/org.spark_project.jetty.io.ManagedSelector$SelectorProducer@275ff3f3
17/11/03 14:45:44 DEBUG ManagedSelector: Selector loop woken up from select, 0/1 selected
17/11/03 14:45:44 DEBUG ManagedSelector: Running change SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=0/1,kio=0,kro=1}:runUpdateKey
17/11/03 14:45:44 DEBUG SelectChannelEndPoint: Key interests updated 0 -> 1 on SelectChannelEndPoint@9b0491d{/122.178.219.222:58853<->4040,Open,in,out,FI,-,2/30000,HttpConnection@19474a32}{io=1/1,kio=1,kro=1}
17/11/03 14:45:44 DEBUG ManagedSelector: Selector loop waiting on select
17/11/03 14:45:44 DEBUG DFSClient: DataStreamer block BP-387439159-172.30.1.247-1493051499278:blk_1074043521_302750 sending packet packet seqno: -1 offsetInBlock: 0 lastPacketInBlock: false lastByteOffsetInBlock: 0
17/11/03 14:45:44 DEBUG DFSClient: DFSClient seqno: -1 reply: SUCCESS reply: SUCCESS reply: SUCCESS downstreamAckTimeNanos: 962917 flag: 0 flag: 0 flag: 0
17/11/03 14:45:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: closed
17/11/03 14:45:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: stopped, remaining connections 0
17/11/03 14:45:55 DEBUG Client: The ping interval is 60000 ms.
17/11/03 14:45:55 DEBUG Client: Connecting to ip-172-30-1-247.ec2.internal/172.30.1.247:8020
17/11/03 14:45:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user: starting, having connections 1
17/11/03 14:45:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user sending #138
17/11/03 14:45:55 DEBUG Client: IPC Client (1821330375) connection to ip-172-30-1-247.ec2.internal/172.30.1.247:8020 from ec2-user got value #138
17/11/03 14:45:55 DEBUG ProtobufRpcEngine: Call: renewLease took 2ms
17/11/03 14:45:55 DEBUG LeaseRenewer: Lease renewed for client DFSClient_NONMAPREDUCE_2074014527_1
17/11/03 14:45:55 DEBUG LeaseRenewer: Lease renewer daemon for [DFSClient_NONMAPREDUCE_2074014527_1] with renew id 1 executed
